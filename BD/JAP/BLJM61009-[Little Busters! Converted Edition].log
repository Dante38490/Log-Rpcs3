LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 v0.0.0.6-3741-98ddf6e
G: ! 
G: ! Stopping emulator...
LDR: ! Loading 'D:/Emulateurs/Rpcs3/dev_hdd0/game/BLJM61009-[Little Busters! Converted Edition]/PS3_GAME/USRDIR/BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLJM61009-[Little Busters! Converted Edition]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BLJM61009-[Little Busters! Converted Edition]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! Settings:
LDR: ! CPU: PPU Interpreter 2
LDR: ! SPU: SPU Recompiler (ASMJIT)
LDR: ! Renderer: DirectX 12
LDR: ! D3D Adapter: WARP
LDR: ! Resolution: 1280x720
LDR: ! Write Depth Buffer: No
LDR: ! Write Color Buffers: No
LDR: ! Read Color Buffers: No
LDR: ! Read Depth Buffer: No
LDR: ! Audio Out: XAudio2
LDR: ! Log Everything: No
LDR: ! RSX Logging: No
LDR: ! 
LDR: ! Title: Little Busters! Converted Edition 
LDR: ! Serial: BLJM61009
LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x430001
LDR: ! *** primary prio: 1001
LDR: ! *** primary stacksize: 0x100000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function 'cellAtracSetDataAndGetMemSize' in 'cellAtrac' module (0x1d70ec)
LDR: ! Imported function 'cellAtracDeleteDecoder' in 'cellAtrac' module (0x1d710c)
LDR: ! Imported function 'cellAtracSetLoopNum' in 'cellAtrac' module (0x1d712c)
LDR: ! Imported function 'cellAtracDecode' in 'cellAtrac' module (0x1d714c)
LDR: ! Imported function 'cellAtracGetInternalErrorInfo' in 'cellAtrac' module (0x1d716c)
LDR: ! Imported function 'cellAtracCreateDecoder' in 'cellAtrac' module (0x1d718c)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0x1d71ac)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0x1d71cc)
LDR: ! Imported function 'cellAudioSetNotifyEventQueue' in 'cellAudio' module (0x1d824c)
LDR: ! Imported function 'cellAudioGetPortTimestamp' in 'cellAudio' module (0x1d826c)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0x1d828c)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0x1d82ac)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0x1d82cc)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0x1d82ec)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0x1d830c)
LDR: ! Imported function 'cellAudioGetPortBlockTag' in 'cellAudio' module (0x1d832c)
LDR: ! Imported function 'cellAudioRemoveNotifyEventQueue' in 'cellAudio' module (0x1d834c)
LDR: ! Imported function 'cellFsRmdir' in 'sys_fs' module (0x1d71ec)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0x1d720c)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0x1d722c)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0x1d724c)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0x1d726c)
LDR: ! Imported function 'cellFsUnlink' in 'sys_fs' module (0x1d728c)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0x1d72ac)
LDR: ! Imported function 'cellFsSdataOpen' in 'sys_fs' module (0x1d72cc)
LDR: ! Imported function 'cellFsMkdir' in 'sys_fs' module (0x1d72ec)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0x1d730c)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0x1d732c)
LDR: ! Imported function 'cellGcmGetTiledPitchSize' in 'cellGcmSys' module (0x1d734c)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0x1d736c)
LDR: ! Imported function '_cellGcmSetFlipCommand' in 'cellGcmSys' module (0x1d738c)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0x1d73ac)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0x1d73cc)
LDR: ! Imported function 'cellGcmBindTile' in 'cellGcmSys' module (0x1d73ec)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0x1d740c)
LDR: ! Imported function 'cellGcmGetDefaultCommandWordSize' in 'cellGcmSys' module (0x1d742c)
LDR: ! Imported function 'cellGcmGetLastFlipTime' in 'cellGcmSys' module (0x1d744c)
LDR: ! Imported function 'cellGcmGetFlipStatus' in 'cellGcmSys' module (0x1d746c)
LDR: ! Imported function 'cellGcmGetDefaultSegmentWordSize' in 'cellGcmSys' module (0x1d748c)
LDR: ! Imported function 'cellGcmSetDefaultFifoSize' in 'cellGcmSys' module (0x1d74ac)
LDR: ! Imported function 'cellGcmBindZcull' in 'cellGcmSys' module (0x1d74cc)
LDR: ! Imported function 'cellGcmMapMainMemory' in 'cellGcmSys' module (0x1d74ec)
LDR: ! Imported function 'cellGcmSetFlipStatus' in 'cellGcmSys' module (0x1d750c)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0x1d752c)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0x1d754c)
LDR: ! Imported function 'cellGcmSetVBlankHandler' in 'cellGcmSys' module (0x1d756c)
LDR: ! Imported function 'cellGcmResetFlipStatus' in 'cellGcmSys' module (0x1d758c)
LDR: ! Imported function 'cellGcmSetTileInfo' in 'cellGcmSys' module (0x1d75ac)
LDR: ! Imported function 'cellGcmInitDefaultFifoMode' in 'cellGcmSys' module (0x1d75cc)
LDR: ! Imported function '_cellGcmSetFlipCommandWithWaitLabel' in 'cellGcmSys' module (0x1d75ec)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0x1d760c)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0x1d762c)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0x1d764c)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0x1d766c)
LDR: ! Imported function 'cellPadGetInfo2' in 'sys_io' module (0x1d768c)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module (0x1d76ac)
LDR: ! Imported function 'SJISstoUTF8s' in 'cellL10n' module (0x1d76cc)
LDR: ! Imported function 'UTF8stoSJISs' in 'cellL10n' module (0x1d76ec)
LDR: ! Imported function 'UTF16stoUTF8s' in 'cellL10n' module (0x1d770c)
LDR: ! Imported function 'UTF8stoUTF16s' in 'cellL10n' module (0x1d772c)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0x1d774c)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0x1d776c)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0x1d778c)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0x1d77ac)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0x1d77cc)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0x1d77ec)
LDR: ! Imported function 'sys_prx_register_library' in 'sysPrxForUser' module (0x1d780c)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0x1d782c)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0x1d784c)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module (0x1d786c)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0x1d788c)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0x1d78ac)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0x1d78cc)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0x1d78ec)
LDR: ! Imported function '_sys_heap_malloc' in 'sysPrxForUser' module (0x1d836c)
LDR: ! Imported function '_sys_heap_memalign' in 'sysPrxForUser' module (0x1d838c)
LDR: ! Imported function '_sys_heap_free' in 'sysPrxForUser' module (0x1d83ac)
LDR: ! Imported function 'sys_lwmutex_trylock' in 'sysPrxForUser' module (0x1d83cc)
LDR: ! Imported function '_sys_heap_delete_heap' in 'sysPrxForUser' module (0x1d83ec)
LDR: ! Imported function '_sys_heap_create_heap' in 'sysPrxForUser' module (0x1d840c)
LDR: ! Imported function 'cellPngEncClose' in 'cellPngEnc' module (0x1d790c)
LDR: ! Imported function 'cellPngEncOpen' in 'cellPngEnc' module (0x1d792c)
LDR: ! Imported function 'cellPngEncQueryAttr' in 'cellPngEnc' module (0x1d794c)
LDR: ! Imported function 'cellPngEncGetStreamInfo' in 'cellPngEnc' module (0x1d796c)
LDR: ! Imported function 'cellPngEncEncodePicture' in 'cellPngEnc' module (0x1d798c)
LDR: ! Imported function 'cellPngEncWaitForInput' in 'cellPngEnc' module (0x1d79ac)
LDR: ! Imported function 'cellPngEncWaitForOutput' in 'cellPngEnc' module (0x1d79cc)
LDR: ! Imported function 'cellSailGraphicsAdapterGetFrame' in 'cellSail' module (0x1d79ec)
LDR: ! Imported function 'cellSailFutureReset' in 'cellSail' module (0x1d7a0c)
LDR: ! Imported function 'cellSailPlayerSetSoundAdapter' in 'cellSail' module (0x1d7a2c)
LDR: ! Imported function 'cellSailDescriptorClose' in 'cellSail' module (0x1d7a4c)
LDR: ! Imported function 'cellSailPlayerFinalize' in 'cellSail' module (0x1d7a6c)
LDR: ! Imported function 'cellSailPlayerSetGraphicsAdapter' in 'cellSail' module (0x1d7a8c)
LDR: ! Imported function 'cellSailGraphicsAdapterInitialize' in 'cellSail' module (0x1d7aac)
LDR: ! Imported function 'cellSailPlayerInitialize2' in 'cellSail' module (0x1d7acc)
LDR: ! Imported function 'cellSailGraphicsAdapterSetPreferredFormat' in 'cellSail' module (0x1d7aec)
LDR: ! Imported function 'cellSailMemAllocatorInitialize' in 'cellSail' module (0x1d7b0c)
LDR: ! Imported function 'cellSailPlayerOpenStream' in 'cellSail' module (0x1d7b2c)
LDR: ! Imported function 'cellSailFutureGet' in 'cellSail' module (0x1d7b4c)
LDR: ! Imported function 'cellSailSoundAdapterInitialize' in 'cellSail' module (0x1d7b6c)
LDR: ! Imported function 'cellSailGraphicsAdapterUpdateAvSync' in 'cellSail' module (0x1d7b8c)
LDR: ! Imported function 'cellSailFutureInitialize' in 'cellSail' module (0x1d7bac)
LDR: ! Imported function 'cellSailGraphicsAdapterFinalize' in 'cellSail' module (0x1d7bcc)
LDR: ! Imported function 'cellSailPlayerAddDescriptor' in 'cellSail' module (0x1d7bec)
LDR: ! Imported function 'cellSailSoundAdapterGetFrame' in 'cellSail' module (0x1d7c0c)
LDR: ! Imported function 'cellSailPlayerCloseStream' in 'cellSail' module (0x1d7c2c)
LDR: ! Imported function 'cellSailFutureFinalize' in 'cellSail' module (0x1d7c4c)
LDR: ! Imported function 'cellSailPlayerRemoveDescriptor' in 'cellSail' module (0x1d7c6c)
LDR: ! Imported function 'cellSailFutureSet' in 'cellSail' module (0x1d7c8c)
LDR: ! Imported function 'cellSailPlayerBoot' in 'cellSail' module (0x1d7cac)
LDR: ! Imported function 'cellSailSoundAdapterFinalize' in 'cellSail' module (0x1d7ccc)
LDR: ! Imported function 'cellSailPlayerCreateDescriptor' in 'cellSail' module (0x1d7cec)
LDR: ! Imported function 'cellSailPlayerStart' in 'cellSail' module (0x1d7d0c)
LDR: ! Imported function 'cellSailPlayerStop' in 'cellSail' module (0x1d7d2c)
LDR: ! Imported function 'cellSailSoundAdapterUpdateAvSync' in 'cellSail' module (0x1d7d4c)
LDR: ! Imported function 'cellSailPlayerDestroyDescriptor' in 'cellSail' module (0x1d7d6c)
LDR: ! Imported function 'cellSailGraphicsAdapterGetFormat' in 'cellSail' module (0x1d7d8c)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0x1d7dac)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0x1d7dcc)
LDR: ! Imported function 'cellGameCreateGameData' in 'cellGame' module (0x1d7dec)
LDR: ! Imported function 'cellGameContentPermit' in 'cellGame' module (0x1d7e0c)
LDR: ! Imported function 'cellGameDeleteGameData' in 'cellGame' module (0x1d7e2c)
LDR: ! Imported function 'cellGameDataCheck' in 'cellGame' module (0x1d7e4c)
LDR: ! Imported function 'cellGameBootCheck' in 'cellGame' module (0x1d7e6c)
LDR: ! Imported function 'sceNpTerm' in 'sceNp' module (0x1d7e8c)
LDR: ! Imported function 'sceNpTrophyRegisterContext' in 'sceNpTrophy' module (0x1d7eac)
LDR: ! Imported function 'sceNpTrophyCreateHandle' in 'sceNpTrophy' module (0x1d7ecc)
LDR: ! Imported function 'sceNpTrophyGetRequiredDiskSpace' in 'sceNpTrophy' module (0x1d7eec)
LDR: ! Imported function 'sceNpTrophyInit' in 'sceNpTrophy' module (0x1d7f0c)
LDR: ! Imported function 'sceNpTrophyUnlockTrophy' in 'sceNpTrophy' module (0x1d7f2c)
LDR: ! Imported function 'sceNpTrophyCreateContext' in 'sceNpTrophy' module (0x1d7f4c)
LDR: ! Imported function 'cellScreenShotEnable' in 'cellScreenShotUtility' module (0x1d7f6c)
LDR: ! Imported function 'cellScreenShotSetParameter' in 'cellScreenShotUtility' module (0x1d7f8c)
LDR: ! Imported function 'cellScreenShotDisable' in 'cellScreenShotUtility' module (0x1d7fac)
LDR: ! Imported function 'cellSysutilUnregisterCallback' in 'cellSysutil' module (0x1d7fcc)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0x1d7fec)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0x1d800c)
LDR: ! Imported function 'cellSaveDataListLoad2' in 'cellSysutil' module (0x1d802c)
LDR: ! Imported function 'cellMsgDialogClose' in 'cellSysutil' module (0x1d804c)
LDR: ! Imported function 'cellSaveDataListSave2' in 'cellSysutil' module (0x1d806c)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0x1d808c)
LDR: ! Imported function 'cellMsgDialogOpen2' in 'cellSysutil' module (0x1d80ac)
LDR: ! Imported function 'cellAudioOutGetDeviceInfo' in 'cellSysutil' module (0x1d80cc)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0x1d80ec)
LDR: ! Imported function 'cellSaveDataAutoSave2' in 'cellSysutil' module (0x1d810c)
LDR: ! Imported function 'cellMsgDialogProgressBarInc' in 'cellSysutil' module (0x1d812c)
LDR: ! Imported function 'cellMsgDialogProgressBarSetMsg' in 'cellSysutil' module (0x1d814c)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0x1d816c)
LDR: ! Imported function 'cellVideoOutGetResolutionAvailability' in 'cellSysutil' module (0x1d818c)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0x1d81ac)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0x1d81cc)
LDR: ! Imported function 'cellAudioOutGetConfiguration' in 'cellSysutil' module (0x1d81ec)
LDR: ! Imported function 'cellSaveDataDelete2' in 'cellSysutil' module (0x1d820c)
LDR: ! Imported function 'cellSaveDataAutoLoad2' in 'cellSysutil' module (0x1d822c)
MEM: ! Thread Local Storage initialized (g_tls_start=0x1898000, user_size=0x110)
*** TLS segment addr: 0x00206dec
*** TLS segment size: 0x00000004
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x18947a0, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001b14a4]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd00ffc04)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x18945a0, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1893d30, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1893d58, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1893d80, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1893c68, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1893c90, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1893cb8, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1893ce0, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1893d08, attr=*0x1dca78)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x180fed0, attr=*0x180fee8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x174e680, attr=*0x174e698)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x174e720, attr=*0x174e738)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x53c988, attr=*0x53c9a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x53c9b0, attr=*0x53c9c8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001afda0]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd00ff8f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4ec198, attr=*0x4ec1b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4ebd88, attr=*0x4ebda0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d77cc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4ebd10, attr=*0x4ebd28)
HLE: W {PPU[0x1] Thread (main_thread)[0x00094348]} sys_spu: sys_spu_initialize(max_usable_spu=6, max_raw_spu=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0052: CELL_SYSMODULE_PNGENC)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0013: CELL_SYSMODULE_ATRAC3PLUS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0012: CELL_SYSMODULE_PAMF)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x001d: CELL_SYSMODULE_SAIL)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x001e: CELL_SYSMODULE_L10N)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0031: CELL_SYSMODULE_AVCONF_EXT)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x004e: CELL_SYSMODULE_SYSUTIL_SCREENSHOT)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7dcc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0016: CELL_SYSMODULE_SYSUTIL_NP)
HLE: W {PPU[0x1] Thread (main_thread)[0x001afda0]} sys_memory: sys_memory_allocate(size=0x200000, flags=0x400, alloc_addr=*0xd00ff140)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d762c]} sys_io: cellPadInit(max_connect=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d816c]} cellSysutil: cellSysutilRegisterCallback(slot=0, func=*0x1ffa08, userdata=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d75cc]} cellGcmSys: cellGcmInitDefaultFifoMode(mode=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001afda0]} sys_memory: sys_memory_allocate(size=0x800000, flags=0x400, alloc_addr=*0xd00ff110)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d736c]} cellGcmSys: _cellGcmInitBody(context=**0x18947d0, cmdSize=0x200000, ioSize=0x600000, ioAddress=0x20200000)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d736c]} cellGcmSys: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d736c]} cellGcmSys: cellGcmInit(): 256MB io address space used
RSX: ! {rsx::thread} RSX thread started
HLE: W {PPU[0x1] Thread (main_thread)[0x001d74ec]} cellGcmSys: cellGcmMapMainMemory(ea=0x20900000, size=0x100000, offset=*0x180f5ec)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d818c]} cellSysutil: cellVideoOutGetResolutionAvailability(videoOut=0, resolutionId=0x1, aspect=2, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d818c]} cellSysutil: cellVideoOutGetResolutionAvailability(videoOut=0, resolutionId=0x2, aspect=2, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d818c]} cellSysutil: cellVideoOutGetResolutionAvailability(videoOut=0, resolutionId=0x4, aspect=1, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d818c]} cellSysutil: cellVideoOutGetResolutionAvailability(videoOut=0, resolutionId=0x4, aspect=2, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7fec]} cellSysutil: cellVideoOutConfigure(videoOut=0, config=*0xd00ff344, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d740c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d75ac]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=0, size=8912896, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d73ec]} cellGcmSys: cellGcmBindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d75ac]} cellGcmSys: cellGcmSetTileInfo(index=1, location=0, offset=8912896, size=8912896, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d73ec]} cellGcmSys: cellGcmBindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d75ac]} cellGcmSys: cellGcmSetTileInfo(index=3, location=0, offset=17825792, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d73ec]} cellGcmSys: cellGcmBindTile(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d74cc]} cellGcmSys: cellGcmBindZcull(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d75ac]} cellGcmSys: cellGcmSetTileInfo(index=4, location=0, offset=21757952, size=3932160, pitch=5120, comp=10, base=768, bank=3)
HLE: E {PPU[0x1] Thread (main_thread)[0x001d75ac]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d73ec]} cellGcmSys: cellGcmBindTile(index=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00181c94]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0x20008cd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d756c]} cellGcmSys: cellGcmSetVBlankHandler(handler=*0x1ffc20)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d750c]} cellGcmSys: cellGcmSetFlipStatus()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7e6c]} cellGame: cellGameBootCheck(type=*0xd00ff260, attributes=*0xd00ff264, size=*0xd00ff268, dirName=*0xd00ff278)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7e0c]} cellGame: cellGameContentPermit(contentInfoPath=*0xd00ff298, usrdirPath=*0xd00ff318)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7e4c]} cellGame: cellGameDataCheck(type=3, dirName=*0x1e7420, size=*0xd00ff1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7e4c]} cellGame: cellGameDataCheck(): '/dev_hdd0/game/BLJM61009INSTDATA' directory not found
HLE: W {PPU[0x1] Thread (main_thread)[0x001d7e0c]} cellGame: cellGameContentPermit(contentInfoPath=*0xd00ff298, usrdirPath=*0xd00ff318)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d778c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4ec138, entry=0x1fcf48, arg=0x0, prio=1001, stacksize=0x80000, flags=0x0, threadname=*0x1e5350)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d778c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4ec138, param=*0xd00ff338, arg=0x0, unk=0x0, prio=1001, stacksize=0x80000, flags=0x0, threadname=*0x1e5350)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d778c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x15)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x4090000, flags=0x200, alloc_addr=*0xd00ff2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x2250000, flags=0x200, alloc_addr=*0xd00ff2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x510000, flags=0x200, alloc_addr=*0xd00ff2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x526675, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x526675, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/BGCG.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x526675, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x526675, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x526675, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/BGCG.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x526c35, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x526c35, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/EVENTCG.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x526c35, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x526c35, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x526c35, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/EVENTCG.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x5271f5, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x5271f5, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/CHARCG.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x5271f5, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x5271f5, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x5271f5, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/CHARCG.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x528335, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x528335, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/FONT.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x528335, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x528335, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x528335, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/FONT.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x5277b5, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x5277b5, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/OTHCG.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x5277b5, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x5277b5, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x5277b5, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/OTHCG.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x5252f5, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x5252f5, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/PARTS.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x5252f5, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x5252f5, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x5252f5, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/PARTS.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x500000, flags=0x200, alloc_addr=*0xd00ff240)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x52a5b5, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x52a5b5, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/BATTLE.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x52a5b5, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x52a5b5, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x52a5b5, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/BATTLE.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x52ab75, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x52ab75, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/PT.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x52ab75, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x52ab75, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x52ab75, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/PT.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x52b135, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x52b135, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/GM.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x52b135, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x52b135, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x52b135, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/GM.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x5288f5, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x5288f5, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/SCRIPT.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x5288f5, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x5288f5, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x5288f5, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/SCRIPT.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x520000, flags=0x200, alloc_addr=*0xd00ff240)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x529475, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x529475, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/sound/SE.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x529475, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x529475, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x529475, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/sound/SE.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x529a35, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x529a35, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/sound/MUSIC.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x529a35, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x529a35, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x529a35, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/sound/MUSIC.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} cellFs: cellFsStat(path=*0x529ff5, sb=*0xd00ff354) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: sys_fs_stat(path=*0x529ff5, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d726c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/sound/VOICE.SDAT'
HLE: ! {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x529ff5, flags=0, fd=*0xd00ff350, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} cellFs: cellFsOpen(path=*0x529ff5, flags=0, fd=*0xd00ff350, arg=*0xd00ff2d8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x529ff5, flags=0, fd=*0xd00ff350, mode=0, arg=*0xd00ff2d8, size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/sound/VOICE.SDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x001d732c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00ff354)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x50000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d20000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d70000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x50000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d20000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d70000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x50000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d20000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d70000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x50000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d20000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d70000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x50000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d20000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d70000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x50000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182ef0]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd00ff1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d20000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00182790]} sys_memory: sys_memory_free(addr=0x27d70000)
HLE: ! {PPU[0x15] Thread (PreLoad)[0x001d72cc]} cellFs: cellFsSdataOpen(path=*0x528335, flags=0, fd=*0x528650, arg=*0x0, size=0x0)
HLE: W {PPU[0x15] Thread (PreLoad)[0x001d72cc]} cellFs: cellFsOpen(path=*0x528335, flags=0, fd=*0x528650, arg=*0xd018fca8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x15] Thread (PreLoad)[0x001d72cc]} sys_fs: sys_fs_open(path=*0x528335, flags=0, fd=*0x528650, mode=0, arg=*0xd018fca8, size=0x8)
HLE: W {PPU[0x15] Thread (PreLoad)[0x001d72cc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/FONT.SDAT'
HLE: S {PPU[0x1] Thread (main_thread)[0x001d772c]} Last function: UTF8stoUTF16s (0xf7681b9a)
G: ! {PPU[0x1] Thread (main_thread)[0x001d772c]} Registers:
=========
GPR[0] = 0x4
GPR[1] = 0xd00ff090
GPR[2] = 0x2099d8
GPR[3] = 0x1e5610
GPR[4] = 0xd00ff104
GPR[5] = 0xd00ff108
GPR[6] = 0xd00ff100
GPR[7] = 0x6300000000000000
GPR[8] = 0x10
GPR[9] = 0xffffff7f7f7f7f7f
GPR[10] = 0xe27f7f7f7f7f7f7f
GPR[11] = 0x8080808080
GPR[12] = 0x48002088
GPR[13] = 0x189f030
GPR[14] = 0xff
GPR[15] = 0x529a20
GPR[16] = 0x180f4c8
GPR[17] = 0x529460
GPR[18] = 0x52ab60
GPR[19] = 0x5271e0
GPR[20] = 0x526c20
GPR[21] = 0x526660
GPR[22] = 0x5277a0
GPR[23] = 0x52a5a0
GPR[24] = 0x525610
GPR[25] = 0x52b120
GPR[26] = 0x1
GPR[27] = 0x4f3ff8
GPR[28] = 0xd00ff108
GPR[29] = 0x1e5610
GPR[30] = 0x4f3ff8
GPR[31] = 0x1
FPR[0] = 0
FPR[1] = 0
FPR[2] = 0
FPR[3] = 0
FPR[4] = 1
FPR[5] = -2.0002
FPR[6] = 9999
FPR[7] = 0
FPR[8] = 0
FPR[9] = 0
FPR[10] = 1
FPR[11] = 0
FPR[12] = 0
FPR[13] = 0
FPR[14] = 0
FPR[15] = 0
FPR[16] = 0
FPR[17] = 0
FPR[18] = 0
FPR[19] = 0
FPR[20] = 0
FPR[21] = 0
FPR[22] = 0
FPR[23] = 0
FPR[24] = 0
FPR[25] = 0
FPR[26] = 0
FPR[27] = 0
FPR[28] = 0
FPR[29] = 0
FPR[30] = 0
FPR[31] = 0
VPR[0] = 0xff000000ff000000ff000000ff000000 [x: -1.70141e+38 y: -1.70141e+38 z: -1.70141e+38 w: -1.70141e+38]
VPR[1] = 0xff000000ff000000ff000000ff000000 [x: -1.70141e+38 y: -1.70141e+38 z: -1.70141e+38 w: -1.70141e+38]
VPR[2] = 0xff000000ff000000ff000000ff000000 [x: -1.70141e+38 y: -1.70141e+38 z: -1.70141e+38 w: -1.70141e+38]
VPR[3] = 0xff000000ff000000ff000000ff000000 [x: -1.70141e+38 y: -1.70141e+38 z: -1.70141e+38 w: -1.70141e+38]
VPR[4] = 0xff000000ff000000ff000000ff000000 [x: -1.70141e+38 y: -1.70141e+38 z: -1.70141e+38 w: -1.70141e+38]
VPR[5] = 0xff000000ff000000ff000000ff000000 [x: -1.70141e+38 y: -1.70141e+38 z: -1.70141e+38 w: -1.70141e+38]
VPR[6] = 0xff000000ff000000ff000000ff000000 [x: -1.70141e+38 y: -1.70141e+38 z: -1.70141e+38 w: -1.70141e+38]
VPR[7] = 0xff000000ff000000ff000000ff000000 [x: -1.70141e+38 y: -1.70141e+38 z: -1.70141e+38 w: -1.70141e+38]
VPR[8] = 0x00000000024b4ac000000000024b4ac0 [x: 0 y: 1.49355e-37 z: 0 w: 1.49355e-37]
VPR[9] = 0x00000000024b4ac000000000024b4ac0 [x: 0 y: 1.49355e-37 z: 0 w: 1.49355e-37]
VPR[10] = 0x00000000024b4ac000000000024b4ac0 [x: 0 y: 1.49355e-37 z: 0 w: 1.49355e-37]
VPR[11] = 0x800008002730ccea0000000000000007 [x: -2.86986e-42 y: 2.4536e-15 z: 0 w: 9.80909e-45]
VPR[12] = 0x00000000024b552000000000024b5520 [x: 0 y: 1.49385e-37 z: 0 w: 1.49385e-37]
VPR[13] = 0x00000000024b552000000000024b5520 [x: 0 y: 1.49385e-37 z: 0 w: 1.49385e-37]
VPR[14] = 0x00000000024b552000000000024b5520 [x: 0 y: 1.49385e-37 z: 0 w: 1.49385e-37]
VPR[15] = 0x00000000024b552000000000024b5520 [x: 0 y: 1.49385e-37 z: 0 w: 1.49385e-37]
VPR[16] = 0x00000000024b552000000000024b5520 [x: 0 y: 1.49385e-37 z: 0 w: 1.49385e-37]
VPR[17] = 0x00000000024b552000000000024b5520 [x: 0 y: 1.49385e-37 z: 0 w: 1.49385e-37]
VPR[18] = 0x00000000024b552000000000024b5520 [x: 0 y: 1.49385e-37 z: 0 w: 1.49385e-37]
VPR[19] = 0x00000000024b552000000000024b5520 [x: 0 y: 1.49385e-37 z: 0 w: 1.49385e-37]
VPR[20] = 0x800009002729ccfd0000000000000000 [x: -3.22859e-42 y: 2.35646e-15 z: 0 w: 0]
VPR[21] = 0x00000000024b49a000000000024b49a0 [x: 0 y: 1.49352e-37 z: 0 w: 1.49352e-37]
VPR[22] = 0x00000000024b49a000000000024b49a0 [x: 0 y: 1.49352e-37 z: 0 w: 1.49352e-37]
VPR[23] = 0x00000000024b49a000000000024b49a0 [x: 0 y: 1.49352e-37 z: 0 w: 1.49352e-37]
VPR[24] = 0x00000000024b49a000000000024b49a0 [x: 0 y: 1.49352e-37 z: 0 w: 1.49352e-37]
VPR[25] = 0x00000000024b49a000000000024b49a0 [x: 0 y: 1.49352e-37 z: 0 w: 1.49352e-37]
VPR[26] = 0x00000000024b49a000000000024b49a0 [x: 0 y: 1.49352e-37 z: 0 w: 1.49352e-37]
VPR[27] = 0x00000000024b49a000000000024b49a0 [x: 0 y: 1.49352e-37 z: 0 w: 1.49352e-37]
VPR[28] = 0x00000000024b49a000000000024b49a0 [x: 0 y: 1.49352e-37 z: 0 w: 1.49352e-37]
VPR[29] = 0x80000a002722ccf4000000003f800000 [x: -3.58732e-42 y: 2.25931e-15 z: 0 w: 1]
VPR[30] = 0x00000000024b4c2000000000024b4c20 [x: 0 y: 1.49359e-37 z: 0 w: 1.49359e-37]
VPR[31] = 0x00000000024b4c2000000000024b4c20 [x: 0 y: 1.49359e-37 z: 0 w: 1.49359e-37]
CR = 0x88002082
LR = 0x1a5f44
CTR = 0x10
XER = 0x0 [CA=0 | OV=8589934592 | SO=0]
FPSCR = 0x0 [RN=0 | NI=0 | XE=0 | ZE=0 | UE=0 | OE=0 | VE=0 | VXCVI=0 | VXSQRT=0 | VXSOFT=0 | FPRF=0 | FI=0 | FR=0 | VXVC=0 | VXIMZ=0 | VXZDZ=0 | VXIDI=0 | VXISI=0 | VXSNAN=0 | XX=0 | ZX=0 | UX=0 | OX=0 | VX=0 | FEX=0 | FX=0]

G: E {PPU[0x1] Thread (main_thread)[0x001d772c]} Exception: 
(in file Emu\SysCalls\Modules\cellL10n.cpp:1148, in function UTF8stoUTF16s)
G: ! Stopping emulator...
G: ! All threads signaled...
G: ! {PPU[0x15] Thread (PreLoad)[0x001130c0]} Thread aborted
RSX: W {rsx::thread} RSX thread aborted
G: ! {PPU[0x2] Thread (Callback Thread)[0x001871d4]} Thread aborted
RSX: ! {rsx::thread} RSX thread ended
G: ! {VBlank Thread} Thread aborted
G: ! All threads stopped...
G: ! Objects cleared...
G: ! Stopping emulator...
