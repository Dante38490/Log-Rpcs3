HLE: ! path: /dev_hdd0/game/
LDR: E PSFLoader::Load() failed: unknown magic (0x0)
LDR: ! Loading 'D:/Emulateurs/Rpcs3/dev_hdd0/game/BLJM60329-[CLANNAD]/PS3_GAME/USRDIR/BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLJM60329-[CLANNAD]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: !  
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BLJM60329-[CLANNAD]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: !  
LDR: ! Title: CLANNAD
LDR: ! Serial: BLJM60329
LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! loader::init() failed: Broken file
MEM: ! Initializing memory: g_base_addr = 0xd29d0f0000, g_priv_addr = 0xd39d0f0000
MEM: ! Memory initialized.
LDR: ! Imported function 'cellPadClearBuf' in 'sys_io' module (0x1f6728)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0x1f6748)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0x1f6768)
LDR: ! Imported function 'cellPadSetPortSetting' in 'sys_io' module (0x1f6788)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0x1f67a8)
LDR: ! Imported function 'cellPadGetInfo2' in 'sys_io' module (0x1f67c8)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module (0x1f67e8)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0x1f6808)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0x1f6828)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0x1f6848)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0x1f6868)
LDR: ! Imported function 'cellFsUnlink' in 'sys_fs' module (0x1f6888)
LDR: ! Imported function 'cellFsMkdir' in 'sys_fs' module (0x1f68a8)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0x1f68c8)
LDR: ! Imported function 'cellFsRmdir' in 'sys_fs' module (0x1f8688)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module (0x1f86a8)
LDR: ! Imported function 'cellFsReaddir' in 'sys_fs' module (0x1f86c8)
LDR: ! Imported function 'cellFsSdataOpenByFd' in 'sys_fs' module (0x1f86e8)
LDR: ! Imported function 'cellFsFsync' in 'sys_fs' module (0x1f8708)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0x1f8728)
LDR: ! Imported function 'cellFsGetFreeSize' in 'sys_fs' module (0x1f8748)
LDR: ! Imported function 'cellFsSdataOpen' in 'sys_fs' module (0x1f8768)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0x1f8788)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module (0x1f87a8)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0x1f68e8)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0x1f6908)
LDR: ! Imported function 'cellSysmoduleIsLoaded' in 'cellSysmodule' module (0x1f6928)
LDR: ! Imported function 'cellSysmoduleInitialize' in 'cellSysmodule' module (0x1f6948)
LDR: ! Imported function 'cellSysmoduleFinalize' in 'cellSysmodule' module (0x1f6968)
LDR: ! Imported function 'cellSysutilUnregisterCallback' in 'cellSysutil' module (0x1f6988)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0x1f69a8)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0x1f69c8)
LDR: ! Imported function 'cellSaveDataListLoad2' in 'cellSysutil' module (0x1f69e8)
LDR: ! Imported function 'cellSysCacheMount' in 'cellSysutil' module (0x1f6a08)
LDR: ! Imported function 'cellMsgDialogClose' in 'cellSysutil' module (0x1f6a28)
LDR: ! Imported function 'cellSaveDataListSave2' in 'cellSysutil' module (0x1f6a48)
LDR: E Unimplemented function 'cellOskDialogUnloadAsync' in 'cellSysutil' module (0x1f6a68)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0x1f6a88)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0x1f6aa8)
LDR: ! Imported function 'cellMsgDialogAbort' in 'cellSysutil' module (0x1f6ac8)
LDR: ! Imported function 'cellSysCacheClear' in 'cellSysutil' module (0x1f6ae8)
LDR: ! Imported function 'cellMsgDialogOpen2' in 'cellSysutil' module (0x1f6b08)
LDR: ! Imported function 'cellMsgDialogProgressBarReset' in 'cellSysutil' module (0x1f6b28)
LDR: E Unimplemented function 'cellOskDialogLoadAsync' in 'cellSysutil' module (0x1f6b48)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0x1f6b68)
LDR: ! Imported function 'cellSaveDataAutoSave2' in 'cellSysutil' module (0x1f6b88)
LDR: ! Imported function 'cellMsgDialogProgressBarInc' in 'cellSysutil' module (0x1f6ba8)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0x1f6bc8)
LDR: ! Imported function 'cellVideoOutGetResolutionAvailability' in 'cellSysutil' module (0x1f6be8)
LDR: E Unimplemented function 'cellOskDialogSetKeyLayoutOption' in 'cellSysutil' module (0x1f6c08)
LDR: E Unimplemented function 'cellOskDialogAbort' in 'cellSysutil' module (0x1f6c28)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0x1f6c48)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0x1f6c68)
LDR: ! Imported function 'cellSaveDataDelete2' in 'cellSysutil' module (0x1f6c88)
LDR: E Unimplemented function 'cellOskDialogSetLayoutMode' in 'cellSysutil' module (0x1f6ca8)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module (0x1f6cc8)
LDR: ! Imported function 'cellSaveDataAutoLoad2' in 'cellSysutil' module (0x1f6ce8)
LDR: ! Imported function 'cellGameGetParamString' in 'cellGame' module (0x1f6d08)
LDR: ! Imported function 'cellGameCreateGameData' in 'cellGame' module (0x1f6d28)
LDR: ! Imported function 'cellGameContentPermit' in 'cellGame' module (0x1f6d48)
LDR: ! Imported function 'cellGameContentErrorDialog' in 'cellGame' module (0x1f6d68)
LDR: ! Imported function 'cellGameDeleteGameData' in 'cellGame' module (0x1f6d88)
LDR: ! Imported function 'cellGameDataCheck' in 'cellGame' module (0x1f6da8)
LDR: ! Imported function 'cellGameBootCheck' in 'cellGame' module (0x1f6dc8)
LDR: ! Imported function 'sceNpDrmVerifyUpgradeLicense' in 'sceNp' module (0x1f6de8)
LDR: ! Imported function 'sceNpTerm' in 'sceNp' module (0x1f6e08)
LDR: ! Imported function 'sceNpManagerGetStatus' in 'sceNp' module (0x1f6e28)
LDR: ! Imported function 'sceNpInit' in 'sceNp' module (0x1f6e48)
LDR: ! Imported function 'sceNpDrmIsAvailable2' in 'sceNp' module (0x1f6e68)
LDR: ! Imported function 'sceNpManagerGetNpId' in 'sceNp' module (0x1f6e88)
LDR: ! Imported function 'cellGcmInitCursor' in 'cellGcmSys' module (0x1f6ea8)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0x1f6ec8)
LDR: ! Imported function 'cellGcmSetCursorPosition' in 'cellGcmSys' module (0x1f6ee8)
LDR: ! Imported function '_cellGcmSetFlipCommand' in 'cellGcmSys' module (0x1f6f08)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0x1f6f28)
LDR: ! Imported function 'cellGcmIoOffsetToAddress' in 'cellGcmSys' module (0x1f6f48)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0x1f6f68)
LDR: ! Imported function 'cellGcmBindTile' in 'cellGcmSys' module (0x1f6f88)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0x1f6fa8)
LDR: ! Imported function 'cellGcmSetDebugOutputLevel' in 'cellGcmSys' module (0x1f6fc8)
LDR: ! Imported function 'cellGcmGetDefaultCommandWordSize' in 'cellGcmSys' module (0x1f6fe8)
LDR: ! Imported function 'cellGcmGetLastFlipTime' in 'cellGcmSys' module (0x1f7008)
LDR: ! Imported function 'cellGcmMapEaIoAddress' in 'cellGcmSys' module (0x1f7028)
LDR: ! Imported function 'cellGcmSetCursorDisable' in 'cellGcmSys' module (0x1f7048)
LDR: ! Imported function 'cellGcmGetFlipStatus' in 'cellGcmSys' module (0x1f7068)
LDR: ! Imported function 'cellGcmGetDefaultSegmentWordSize' in 'cellGcmSys' module (0x1f7088)
LDR: ! Imported function 'cellGcmGetReport' in 'cellGcmSys' module (0x1f70a8)
LDR: ! Imported function 'cellGcmSetDefaultFifoSize' in 'cellGcmSys' module (0x1f70c8)
LDR: ! Imported function 'cellGcmBindZcull' in 'cellGcmSys' module (0x1f70e8)
LDR: ! Imported function 'cellGcmMapMainMemory' in 'cellGcmSys' module (0x1f7108)
LDR: ! Imported function 'cellGcmSetFlipHandler' in 'cellGcmSys' module (0x1f7128)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0x1f7148)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0x1f7168)
LDR: ! Imported function 'cellGcmGetReportDataLocation' in 'cellGcmSys' module (0x1f7188)
LDR: ! Imported function 'cellGcmUnbindZcull' in 'cellGcmSys' module (0x1f71a8)
LDR: ! Imported function 'cellGcmSetVBlankHandler' in 'cellGcmSys' module (0x1f71c8)
LDR: ! Imported function 'cellGcmResetFlipStatus' in 'cellGcmSys' module (0x1f71e8)
LDR: ! Imported function 'cellGcmSetTileInfo' in 'cellGcmSys' module (0x1f7208)
LDR: ! Imported function 'cellGcmUpdateCursor' in 'cellGcmSys' module (0x1f7228)
LDR: ! Imported function 'cellGcmSetCursorEnable' in 'cellGcmSys' module (0x1f7248)
LDR: ! Imported function 'cellGcmSetGraphicsHandler' in 'cellGcmSys' module (0x1f7268)
LDR: ! Imported function '_cellGcmSetFlipCommandWithWaitLabel' in 'cellGcmSys' module (0x1f7288)
LDR: ! Imported function 'cellGcmUnbindTile' in 'cellGcmSys' module (0x1f72a8)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0x1f72c8)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0x1f72e8)
LDR: ! Imported function 'cellGcmSetCursorImageOffset' in 'cellGcmSys' module (0x1f7308)
LDR: ! Imported function 'cellRescGetNumColorBuffers' in 'cellResc' module (0x1f7328)
LDR: ! Imported function 'cellRescSetWaitFlip' in 'cellResc' module (0x1f7348)
LDR: ! Imported function 'cellRescSetDsts' in 'cellResc' module (0x1f7368)
LDR: ! Imported function 'cellRescResetFlipStatus' in 'cellResc' module (0x1f7388)
LDR: ! Imported function 'cellRescAdjustAspectRatio' in 'cellResc' module (0x1f73a8)
LDR: ! Imported function 'cellRescSetDisplayMode' in 'cellResc' module (0x1f73c8)
LDR: ! Imported function 'cellRescSetConvertAndFlip' in 'cellResc' module (0x1f73e8)
LDR: ! Imported function 'cellRescExit' in 'cellResc' module (0x1f7408)
LDR: ! Imported function 'cellRescSetFlipHandler' in 'cellResc' module (0x1f7428)
LDR: ! Imported function 'cellRescInit' in 'cellResc' module (0x1f7448)
LDR: ! Imported function 'cellRescGetBufferSize' in 'cellResc' module (0x1f7468)
LDR: ! Imported function 'cellRescGetLastFlipTime' in 'cellResc' module (0x1f7488)
LDR: ! Imported function 'cellRescSetSrc' in 'cellResc' module (0x1f74a8)
LDR: ! Imported function 'cellRescSetBufferAddress' in 'cellResc' module (0x1f74c8)
LDR: ! Imported function 'cellRescGetFlipStatus' in 'cellResc' module (0x1f74e8)
LDR: ! Imported function 'cellRescSetVBlankHandler' in 'cellResc' module (0x1f7508)
LDR: ! Imported function 'cellRescCreateInterlaceTable' in 'cellResc' module (0x1f7528)
LDR: ! Imported function 'cellFontCreateRenderer' in 'cellFont' module (0x1f7548)
LDR: ! Imported function 'cellFontGetHorizontalLayout' in 'cellFont' module (0x1f7568)
LDR: ! Imported function 'cellFontDestroyRenderer' in 'cellFont' module (0x1f7588)
LDR: ! Imported function 'cellFontSetupRenderScalePixel' in 'cellFont' module (0x1f75a8)
LDR: E Unimplemented function 'cellFontGetScalePixel' in 'cellFont' module (0x1f75c8)
LDR: ! Imported function 'cellFontSetScalePixel' in 'cellFont' module (0x1f75e8)
LDR: ! Imported function 'cellFontEndLibrary' in 'cellFont' module (0x1f7608)
LDR: ! Imported function 'cellFontBindRenderer' in 'cellFont' module (0x1f7628)
LDR: ! Imported function 'cellFontEnd' in 'cellFont' module (0x1f7648)
LDR: ! Imported function 'cellFontRenderCharGlyphImage' in 'cellFont' module (0x1f7668)
LDR: ! Imported function 'cellFontRenderSurfaceInit' in 'cellFont' module (0x1f7688)
LDR: ! Imported function 'cellFontOpenFontset' in 'cellFont' module (0x1f76a8)
LDR: ! Imported function 'cellFontCloseFont' in 'cellFont' module (0x1f76c8)
LDR: ! Imported function 'cellFontRenderSurfaceSetScissor' in 'cellFont' module (0x1f76e8)
LDR: ! Imported function 'cellFontInitializeWithRevision' in 'cellFont' module (0x1f7708)
LDR: ! Imported function 'cellFontUnbindRenderer' in 'cellFont' module (0x1f7728)
LDR: ! Imported function 'cellFontInitLibraryFreeTypeWithRevision' in 'cellFontFT' module (0x1f7748)
LDR: E Unimplemented function 'UCS2stoSJISs' in 'cellL10n' module (0x1f7768)
LDR: E Unimplemented function 'SJISstoUTF8s' in 'cellL10n' module (0x1f7788)
LDR: E Unimplemented function 'SJIStoUCS2' in 'cellL10n' module (0x1f77a8)
LDR: E Unimplemented function 'UTF8stoSJISs' in 'cellL10n' module (0x1f77c8)
LDR: E Unimplemented function 'SJISstoUCS2s' in 'cellL10n' module (0x1f77e8)
LDR: ! Imported function '_cellSpursLFQueueInitialize' in 'cellSpurs' module (0x1f7808)
LDR: ! Imported function '_cellSpursTasksetAttributeInitialize' in 'cellSpurs' module (0x1f7828)
LDR: ! Imported function 'cellSpursLFQueueAttachLv2EventQueue' in 'cellSpurs' module (0x1f7848)
LDR: ! Imported function 'cellSpursEventFlagDetachLv2EventQueue' in 'cellSpurs' module (0x1f7868)
LDR: ! Imported function 'cellSpursInitializeWithAttribute2' in 'cellSpurs' module (0x1f7888)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module (0x1f78a8)
LDR: ! Imported function 'cellSpursEventFlagClear' in 'cellSpurs' module (0x1f78c8)
LDR: ! Imported function '_cellSpursEventFlagInitialize' in 'cellSpurs' module (0x1f78e8)
LDR: ! Imported function 'cellSpursTasksetAttributeSetName' in 'cellSpurs' module (0x1f7908)
LDR: ! Imported function 'cellSpursLFQueueDetachLv2EventQueue' in 'cellSpurs' module (0x1f7928)
LDR: ! Imported function 'cellSpursEventFlagAttachLv2EventQueue' in 'cellSpurs' module (0x1f7948)
LDR: ! Imported function '_cellSpursLFQueuePushBody' in 'cellSpurs' module (0x1f7968)
LDR: ! Imported function '_cellSpursAttributeInitialize' in 'cellSpurs' module (0x1f7988)
LDR: ! Imported function 'cellSpursJoinTaskset' in 'cellSpurs' module (0x1f79a8)
LDR: ! Imported function 'cellSpursShutdownTaskset' in 'cellSpurs' module (0x1f79c8)
LDR: ! Imported function 'cellSpursCreateTask' in 'cellSpurs' module (0x1f79e8)
LDR: ! Imported function 'cellSpursCreateTasksetWithAttribute' in 'cellSpurs' module (0x1f7a08)
LDR: ! Imported function 'cellSpursFinalize' in 'cellSpurs' module (0x1f7a28)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0x1f7a48)
LDR: ! Imported function 'cellAudioSetNotifyEventQueue' in 'cellAudio' module (0x1f7a68)
LDR: ! Imported function 'cellAudioGetPortTimestamp' in 'cellAudio' module (0x1f7a88)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0x1f7aa8)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0x1f7ac8)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0x1f7ae8)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0x1f7b08)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0x1f7b28)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0x1f7b48)
LDR: ! Imported function 'cellAudioGetPortBlockTag' in 'cellAudio' module (0x1f7b68)
LDR: ! Imported function 'cellAudioRemoveNotifyEventQueue' in 'cellAudio' module (0x1f7b88)
LDR: ! Imported function 'cellAtracGetBitrate' in 'cellAtrac' module (0x1f7ba8)
LDR: ! Imported function 'cellAtracSetSecondBuffer' in 'cellAtrac' module (0x1f7bc8)
LDR: ! Imported function 'cellAtracGetChannel' in 'cellAtrac' module (0x1f7be8)
LDR: ! Imported function 'cellAtracCreateDecoderExt' in 'cellAtrac' module (0x1f7c08)
LDR: ! Imported function 'cellAtracGetStreamDataInfo' in 'cellAtrac' module (0x1f7c28)
LDR: ! Imported function 'cellAtracAddStreamData' in 'cellAtrac' module (0x1f7c48)
LDR: ! Imported function 'cellAtracGetNextSample' in 'cellAtrac' module (0x1f7c68)
LDR: ! Imported function 'cellAtracGetMaxSample' in 'cellAtrac' module (0x1f7c88)
LDR: ! Imported function 'cellAtracSetDataAndGetMemSize' in 'cellAtrac' module (0x1f7ca8)
LDR: ! Imported function 'cellAtracDeleteDecoder' in 'cellAtrac' module (0x1f7cc8)
LDR: ! Imported function 'cellAtracResetPlayPosition' in 'cellAtrac' module (0x1f7ce8)
LDR: ! Imported function 'cellAtracSetLoopNum' in 'cellAtrac' module (0x1f7d08)
LDR: ! Imported function 'cellAtracDecode' in 'cellAtrac' module (0x1f7d28)
LDR: ! Imported function 'cellAtracIsSecondBufferNeeded' in 'cellAtrac' module (0x1f7d48)
LDR: ! Imported function 'cellAtracGetBufferInfoForResetting' in 'cellAtrac' module (0x1f7d68)
LDR: ! Imported function 'cellAtracGetSecondBufferInfo' in 'cellAtrac' module (0x1f7d88)
LDR: ! Imported function 'cellAtracGetSoundInfo' in 'cellAtrac' module (0x1f7da8)
LDR: ! Imported function 'cellAtracGetRemainFrame' in 'cellAtrac' module (0x1f7dc8)
LDR: W Unknown module 'cellSysutilAvconfExt'
LDR: ! Imported function 'cellVideoOutSetGamma' in 'cellSysutilAvconfExt' module (0x1f7de8)
LDR: ! Imported function 'cellSailGraphicsAdapterGetFrame' in 'cellSail' module (0x1f7e08)
LDR: ! Imported function 'cellSailPlayerSetSoundAdapter' in 'cellSail' module (0x1f7e28)
LDR: ! Imported function 'cellSailGraphicsAdapterPtsToTimePosition' in 'cellSail' module (0x1f7e48)
LDR: ! Imported function 'cellSailPlayerFinalize' in 'cellSail' module (0x1f7e68)
LDR: ! Imported function 'cellSailPlayerSetGraphicsAdapter' in 'cellSail' module (0x1f7e88)
LDR: ! Imported function 'cellSailGraphicsAdapterInitialize' in 'cellSail' module (0x1f7ea8)
LDR: ! Imported function 'cellSailPlayerInitialize2' in 'cellSail' module (0x1f7ec8)
LDR: ! Imported function 'cellSailGraphicsAdapterSetPreferredFormat' in 'cellSail' module (0x1f7ee8)
LDR: ! Imported function 'cellSailMemAllocatorInitialize' in 'cellSail' module (0x1f7f08)
LDR: ! Imported function 'cellSailPlayerOpenStream' in 'cellSail' module (0x1f7f28)
LDR: ! Imported function 'cellSailSoundAdapterInitialize' in 'cellSail' module (0x1f7f48)
LDR: ! Imported function 'cellSailGraphicsAdapterUpdateAvSync' in 'cellSail' module (0x1f7f68)
LDR: ! Imported function 'cellSailSoundAdapterPtsToTimePosition' in 'cellSail' module (0x1f7f88)
LDR: ! Imported function 'cellSailPlayerUnsubscribeEvent' in 'cellSail' module (0x1f7fa8)
LDR: ! Imported function 'cellSailPlayerGetCurrentDescriptor' in 'cellSail' module (0x1f7fc8)
LDR: ! Imported function 'cellSailPlayerAddDescriptor' in 'cellSail' module (0x1f7fe8)
LDR: ! Imported function 'cellSailSoundAdapterGetFrame' in 'cellSail' module (0x1f8008)
LDR: ! Imported function 'cellSailPlayerCloseStream' in 'cellSail' module (0x1f8028)
LDR: ! Imported function 'cellSailDescriptorGetCapabilities' in 'cellSail' module (0x1f8048)
LDR: ! Imported function 'cellSailPlayerBoot' in 'cellSail' module (0x1f8068)
LDR: ! Imported function 'cellSailDescriptorGetStreamType' in 'cellSail' module (0x1f8088)
LDR: ! Imported function 'cellSailPlayerCreateDescriptor' in 'cellSail' module (0x1f80a8)
LDR: ! Imported function 'cellSailPlayerStart' in 'cellSail' module (0x1f80c8)
LDR: ! Imported function 'cellSailPlayerStop' in 'cellSail' module (0x1f80e8)
LDR: ! Imported function 'cellSailSoundAdapterUpdateAvSync' in 'cellSail' module (0x1f8108)
LDR: ! Imported function 'cellSailSoundAdapterGetFormat' in 'cellSail' module (0x1f8128)
LDR: ! Imported function 'cellSailPlayerDestroyDescriptor' in 'cellSail' module (0x1f8148)
LDR: ! Imported function 'cellSailGraphicsAdapterGetFormat' in 'cellSail' module (0x1f8168)
LDR: W Unknown module 'cellPngEnc'
LDR: E Unimplemented function 'cellPngEncClose' in 'cellPngEnc' module (0x1f8188)
LDR: E Unimplemented function 'cellPngEncOpen' in 'cellPngEnc' module (0x1f81a8)
LDR: E Unimplemented function 'cellPngEncQueryAttr' in 'cellPngEnc' module (0x1f81c8)
LDR: E Unimplemented function 'cellPngEncGetStreamInfo' in 'cellPngEnc' module (0x1f81e8)
LDR: E Unimplemented function 'cellPngEncEncodePicture' in 'cellPngEnc' module (0x1f8208)
LDR: E Unimplemented function 'cellPngEncWaitForInput' in 'cellPngEnc' module (0x1f8228)
LDR: E Unimplemented function 'cellPngEncWaitForOutput' in 'cellPngEnc' module (0x1f8248)
LDR: ! Imported function 'sceNpTrophyRegisterContext' in 'sceNpTrophy' module (0x1f8268)
LDR: ! Imported function 'sceNpTrophyCreateHandle' in 'sceNpTrophy' module (0x1f8288)
LDR: ! Imported function 'sceNpTrophyGetRequiredDiskSpace' in 'sceNpTrophy' module (0x1f82a8)
LDR: ! Imported function 'sceNpTrophyDestroyContext' in 'sceNpTrophy' module (0x1f82c8)
LDR: ! Imported function 'sceNpTrophyInit' in 'sceNpTrophy' module (0x1f82e8)
LDR: ! Imported function 'sceNpTrophyGetGameInfo' in 'sceNpTrophy' module (0x1f8308)
LDR: ! Imported function 'sceNpTrophyDestroyHandle' in 'sceNpTrophy' module (0x1f8328)
LDR: ! Imported function 'sceNpTrophyUnlockTrophy' in 'sceNpTrophy' module (0x1f8348)
LDR: ! Imported function 'sceNpTrophyTerm' in 'sceNpTrophy' module (0x1f8368)
LDR: ! Imported function 'sceNpTrophyCreateContext' in 'sceNpTrophy' module (0x1f8388)
LDR: ! Imported function 'sceNpCommerce2Init' in 'sceNpCommerce2' module (0x1f83a8)
LDR: ! Imported function 'sceNpCommerce2GetBGDLAvailability' in 'sceNpCommerce2' module (0x1f83c8)
LDR: ! Imported function 'sceNpCommerce2Term' in 'sceNpCommerce2' module (0x1f83e8)
LDR: ! Imported function 'sceNpCommerce2DestroyCtx' in 'sceNpCommerce2' module (0x1f8408)
LDR: ! Imported function 'sceNpCommerce2DoProductBrowseStartAsync' in 'sceNpCommerce2' module (0x1f8428)
LDR: ! Imported function 'sceNpCommerce2SetBGDLAvailability' in 'sceNpCommerce2' module (0x1f8448)
LDR: ! Imported function 'sceNpCommerce2DoProductBrowseFinishAsync' in 'sceNpCommerce2' module (0x1f8468)
LDR: ! Imported function 'sceNpCommerce2CreateCtx' in 'sceNpCommerce2' module (0x1f8488)
LDR: ! Imported function 'sys_net_initialize_network_ex' in 'sys_net' module (0x1f84a8)
LDR: ! Imported function 'sys_net_finalize_network' in 'sys_net' module (0x1f84c8)
LDR: W Unknown module 'cellHttp'
LDR: E Unimplemented function 'cellHttpInit' in 'cellHttp' module (0x1f84e8)
LDR: E Unimplemented function 'cellHttpsInit' in 'cellHttp' module (0x1f8508)
LDR: E Unimplemented function 'cellHttpEndCookie' in 'cellHttp' module (0x1f8528)
LDR: E Unimplemented function 'cellHttpInitCookie' in 'cellHttp' module (0x1f8548)
LDR: E Unimplemented function 'cellHttpEnd' in 'cellHttp' module (0x1f8568)
LDR: E Unimplemented function 'cellHttpsEnd' in 'cellHttp' module (0x1f8588)
LDR: W Unknown module 'cellSsl'
LDR: E Unimplemented function 'cellSslEnd' in 'cellSsl' module (0x1f85a8)
LDR: E Unimplemented function 'cellSslCertificateLoader' in 'cellSsl' module (0x1f85c8)
LDR: E Unimplemented function 'cellSslInit' in 'cellSsl' module (0x1f85e8)
LDR: ! Imported function 'cellNetCtlNetStartDialogLoadAsync' in 'cellNetCtl' module (0x1f8608)
LDR: ! Imported function 'cellNetCtlNetStartDialogUnloadAsync' in 'cellNetCtl' module (0x1f8628)
LDR: ! Imported function 'cellNetCtlTerm' in 'cellNetCtl' module (0x1f8648)
LDR: ! Imported function 'cellNetCtlInit' in 'cellNetCtl' module (0x1f8668)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0x1f87c8)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0x1f87e8)
LDR: ! Imported function 'sys_lwcond_destroy' in 'sysPrxForUser' module (0x1f8808)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0x1f8828)
LDR: ! Imported function 'sys_prx_load_module' in 'sysPrxForUser' module (0x1f8848)
LDR: ! Imported function 'sys_lwcond_wait' in 'sysPrxForUser' module (0x1f8868)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0x1f8888)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0x1f88a8)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0x1f88c8)
LDR: ! Imported function '_sys_heap_malloc' in 'sysPrxForUser' module (0x1f88e8)
LDR: ! Imported function 'sys_prx_register_library' in 'sysPrxForUser' module (0x1f8908)
LDR: ! Imported function '_sys_heap_memalign' in 'sysPrxForUser' module (0x1f8928)
LDR: ! Imported function 'sys_process_is_stack' in 'sysPrxForUser' module (0x1f8948)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0x1f8968)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0x1f8988)
LDR: ! Imported function '_sys_heap_free' in 'sysPrxForUser' module (0x1f89a8)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module (0x1f89c8)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0x1f89e8)
LDR: E Unimplemented function 'sys_prx_load_module_on_memcontainer_by_fd' in 'sysPrxForUser' module (0x1f8a08)
LDR: ! Imported function 'sys_prx_load_module_on_memcontainer' in 'sysPrxForUser' module (0x1f8a28)
LDR: ! Imported function 'sys_lwmutex_trylock' in 'sysPrxForUser' module (0x1f8a48)
LDR: ! Imported function '_sys_heap_delete_heap' in 'sysPrxForUser' module (0x1f8a68)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0x1f8a88)
LDR: ! Imported function '_sys_heap_create_heap' in 'sysPrxForUser' module (0x1f8aa8)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0x1f8ac8)
LDR: ! Imported function 'sys_lwcond_create' in 'sysPrxForUser' module (0x1f8ae8)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0x1f8b08)
LDR: ! Imported function 'sys_lwcond_signal_all' in 'sysPrxForUser' module (0x1f8b28)
LDR: E Unimplemented function 'sys_prx_load_module_by_fd' in 'sysPrxForUser' module (0x1f8b48)
LDR: ! Imported function 'sys_lwcond_signal' in 'sysPrxForUser' module (0x1f8b68)
HLE: ! sysPrxForUser: Thread Local Storage initialized (g_tls_start=0x6bf000, user_size=0x1ec)
*** TLS segment addr: 0x0022a28c
*** TLS segment size: 0x00000004
LDR: E 'BreakPoints.dat' is broken (version=0xde80, break_count=0x0, marked_count=0x93173968, length=0x6)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b4688, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001ce400]} sys_memory: sys_memory_get_user_memory_size(mem_info_addr=0xd007fc04)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b4490, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b3c20, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b3c48, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b3c70, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b3b58, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b3b80, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b3ba8, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b3bd0, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b3bf8, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b8c70, attr=*0x232550)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b8c30, attr=*0x232560)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000020, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200000a0, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000130, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000190, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200001d0, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000210, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200002d0, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000300, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000330, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000360, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000390, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200003c0, attr=*0x207728)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c3004]} sys_time: sys_time_get_timezone(timezone_addr=0xd007fb20, summertime_addr=0xd007fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c3004]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x1] Thread (main_thread)[0x001c3004]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x1] Thread (main_thread)[0x001c7b0c]} sys_time: sys_time_get_timezone(timezone_addr=0xd007fa70, summertime_addr=0xd007fa74)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c7b0c]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x1] Thread (main_thread)[0x001c7b0c]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x1] Thread (main_thread)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd007fb20, summertime_addr=0xd007fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x1] Thread (main_thread)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x1] Thread (main_thread)[0x001c7b0c]} sys_time: sys_time_get_timezone(timezone_addr=0xd007fa70, summertime_addr=0xd007fa74)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c7b0c]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x1] Thread (main_thread)[0x001c7b0c]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x1] Thread (main_thread)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd007fb20, summertime_addr=0xd007fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x1] Thread (main_thread)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x1] Thread (main_thread)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd007fb20, summertime_addr=0xd007fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x1] Thread (main_thread)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b23b0, attr=*0xd007fb50)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x69bf9c, attr=*0xd007f9e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x694dbc, attr=*0xd007f860, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x694e9c, attr=*0xd007f8e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x694ee4, attr=*0xd007f8e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x3c7e88, attr=*0xd007fb60, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x200003e8, attr=*0xd007fa30, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00017208]} sys_mutex: sys_mutex_create(mutex_id=*0x200003f8, attr=*0xd007fab0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x251744, attr=*0xd007f930, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00017208]} sys_mutex: sys_mutex_create(mutex_id=*0x2a800418, attr=*0xd007fab0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a800428, attr=*0xd007fb40, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6948]} cellSysmodule: cellSysmoduleInitialize()
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x001f: CELL_SYSMODULE_RESC)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0019: CELL_SYSMODULE_FONT)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x001b: CELL_SYSMODULE_FREETYPE)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0011: CELL_SYSMODULE_AUDIO)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0029: CELL_SYSMODULE_ADEC_AT3)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0028: CELL_SYSMODULE_ADEC_ATX)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0013: CELL_SYSMODULE_ATRAC3PLUS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x001a: CELL_SYSMODULE_FONTFT)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x001e: CELL_SYSMODULE_L10N)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0016: CELL_SYSMODULE_SYSUTIL_NP)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0031: CELL_SYSMODULE_AVCONF_EXT)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x001d: CELL_SYSMODULE_SAIL)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0052: CELL_SYSMODULE_PNGENC)
HLE: W {PPU[0x1] Thread (main_thread)[0x00012250]} sys_spu: sys_spu_initialize(max_usable_spu=6, max_raw_spu=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7988]} cellSpurs: _cellSpursAttributeInitialize(attr_addr=0xd007f730, revision=2, sdkVersion=0x330000, nSpus=4, spuPriority=100, ppuPriority=2, exitIfNoWork=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7888]} cellSpurs: cellSpursInitializeWithAttribute2(spurs_addr=0x20000580, attr_addr=0xd007f730)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7888]} sys_spu TODO: Unsupported SPU Thread options (0x2)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7888]} sys_spu TODO: Unsupported SPU Thread options (0x2)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7888]} sys_spu TODO: Unsupported SPU Thread options (0x2)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7888]} sys_spu TODO: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7888]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x47, eq=0x4e, req=0xffffffffffff0000, spup=*0x20000649)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7888]} sys_event: sys_event_port_connect_local(eport_id=0x4f, equeue_id=0x4e)
HLE: W {PPU[0x50] Thread (SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_start(id=0x47)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7888]} sys_spu: sys_spu_thread_group_connect_event(id=0x47, eq=0x4e, et=2)
HLE: W {PPU[0x50] Thread (SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0x47, cause=*0x0, status=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6bc8]} cellSysutil: cellSysutilRegisterCallback(slot=0, func_addr=0x222df8, userdata=0x2325f8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6e48]} sceNp: sceNpInit(mem_size=0x20080, mem_addr=0x3a7700)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x001f: CELL_SYSMODULE_RESC)
HLE: W {PPU[0x1] Thread (main_thread)[0x0012ab58]} sys_spu: sys_raw_spu_create(id=*0x69e664, attr=*0xd007f6f0)
MEM: W {PPU[0x1] Thread (main_thread)[0x0012ab58]} Memory mapped at 0xe0000000: size=0x40000
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6ec8]} cellGcmSys: _cellGcmInitBody(context_addr=0x6b23e0, cmdSize=0x10000, ioSize=0x400000, ioAddress=0x20100000)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6ec8]} cellGcmSys: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6ec8]} cellGcmSys: cellGcmInit(): 256MB io address space used
RSX: ! {RSXThread} RSX thread started
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6fc8]} cellGcmSys: cellGcmSetDebugOutputLevel(level=2)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7268]} cellGcmSys error: cellGcmSetGraphicsHandler
RSX: W {RSXThread} TODO: NV4097_SET_FREQUENCY_DIVIDER_OPERATION: 0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7028]} cellGcmSys: cellGcmMapEaIoAddress(ea=0x2ab00000, io=0xe000000, size=0x100000)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6be8]} cellSysutil: cellVideoOutGetResolutionAvailability(videoOut=0, resolutionId=0x2, aspect=2, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=5)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=6)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=9)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=10)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=11)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=12)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=13)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f72a8]} cellGcmSys: cellGcmUnbindTile(index=14)
RSX: W {RSXThread} TODO: NV406E_SEMAPHORE_ACQUIRE: 0x1
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7208]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=257163264, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6f88]} cellGcmSys: cellGcmBindTile(index=0)
RSX: W {RSXThread} TODO: NV406E_SEMAPHORE_ACQUIRE: 0x3
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7208]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=253231104, size=7864320, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6f88]} cellGcmSys: cellGcmBindTile(index=0)
RSX: W {RSXThread} TODO: NV406E_SEMAPHORE_ACQUIRE: 0x5
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7208]} cellGcmSys: cellGcmSetTileInfo(index=1, location=0, offset=249298944, size=3932160, pitch=5120, comp=10, base=1, bank=3)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7208]} cellGcmSys error: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6f88]} cellGcmSys: cellGcmBindTile(index=1)
RSX: W {RSXThread} TODO: NV406E_SEMAPHORE_ACQUIRE: 0x7
HLE: W {PPU[0x1] Thread (main_thread)[0x001f70e8]} cellGcmSys: cellGcmBindZcull(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0017d704]} sys_semaphore: sys_semaphore_create(sem=*0x69ec28, attr=*0xd007f6a0, initial_val=1, max_val=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7128]} cellGcmSys: cellGcmSetFlipHandler(handler_addr=2258336)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f71c8]} cellGcmSys: cellGcmSetVBlankHandler(handler_addr=0x2275a8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f69a8]} cellSysutil: cellVideoOutConfigure(videoOut=0, config_addr=0xd007f670, option_addr=0x0, waitForEvent=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6fa8]} cellGcmSys: cellGcmSetFlipMode(mode=1)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} New FBO (1280x720)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x0012a7fc]} sys_mutex: sys_mutex_create(mutex_id=*0x20500340, attr=*0xd007f570)
HLE: W {PPU[0x1] Thread (main_thread)[0x0012a93c]} sys_cond: sys_cond_create(cond_id=*0x20500370, mutex_id=0x54, attr=*0xd007f580)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7de8]} cellAvconfExt error: cellVideoOutSetGamma
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6dc8]} cellGame: cellGameBootCheck(type=*0x386cf8, attributes=*0x386cfc, size=*0xd007f440, dirName=*0x386e04)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d08]} cellGame: cellGameGetParamString(id=0, buf=*0x3874a3, bufsize=128)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d08]} cellGame: cellGameGetParamString(id=100, buf=*0x387523, bufsize=10)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d08]} cellGame: cellGameGetParamString(id=101, buf=*0x38752d, bufsize=6)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d08]} cellGame: cellGameGetParamString(id=106, buf=*0x387533, bufsize=6)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d48]} cellGame: cellGameContentPermit(contentInfoPath=*0x386d04, usrdirPath=*0x386d84)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d48]} cellGame: cellGameContentPermit(): path_set=1, contentInfo='/dev_bdvd/PS3_GAME', usrdir='/dev_bdvd/PS3_GAME/USRDIR'
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6da8]} cellGame: cellGameDataCheck(type=3, dirName=*0x387539, size=*0xd007f440)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6da8]} cellGame: cellGameDataCheck(): '/dev_hdd0/game/BLJM60329DATA' directory not found
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d48]} cellGame: cellGameContentPermit(contentInfoPath=*0x386e84, usrdirPath=*0x386f04)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d48]} cellGame: cellGameContentPermit(): path_set=1, contentInfo='', usrdir=''
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6da8]} cellGame: cellGameDataCheck(type=3, dirName=*0x387523, size=*0xd007f440)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6da8]} cellGame: cellGameDataCheck(): '/dev_hdd0/game/BLJM60329' directory not found
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d48]} cellGame: cellGameContentPermit(contentInfoPath=*0x386f84, usrdirPath=*0x387004)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6d48]} cellGame: cellGameContentPermit(): path_set=1, contentInfo='', usrdir=''
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6a08]} cellSysutil: cellSysCacheMount(param_addr=0xd007f44c)
G: W {PPU[0x1] Thread (main_thread)[0x001f6a08]} Error creating directory 'D:/Emulateurs/Rpcs3/dev_hdd1/cache/BLJM60329': 0xb7
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6948]} cellSysmodule: cellSysmoduleInitialize()
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6908]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22510c28, attr=*0xd007f3f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x22510c68, lwmutex=*0x22510c28, attr=*0xd007f3e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22510c98, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22510cf0, attr=*0xd007f400)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22510d78, attr=*0xd007f4a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001b5238]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x22510dac, attr=*0xd007f490)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22510dc8, attr=*0xd007f4a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x22510df0, lwmutex=*0x22510dc8, attr=*0xd007f490)
HLE: W {PPU[0x1] Thread (main_thread)[0x001b5238]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x22511194, attr=*0xd007f490)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x225111e0, attr=*0xd007f400)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22511268, attr=*0xd007f4a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001b5238]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x2251129c, attr=*0xd007f490)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x225112b8, attr=*0xd007f4a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x225112e0, lwmutex=*0x225112b8, attr=*0xd007f490)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22511698, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x225116c0, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001b5238]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x225116e4, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22511700, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22511768, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x22511790, lwmutex=*0x22511768, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x225117a8, lwmutex=*0x22511768, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x225117c0, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22511810, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x225263b8, lwmutex=*0x22511810, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x225263d0, lwmutex=*0x22511810, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x22526410, entry=0x227e28, arg=0x225263d8, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x225263e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x22526410, param=*0xd007f338, arg=0x225263d8, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x225263e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x6f)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x22526450, entry=0x227e28, arg=0x22526418, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x22526420)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x22526450, param=*0xd007f338, arg=0x22526418, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x22526420)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x70)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x22511750, entry=0x227e28, arg=0x22511718, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x22511720)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x22511750, param=*0xd007f338, arg=0x22511718, unk=0x0, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x22511720)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x71)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x225265e0, attr=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001b5238]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x22526664, attr=*0xd007f3c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22526680, attr=*0xd007f3d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22526808, attr=*0xd007f470)
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f6868]} cellFs: cellFsStat(path=*0xd00a3790, sb=*0xd00a3704) -> sys_fs_stat()
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00a3790, sb=*0xd00a3704)
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f6868]} sys_fs: *** path = '/dev_hdd1/cache/BLJM60329/FIOSSYSCASH'
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00a3790, flags=0102, fd=*0xd00a3644, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00a3790, flags=0102, fd=*0xd00a3644, mode=0600, arg=*0x0, size=0x0)
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f6848]} sys_fs: *** path = '/dev_hdd1/cache/BLJM60329/FIOSSYSCASH/cache.idx'
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x76, sb=*0xd00a3704)
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00a3790, flags=0102, fd=*0xd00a3644, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00a3790, flags=0102, fd=*0xd00a3644, mode=0600, arg=*0x0, size=0x0)
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f6848]} sys_fs: *** path = '/dev_hdd1/cache/BLJM60329/FIOSSYSCASH/cache.dat'
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x77, sb=*0xd00a3704)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22557060, attr=*0xd007f2e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001b5238]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x225570e4, attr=*0xd007f400)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22557100, attr=*0xd007f410)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7828]} cellSpurs: _cellSpursTasksetAttributeInitialize(attribute=0xd007f630, revision=1, skd_version=3342336, args=0x0, priority=0xd007f600, max_contention=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7908]} cellSpurs: cellSpursTasksetAttributeSetName(attr=0xd007f630, name=0x208378)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7a08]} cellSpurs: cellSpursCreateTasksetWithAttribute(spurs=0x20000580, taskset=0x22659100, attr=0xd007f630)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7a08]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr_addr=0x2aa06000, revision=1, sdkVersion=0x33, pm_addr=0x200, size=0x1e40, data=0x22659100, priorityTable_addr=0xd007f640, minContention=0x8, maxContention=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7a08]} cellSpurs: cellSpursWorkloadAttributeSetName(attr_addr=0x2aa06000, nameClass_addr=0x0, nameInstance_addr=0x208378)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7a08]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs_addr=0x20000580, wid_addr=0x2aa07000, attr_addr=0x2aa06000)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f78e8]} cellSpurs: _cellSpursEventFlagInitialize(spurs_addr=0x20000580, taskset_addr=0x0, eventFlag_addr=0x2265aa00, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7948]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag_addr=0x2265aa00)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7948]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x47, eq=0x7b, req=0xffffffffffff0000, spup=*0x2aa06000)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7808]} cellSpurs error: _cellSpursLFQueueInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7848]} cellSpurs error: cellSpursLFQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x001f79e8]} cellSpurs: cellSpursCreateTask(taskset_addr=0x22659100, taskID_addr=0xd007f4f0, elf_addr_addr=0x215680, context_addr_addr=0x22658100, context_size=3072, lsPattern_addr=0x210350, argument_addr=0xd007f4f8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f79e8]} cellSpurs: cellSpursSendWorkloadSignal(spurs=0x20000580, workloadId=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f79e8]} cellSpurs: cellSpursWakeUp(spurs_addr=0x20000580)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265afc0, attr=*0xd007f340)
HLE: W {PPU[0x1] Thread (main_thread)[0x001b5238]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x2265b044, attr=*0xd007f460)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265b060, attr=*0xd007f470)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265b0f8, attr=*0xd007f470)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2265b120, lwmutex=*0x2265b0f8, attr=*0xd007f460)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265b1c8, attr=*0xd007f470)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265bae8, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265bb10, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001b5238]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x2265bb34, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265bb50, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265bbb8, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2265bbe0, lwmutex=*0x2265bbb8, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2265bbf8, lwmutex=*0x2265bbb8, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265bc10, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2265bc60, attr=*0xd007f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x22670848, lwmutex=*0x2265bc60, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x22670860, lwmutex=*0x2265bc60, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8ae8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x22670878, lwmutex=*0x2265bc60, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x226708b8, entry=0x227e28, arg=0x22670880, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x22670888)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x226708b8, param=*0xd007f338, arg=0x22670880, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x22670888)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x8e)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x226708f8, entry=0x227e28, arg=0x226708c0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x226708c8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x226708f8, param=*0xd007f338, arg=0x226708c0, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x226708c8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x8f)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x22670938, entry=0x227e28, arg=0x22670900, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x22670908)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x22670938, param=*0xd007f338, arg=0x22670900, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x22670908)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x90)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x2265bba0, entry=0x227e28, arg=0x2265bb68, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x2265bb70)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x2265bba0, param=*0xd007f338, arg=0x2265bb68, unk=0x0, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x2265bb70)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x91)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6fa8]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} cellFs: cellFsOpen(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, arg=*0xd00c2dc8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: sys_fs_open(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, mode=0, arg=*0xd00c2dc8, size=0x8)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/bgm.psarc.sdat'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x92, sb=*0xd00c2f04)
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0xf0d
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=1, pitch=64, offset=0x4080, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x40c0, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x4180, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=1, pitch=64, offset=0x4280, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x42c0, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x4380, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x4400, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} cellFs: cellFsOpen(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, arg=*0xd00c2dc8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: sys_fs_open(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, mode=0, arg=*0xd00c2dc8, size=0x8)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/cg.psarc.sdat'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x93, sb=*0xd00c2f04)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} cellFs: cellFsOpen(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, arg=*0xd00c2dc8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: sys_fs_open(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, mode=0, arg=*0xd00c2dc8, size=0x8)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/pcm.psarc.sdat'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x94, sb=*0xd00c2f04)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} cellFs: cellFsOpen(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, arg=*0xd00c2dc8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: sys_fs_open(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, mode=0, arg=*0xd00c2dc8, size=0x8)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/scr.psarc.sdat'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x95, sb=*0xd00c2f04)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} cellFs: cellFsOpen(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, arg=*0xd00c2dc8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: sys_fs_open(path=*0xd00c2f90, flags=0, fd=*0xd00c2e44, mode=0, arg=*0xd00c2dc8, size=0x8)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys.psarc.sdat'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x96, sb=*0xd00c2f04)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} cellFs: cellFsOpen(path=*0xd00c2b60, flags=0, fd=*0xd00c2a14, arg=*0xd00c2998, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: sys_fs_open(path=*0xd00c2b60, flags=0, fd=*0xd00c2a14, mode=0, arg=*0xd00c2998, size=0x8)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/image.tbl.sdat'
G: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLJM60329-[CLANNAD]/PS3_GAME/USRDIR/image.tbl.sdat', 0x1) failed: error 0x2
HLE: E {PPU[0x8e] Thread (fios mediathread 5)[0x001f8768]} sys_fs error: sys_fs_open('/dev_bdvd/PS3_GAME/USRDIR/image.tbl.sdat'): failed to open file (flags=0, mode=0)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x22678258, attr=*0xd007f830, initial_val=1, max_val=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x24278668, attr=*0xd007f7f0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x251748, entry=0x222ff0, arg=0x251738, prio=1001, stacksize=0x8000, flags=0x1, threadname=*0x251759)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x251748, param=*0xd007f858, arg=0x251738, unk=0x0, prio=1001, stacksize=0x8000, flags=0x1, threadname=*0x251759)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x99)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7728]} cellFont: cellFontBindRenderer(font_addr=0x3808b8)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7588]} cellFont error: cellFontDestroyRenderer
HLE: W {PPU[0x1] Thread (main_thread)[0x001f76c8]} cellFont: cellFontCloseFont(font_addr=0x3808b8)
MEM: E {PPU[0x1] Thread (main_thread)[0x001f76c8]} DynamicMemoryBlock::Free(addr=0x0): failed
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x20000000, size = 0x100000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x20100000, size = 0xa900000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa00000, size = 0x2000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa02000, size = 0x1000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa03000, size = 0x1000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa04000, size = 0x1000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa05000, size = 0x1000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2ab00000, size = 0x100000
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7708]} cellFont: cellFontInitializeWithRevision(revisionFlags=0x61, config=0xd007f8f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7748]} cellFontFT: cellFontInitLibraryFreeTypeWithRevision(revisionFlags=0x41, config_addr=0xd007f904, lib_addr_addr=0x280884
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7728]} cellFont: cellFontBindRenderer(font_addr=0x3808b8)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f7588]} cellFont error: cellFontDestroyRenderer
HLE: W {PPU[0x1] Thread (main_thread)[0x001f76c8]} cellFont: cellFontCloseFont(font_addr=0x3808b8)
MEM: E {PPU[0x1] Thread (main_thread)[0x001f76c8]} DynamicMemoryBlock::Free(addr=0x0): failed
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x20000000, size = 0x100000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x20100000, size = 0xa900000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa00000, size = 0x2000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa02000, size = 0x1000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa03000, size = 0x1000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa04000, size = 0x1000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa05000, size = 0x1000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2ab00000, size = 0x100000
MEM: ! {PPU[0x1] Thread (main_thread)[0x001f76c8]} *** Memory Block: addr = 0x2aa06000, size = 0x1000
HLE: W {PPU[0x1] Thread (main_thread)[0x001f76a8]} cellFont: cellFontOpenFontset: fontType->type = 3145993 not supported yet. RD-R-LATIN.TTF will be used instead.
HLE: W {PPU[0x1] Thread (main_thread)[0x001f76a8]} cellFont: cellFontOpenFontFile(library_addr=0x2aa06000, fontPath="/dev_flash/data/font/SCE-PS3-RD-R-LATIN.TTF", subNum=0, uniqueId=0, font_addr=0x3808b8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f76a8]} cellFont: cellFontOpenFontMemory(library_addr=0x2aa06000, fontAddr=0x2aa07000, fontSize=38388, subNum=0, uniqueId=0, font_addr=0x3808b8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7548]} cellFont: cellFontCreateRenderer(library_addr=0x2aa06000, config_addr=0xd007f82c, Renderer_addr=0x3809b8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7628]} cellFont: cellFontBindRenderer(font_addr=0x3808b8, renderer_addr=0x3809b8)
HLE: E {PPU[0x1] Thread (main_thread)[0x001f75c8]} Unimplemented function: cellFontGetScalePixel -> CELL_OK
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7688]} cellFont: cellFontRenderSurfaceInit(surface_addr=0x380ac8, buffer_addr=0x24278710, bufferWidthByte=128, pixelSizeByte=4, w=32, h=34)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f76e8]} cellFont: cellFontRenderSurfaceSetScissor(surface_addr=0x380ac8, x0=0, y0=0, w=32, h=34)
RSX: W {RSXThread} TODO: NV406E_SEMAPHORE_ACQUIRE: 0x9
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7208]} cellGcmSys: cellGcmSetTileInfo(index=2, location=0, offset=240910336, size=8388608, pitch=4096, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6f88]} cellGcmSys: cellGcmBindTile(index=2)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c3210, sb=*0xd00c3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c3210, sb=*0xd00c3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/effect/kuro_sm.pte'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d3210, sb=*0xd00d3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d3210, sb=*0xd00d3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/effect/siro_sm.pte'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c2c20, sb=*0xd00c2b94) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c2c20, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/effect/kuro_sm.pte'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/effect/kuro_sm.pte'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9a, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9a, sb=*0xd00c2b94)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d2c20, sb=*0xd00d2b94) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d2c20, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/effect/siro_sm.pte'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/effect/siro_sm.pte'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9b, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9b, sb=*0xd00d2b94)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
MEM: W {PPU[0x8e] Thread (fios mediathread 5)[0x001a02c0]} decode_x64_reg_op(00007ff6922c06ach): unsupported opcode found (0FB60C03488B5C24308BC248C1E81583)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c3210, sb=*0xd00c3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c3210, sb=*0xd00c3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/raster_fs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d3210, sb=*0xd00d3184) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d3210, sb=*0xd00d3184)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/sepia_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c3210, sb=*0xd00c3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c3210, sb=*0xd00c3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/grayscale_fs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d3210, sb=*0xd00d3184) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d3210, sb=*0xd00d3184)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/nega_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c3210, sb=*0xd00c3184) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c3210, sb=*0xd00c3184)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/gauss_easy_vs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d3210, sb=*0xd00d3184) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d3210, sb=*0xd00d3184)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/gauss_easy_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c3210, sb=*0xd00c3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c3210, sb=*0xd00c3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/mask_vs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d3210, sb=*0xd00d3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d3210, sb=*0xd00d3184)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/mask_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c3210, sb=*0xd00c3184) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c3210, sb=*0xd00c3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/mask2_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d3210, sb=*0xd00d3184) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d3210, sb=*0xd00d3184)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/conv_color_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
MEM: W {PPU[0x1] Thread (main_thread)[0x000f5330]} decode_x64_reg_op(00007ff6922c06ach): unsupported opcode found (0FB60C03488B5C24308BC248C1E81583)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c2c20, sb=*0xd00c2b94) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c2c20, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/raster_fs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/raster_fs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9c, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9c, sb=*0xd00c2b94)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d2c20, sb=*0xd00d2b94) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d2c20, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/sepia_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/sepia_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9d, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9d, sb=*0xd00d2b94)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c2c20, sb=*0xd00c2b94) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c2c20, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/grayscale_fs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/grayscale_fs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9e, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9e, sb=*0xd00c2b94)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d2c20, sb=*0xd00d2b94) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d2c20, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/nega_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/nega_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9f, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0x9f, sb=*0xd00d2b94)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c2c20, sb=*0xd00c2b94) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c2c20, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/gauss_easy_vs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/gauss_easy_vs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa0, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa0, sb=*0xd00c2b94)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d2c20, sb=*0xd00d2b94) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d2c20, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/gauss_easy_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/gauss_easy_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa1, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa1, sb=*0xd00d2b94)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c2c20, sb=*0xd00c2b94) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c2c20, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/mask_vs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/mask_vs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa2, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa2, sb=*0xd00c2b94)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d2c20, sb=*0xd00d2b94) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d2c20, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/mask_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/mask_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa3, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa3, sb=*0xd00d2b94)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c2c20, sb=*0xd00c2b94) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c2c20, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/mask2_fs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2a30, summertime_addr=0xd00c2a34)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2980, summertime_addr=0xd00c2984)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00c2c20, flags=0, fd=*0xd00c2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/mask2_fs.cgelf'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa4, sb=*0xd00c2b94)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa4, sb=*0xd00c2b94)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d2c20, sb=*0xd00d2b94) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d2c20, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/conv_color_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2a30, summertime_addr=0xd00d2a34)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2980, summertime_addr=0xd00d2984)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00d2c20, flags=0, fd=*0xd00d2ad4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/shader/conv_color_fs.cgelf'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa5, sb=*0xd00d2b94)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xa5, sb=*0xd00d2b94)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x77)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
HLE: E {PPU[0x6f] Thread (fios mediathread 2)[0x001f8708]} cellFs TODO: cellFsFsync(fd=0x76)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6748]} sys_io: cellPadInit(max_connect=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6a88]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_ENTER_BUTTON_ASSIGN
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6c48]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=0, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6c48]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=1, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6c48]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=6, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6aa8]} cellSysutil: cellAudioOutConfigure(audioOut=0, config_addr=0xd007f760, option_addr=0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f6cc8]} cellSysutil: cellAudioOutGetState(audioOut=0x0, deviceIndex=0x0, state_addr=0xd007f770)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7a48]} cellAudio: cellAudioInit()
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8aa8]} sysPrxForUser: _sys_heap_create_heap(name=*0x213100, arg2=0x70000, arg3=0x110000, arg4=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x1080)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa13640, attr=*0xa13658)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x1c8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88e8]} sysPrxForUser: _sys_heap_malloc(heap=0xa6, size=0x84)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88e8]} sysPrxForUser: _sys_heap_malloc(heap=0xa6, size=0x84)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88e8]} sysPrxForUser: _sys_heap_malloc(heap=0xa6, size=0x2c)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa19010, attr=*0xa19028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa1a010, attr=*0xa1a028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa1b010, attr=*0xa1b028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa1c010, attr=*0xa1c028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa1d010, attr=*0xa1d028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa1e010, attr=*0xa1e028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa1f010, attr=*0xa1f028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa20010, attr=*0xa20028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa21010, attr=*0xa21028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa22010, attr=*0xa22028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa23010, attr=*0xa23028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88e8]} sysPrxForUser: _sys_heap_malloc(heap=0xa6, size=0x2c)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa25010, attr=*0xa25028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa26010, attr=*0xa26028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa27010, attr=*0xa27028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa28010, attr=*0xa28028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa29010, attr=*0xa29028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa2a010, attr=*0xa2a028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa2b010, attr=*0xa2b028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa2c010, attr=*0xa2c028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa2d010, attr=*0xa2d028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa2e010, attr=*0xa2e028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x88)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa2f010, attr=*0xa2f028)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88e8]} sysPrxForUser: _sys_heap_malloc(heap=0xa6, size=0x2c)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa31008, attr=*0xa31020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa32008, attr=*0xa32020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa33008, attr=*0xa33020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa34008, attr=*0xa34020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa35008, attr=*0xa35020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa36008, attr=*0xa36020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa37008, attr=*0xa37020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa38008, attr=*0xa38020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa39008, attr=*0xa39020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa3a008, attr=*0xa3a020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa3b008, attr=*0xa3b020)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x4e00)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c1a38]} sys_mutex: sys_mutex_create(mutex_id=*0xa150b0, attr=*0xa150b8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c1a5c]} sys_cond: sys_cond_create(cond_id=*0xa15094, mutex_id=0xc9, attr=*0xa15098)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xa150e0, entry=0x227ee8, arg=0xa15000, prio=404, stacksize=0x8000, flags=0x0, threadname=*0x2131c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xa150e0, param=*0xd007f588, arg=0xa15000, unk=0x0, prio=404, stacksize=0x8000, flags=0x0, threadname=*0x2131c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0xcb)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa15180, attr=*0xa15198)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x4e80)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x39500)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8928]} sysPrxForUser: _sys_heap_memalign(heap=0xa6, align=0x10, size=0x1b500)
HLE: W {PPU[0x1] Thread (main_thread)[0x001baf04]} sys_mutex: sys_mutex_create(mutex_id=*0xa133e0, attr=*0xa133e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001baf28]} sys_cond: sys_cond_create(cond_id=*0xa133c0, mutex_id=0xcd, attr=*0xa133c8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001bafb4]} sys_mutex: sys_mutex_create(mutex_id=*0xa13430, attr=*0xa13438)
HLE: W {PPU[0x1] Thread (main_thread)[0x001bafd8]} sys_cond: sys_cond_create(cond_id=*0xa13414, mutex_id=0xcf, attr=*0xa13418)
HLE: W {PPU[0x1] Thread (main_thread)[0x001bb05c]} sys_mutex: sys_mutex_create(mutex_id=*0xa13688, attr=*0xa13690)
HLE: W {PPU[0x1] Thread (main_thread)[0x001bb080]} sys_cond: sys_cond_create(cond_id=*0xa13668, mutex_id=0xd1, attr=*0xa13670)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xa133b0, entry=0x227e90, arg=0x6b28d0, prio=402, stacksize=0x4000, flags=0x0, threadname=*0x2130e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xa133b0, param=*0xd007f668, arg=0x6b28d0, unk=0x0, prio=402, stacksize=0x4000, flags=0x0, threadname=*0x2130e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0xd3)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b2908, attr=*0x6b2928)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b28e0, attr=*0x6b2938)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x6b2948, entry=0x227ed0, arg=0x0, prio=400, stacksize=0x8000, flags=0x0, threadname=*0x213120)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x6b2948, param=*0xd007f728, arg=0x0, unk=0x0, prio=400, stacksize=0x8000, flags=0x0, threadname=*0x213120)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0xd6)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f88a8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x6b2430, attr=*0x6b2954)
HLE: W {PPU[0xd6] Thread (_cellsurMixerMain)[0x001bc880]} sys_event: sys_event_queue_create(equeue_id=*0x6b2924, attr=*0x6b39d0, event_queue_key=0x8000cafe02460300, size=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7b48]} cellAudio: cellAudioPortOpen(audioParam=*0x6b2968, portNum=*0x6b28d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7b48]} cellAudio: *** audio port opened(nChannel=8, nBlock=8, attr=0x0, level=1.000000): port = 0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7ae8]} cellAudio: cellAudioGetPortConfig(portNum=0, portConfig=*0x6b2988)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7b08]} cellAudio: cellAudioPortStart(portNum=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7a68]} cellAudio: cellAudioSetNotifyEventQueue(key=0x8000cafe02460300)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x24283d1c, attr=*0xd007f6f0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8054b8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8054c8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8054d8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8054e8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8054f8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805508, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805518, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805528, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805538, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805548, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805558, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805568, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805578, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805588, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805598, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8055a8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8055b8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8055c8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8055d8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8055e8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a8055f8, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x2a805608, attr=*0xd007f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x24283d20, entry=0x222ff0, arg=0x24283d10, prio=1000, stacksize=0x8000, flags=0x1, threadname=*0x24283d31)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x24283d20, param=*0xd007f818, arg=0x24283d10, unk=0x0, prio=1000, stacksize=0x8000, flags=0x1, threadname=*0x24283d31)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0xf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x24283ddc, attr=*0xd007f6f0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x24281438, attr=*0xd007f7a0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x24283de0, entry=0x222ff0, arg=0x24283dd0, prio=1001, stacksize=0x4000, flags=0x1, threadname=*0x24283df1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x24283de0, param=*0xd007f818, arg=0x24283dd0, unk=0x0, prio=1001, stacksize=0x4000, flags=0x1, threadname=*0x24283df1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f8828]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0xf3)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c3210, sb=*0xd00c3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c3210, sb=*0xd00c3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/s01.at3'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d3210, sb=*0xd00d3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d3210, sb=*0xd00d3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/s02.at3'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d3210, sb=*0xd00d3184) -> sys_fs_stat()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d3210, sb=*0xd00d3184)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/s00.at3'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c3210, sb=*0xd00c3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c3210, sb=*0xd00c3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/tret.at3'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} cellFs: cellFsStat(path=*0xd00d3210, sb=*0xd00d3184) -> sys_fs_stat()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00d3210, sb=*0xd00d3184)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/huse.at3'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d3020, summertime_addr=0xd00d3024)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00d2f70, summertime_addr=0xd00d2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=5, pitch=64, offset=0x4600, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x4740, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=6, pitch=64, offset=0x4900, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=6, pitch=64, offset=0x4c80, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x4e00, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=2, pitch=64, offset=0x4f80, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x5000, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=16, pitch=64, offset=0x5500, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=24, h=1, pitch=64, offset=0x5900, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=1, pitch=64, offset=0x4280, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x42c0, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} cellFs: cellFsStat(path=*0xd00c3210, sb=*0xd00c3184) -> sys_fs_stat()
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=3, pitch=64, offset=0x5a80, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: sys_fs_stat(path=*0xd00c3210, sb=*0xd00c3184)
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=5, pitch=64, offset=0x5d00, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6868]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/s03.at3'
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x5e40, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c3020, summertime_addr=0xd00c3024)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c2fb0]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} sys_time: sys_time_get_timezone(timezone_addr=0xd00c2f70, summertime_addr=0xd00c2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_TIMEZONE
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001c4a74]} cellSysutil: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_SUMMERTIME
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} TODO: NV4097_SET_CONTEXT_DMA_REPORT: 0xbad68000
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4991, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4992, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4993, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataLocation(index=4994, location=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001f7188]} cellGcmSys: cellGcmGetReportDataAddressLocation(index=4994, location=1)
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x4080, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0x5e80, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=1, pitch=64, offset=0x5f00, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: E {RSXThread} NV3089_IMAGE_IN_SIZE: Swizzle2D not implemented
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=32, pitch=128, offset=0x6f80, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0xf0d
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4001
RSX: W {RSXThread} TODO: NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_ZMIN_MAX_CONTROL: cullNearFarEnable=1, zclampEnable=0, cullIgnoreW=0
RSX: W {RSXThread} TODO: NV4097_SET_ZMIN_MAX_CONTROL: cullNearFarEnable=1, zclampEnable=0, cullIgnoreW=0
RSX: W {RSXThread} TODO : NV4097_SET_BLEND_COLOR2: 0xffffffff
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0001
RSX: W {RSXThread} TODO: NV4097_SET_REDUCE_DST_COLOR: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4001
RSX: W {RSXThread} TODO: NV4097_SET_POINT_PARAMS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4001
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4001
RSX: W {RSXThread} TODO: NV4097_SET_FREQUENCY_DIVIDER_OPERATION: 0
RSX: W {RSXThread} FP not found in buffer!
HLE: W {PPU[0x1] Thread (main_thread)[0x0001753c]} sys_semaphore: sys_semaphore_create(sem=*0x386b3c, attr=*0xd007f770, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00017208]} sys_mutex: sys_mutex_create(mutex_id=*0x386ba4, attr=*0xd007f870)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00c2950, flags=0, fd=*0xd00c2804, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00c2950, flags=0, fd=*0xd00c2804, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/s01.at3'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xf6, sb=*0xd00c28c4)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xf6, sb=*0xd00c2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00d2950, flags=0, fd=*0xd00d2804, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00d2950, flags=0, fd=*0xd00d2804, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/s02.at3'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xf7, sb=*0xd00d28c4)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xf7, sb=*0xd00d2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00c2950, flags=0, fd=*0xd00c2804, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00c2950, flags=0, fd=*0xd00c2804, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/s00.at3'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xf8, sb=*0xd00c28c4)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xf8, sb=*0xd00c2f74)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00d2950, flags=0, fd=*0xd00d2804, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00d2950, flags=0, fd=*0xd00d2804, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/tret.at3'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xf9, sb=*0xd00d28c4)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xf9, sb=*0xd00d2f74)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00c2950, flags=0, fd=*0xd00c2804, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00c2950, flags=0, fd=*0xd00c2804, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/huse.at3'
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xfa, sb=*0xd00c28c4)
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xfa, sb=*0xd00c2f74)
RSX: W {RSXThread} VP not found in buffer!
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} cellFs: cellFsOpen(path=*0xd00d2950, flags=0, fd=*0xd00d2804, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: sys_fs_open(path=*0xd00d2950, flags=0, fd=*0xd00d2804, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f6848]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/data/sys/se/s03.at3'
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xfb, sb=*0xd00d28c4)
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8788]} sys_fs: sys_fs_fstat(fd=0xfb, sb=*0xd00d2f74)
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: E {RSXThread} Unknown vp sca_opcode 0x9
RSX: ! {RSXThread} Add program (0):
RSX: ! {RSXThread} *** prog id = 3
RSX: ! {RSXThread} *** vp id = 2
RSX: ! {RSXThread} *** fp id = 1
RSX: ! {RSXThread} *** vp data size = 5680
RSX: ! {RSXThread} *** fp data size = 5680
RSX: ! {RSXThread} *** vp shader = 
#version 420

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 tmp0;
vec4 tmp3;
vec4 cc0 = vec4(0.0);
vec4 tmp5;
vec4 tmp4;
vec4 tmp2;
vec4 tmp1;
vec4 tmp14;
vec4 tmp8;
vec4 tmp6;
vec4 tmp7;
vec4 tmp9;
vec4 tmp10;
vec4 tmp11;
vec4 tmp12;
vec4 tmp13;
vec4 tmp15;
vec4 tmp16;
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
vec4 dst_reg1 = vec4(0.0);
vec4 dst_reg3 = vec4(0.0);
vec4 dst_reg5 = vec4(0.0);
vec4 dst_reg6 = vec4(0.0);
vec4 dst_reg10 = vec4(0.0);
vec4 dst_reg9 = vec4(0.0);
vec4 dst_reg8 = vec4(0.0);
vec4 dst_reg7 = vec4(0.0);
layout (location = 0) in vec4 in_pos;
layout (location = 2) in vec4 in_normal;
layout (location = 3) in vec4 in_diff_color;
layout (location = 8) in vec4 in_tc0;
layout (location = 9) in vec4 in_tc1;
layout (location = 10) in vec4 in_tc2;
layout (location = 11) in vec4 in_tc3;
uniform vec4 vc[468];
ivec4 a0 = ivec4(0);
out vec4 diff_color;
out vec4 front_diff_color;
out vec4 fogc;
out vec4 tc0;
out vec4 tc1;
out vec4 tc2;
out vec4 tc3;
out vec4 tc9;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	diff_color = dst_reg1;
	front_diff_color = dst_reg3;
	fogc = vec4(dst_reg5.x);
	gl_ClipDistance[0] = dst_reg5.y;
	gl_ClipDistance[1] = dst_reg5.z;
	gl_ClipDistance[2] = dst_reg5.w;
	gl_PointSize = dst_reg6.x;
	gl_ClipDistance[3] = dst_reg6.y;
	gl_ClipDistance[4] = dst_reg6.z;
	gl_ClipDistance[5] = dst_reg6.w;
	tc0 = dst_reg7;
	tc1 = dst_reg8;
	tc2 = dst_reg9;
	tc3 = dst_reg10;
	tc9 = dst_reg6;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	int jump_position = 0;
	while (true)
	{
	if (jump_position <= 0)
	{
	tmp0.w = vec4(dot(in_pos, vc[263])).w;
			tmp0.z = vec4(dot(in_pos, vc[262])).z;
			tmp0.y = vec4(dot(in_pos, vc[261])).y;
			tmp0.x = vec4(dot(in_pos, vc[260])).x;
			tmp3.w = vec4(dot(in_pos, vc[259])).w;
			tmp3.y = vec4(dot(in_pos, vc[257])).y;
			tmp3.x = vec4(dot(in_pos, vc[256])).x;
			cc0.xy = vc[467].wxww.xy;
			tmp5.xy = vec4(dot(in_pos, vc[258])).xy;
			tmp4.z = vec4(dot(in_normal.xyzx.xyz, vc[266].xyzx.xyz)).z;
			tmp4.y = vec4(dot(in_normal.xyzx.xyz, vc[265].xyzx.xyz)).y;
			tmp4.x = vec4(dot(in_normal.xyzx.xyz, vc[264].xyzx.xyz)).x;
			tmp2 = clamp(in_diff_color, 0.0, 1.0);
			tmp1 = tmp2;
			tmp4.xyz = (tmp4.xyzx * vc[466].xxxx).xyz;
			tmp4.w = vec4(dot(tmp4.xyzx.xyz, tmp4.xyzx.xyz)).w;
			tmp3.z = tmp5.yyyy.z;
			tmp4.w = inversesqrt(abs(tmp4.wwww)).w;
			tmp14.w = abs(tmp5.xxxx).w;
			tmp14.xyz = tmp4.xyzx.xyz;
			if (notEqual(cc0.xxxx, vec4(0.0)).x) tmp14.xyz.x = (tmp4.wwww * tmp4.xyzx).xyz.x;
			if (notEqual(cc0.xxxx, vec4(0.0)).y) tmp14.xyz.y = (tmp4.wwww * tmp4.xyzx).xyz.y;
			if (notEqual(cc0.xxxx, vec4(0.0)).z) tmp14.xyz.z = (tmp4.wwww * tmp4.xyzx).xyz.z;
			//Unknown vp sca_opcode 0x9
			tmp1.xyz = vc[463].xxxx.xyz;
			tmp1.w = vc[463].xxxx.w;
			tmp4 = in_diff_color;
			cc0.x = vc[467].zzzz.x;
			tmp5.xyz = in_diff_color.xyzx.xyz;
			tmp2.x = vc[462].xxxx.x;
			cc0.y = vec4(lessThan(vc[463].xxxx, tmp2.xxxx)).y;
			if (equal(cc0.xxxx, vec4(0.0)).x) tmp5.xyz.x = vc[465].xyzx.xyz.x;
			if (equal(cc0.xxxx, vec4(0.0)).y) tmp5.xyz.y = vc[465].xyzx.xyz.y;
			if (equal(cc0.xxxx, vec4(0.0)).z) tmp5.xyz.z = vc[465].xyzx.xyz.z;
			if (equal(cc0.xxxx, vec4(0.0)).x) tmp4.x = vc[464].x;
			if (equal(cc0.xxxx, vec4(0.0)).y) tmp4.y = vc[464].y;
			if (equal(cc0.xxxx, vec4(0.0)).z) tmp4.z = vc[464].z;
			if (equal(cc0.xxxx, vec4(0.0)).w) tmp4.w = vc[464].w;
			//Unknown vp sca_opcode 0x9
		}
		
		if (jump_position <= 1)
		{
		tmp2.x = (tmp1.wwww * vc[463].yyyy).x;
			a0.x = ivec4(tmp2.xxxx).x;
			tmp8.z = vc[405].xxxx.z;
			tmp2.xyz = vc[463].xxxx.xyz;
			tmp6.xyz = (tmp3.xyzx * vc[406 + a0.x].wwww).xyz;
			tmp6.xyz = (vc[406 + a0.x].xyzx * tmp3.wwww + -tmp6.xyzx).xyz;
			tmp1.w = (tmp1.wwww + vc[463].zzzz).w;
			tmp5.w = vec4(dot(tmp6.xyzx.xyz, tmp6.xyzx.xyz)).w;
			tmp2.w = vc[463].xxxx.w;
			cc0.w = inversesqrt(abs(tmp5.wwww)).w;
			cc0.z = vec4(lessThan(tmp1.wwww, vc[462].xxxx)).z;
			cc0.x = vc[411 + a0.x].xxxx.x;
			tmp6.xyz = (tmp5.wwww * tmp6.xyzx).xyz;
			tmp6.w = vec4(dot(tmp6.xyzx.xyz, vc[410 + a0.x].xyzx.xyz)).w;
			tmp7.x = vec4(greaterThanEqual(vc[411 + a0.x].xxxx, tmp2.wwww)).x;
			tmp6.w = -tmp6.wwww.w;
			if (lessThan(cc0.xxxx, vec4(0.0)).x) tmp6.w = vec4(vc[463].zzzz.w).x;
			tmp2.w = tmp6.wwww.w;
			tmp7.y = vec4(greaterThan(tmp6.wwww, vc[411 + a0.x].xxxx)).y;
			tmp6.w = log2(tmp6.wwww).w;
			tmp7.z = vec4(equal(tmp7.yyyy, vc[463].xxxx)).z;
			cc0.y = (tmp7.xxxx * tmp7.yyyy).y;
			cc0.x = (tmp7.xxxx * tmp7.zzzz).x;
			tmp7.xyz = (tmp6.xyzx + vc[463].xxzx).xyz;
			tmp5.w = (1.0 / tmp5.wwww).w;
			tmp6.w = (vc[411 + a0.x].yyyy * tmp6.wwww).w;
			tmp7.w = vec4(dot(tmp7.xyzx.xyz, tmp7.xyzx.xyz)).w;
			if (greaterThan(cc0.yyyy, vec4(0.0)).x) tmp2.w = vec4(exp2(tmp6.wwww).w).x;
			cc0.y = vec4(dot(tmp7.xyzx.xyz, tmp7.xyzx.xyz)).y;
			tmp8.x = vec4(dot(tmp14.xyzx.xyz, tmp6.xyzx.xyz)).x;
			tmp6.y = inversesqrt(abs(tmp7.wwww)).y;
			tmp6.x = (vc[412 + a0.x].zzzz * tmp5.wwww + vc[412 + a0.x].yyyy).x;
			if (greaterThan(cc0.yyyy, vec4(0.0)).x) tmp2.xyz.x = (tmp6.yyyy * tmp7.xyzx).xyz.x;
			if (greaterThan(cc0.yyyy, vec4(0.0)).y) tmp2.xyz.y = (tmp6.yyyy * tmp7.xyzx).xyz.y;
			if (greaterThan(cc0.yyyy, vec4(0.0)).z) tmp2.xyz.z = (tmp6.yyyy * tmp7.xyzx).xyz.z;
			tmp8.y = vec4(dot(tmp14.xyzx.xyz, tmp2.xyzx.xyz)).y;
			tmp2.x = (tmp6.xxxx * tmp5.wwww + vc[412 + a0.x].xxxx).x;
			tmp2.yz = vec4(1.0, tmp8.xyxz.x, (tmp8.xyxz.x > 0.0 ? exp(tmp8.xyxz.w * log2(tmp8.xyxz.y)) : 0.0), 1.0).yz;
			if (greaterThan(cc0.xxxx, vec4(0.0)).x) tmp2.w = vec4(vc[463].xxxx.w).x;
			tmp5.w = (1.0 / tmp2.xxxx).w;
			tmp6.xyz = (tmp2.yyyy * tmp4.xyzx).xyz;
			tmp2.xyz = (tmp2.zzzz * vc[404].xyzx).xyz;
			tmp6.xyz = (tmp6.xyzx * vc[408 + a0.x].xyzx).xyz;
			tmp6.xyz = (tmp5.xyzx * vc[407 + a0.x].xyzx + tmp6.xyzx).xyz;
			tmp2.xyz = (tmp2.xyzx * vc[409 + a0.x].xyzx + tmp6.xyzx).xyz;
			tmp2.w = (tmp2.wwww * tmp5.wwww).w;
			tmp1.xyz = (tmp2.wwww * tmp2.xyzx + tmp1.xyzx).xyz;
			//Unknown vp sca_opcode 0x9
		}
		
		if (jump_position <= 2)
		{
		cc0.x = vc[467].yyyy.x;
			tmp2.xyz = (tmp5.xyzx * vc[403].xyzx).xyz;
			tmp2.xyz = (tmp2.xyzx + vc[402].xyzx).xyz;
			tmp1.xyz = (tmp1.xyzx + tmp2.xyzx).xyz;
			tmp1.w = tmp4.wwww.w;
			tmp2 = clamp(tmp1, 0.0, 1.0);
			tmp1 = tmp2;
			//Unknown vp sca_opcode 0x9
			tmp2.x = vc[462].xxxx.x;
			cc0.x = vec4(lessThan(vc[463].xxxx, tmp2.xxxx)).x;
			tmp2.xyz = vc[463].xxxx.xyz;
			//Unknown vp sca_opcode 0x9
			tmp2.w = vc[463].xxxx.w;
		}
		
		if (jump_position <= 3)
		{
		tmp5.w = (tmp2.wwww * vc[463].yyyy).w;
			a0.x = ivec4(tmp5.wwww).x;
			tmp9.z = vc[405].xxxx.z;
			tmp6.xyz = vc[463].xxxx.xyz;
			tmp7.xyz = (tmp3.xyzx * vc[406 + a0.x].wwww).xyz;
			tmp7.xyz = (vc[406 + a0.x].xyzx * tmp3.wwww + -tmp7.xyzx).xyz;
			tmp2.w = (tmp2.wwww + vc[463].zzzz).w;
			tmp6.w = vec4(dot(tmp7.xyzx.xyz, tmp7.xyzx.xyz)).w;
			tmp5.w = vc[463].xxxx.w;
			cc0.w = inversesqrt(abs(tmp6.wwww)).w;
			cc0.z = vec4(lessThan(tmp2.wwww, vc[462].xxxx)).z;
			cc0.x = vc[411 + a0.x].xxxx.x;
			tmp7.xyz = (tmp6.wwww * tmp7.xyzx).xyz;
			tmp7.w = vec4(dot(tmp7.xyzx.xyz, vc[410 + a0.x].xyzx.xyz)).w;
			tmp8.x = vec4(greaterThanEqual(vc[411 + a0.x].xxxx, tmp5.wwww)).x;
			tmp8.y = -tmp7.wwww.y;
			if (lessThan(cc0.xxxx, vec4(0.0)).x) tmp8.y = vec4(vc[463].zzzz.y).x;
			tmp7.w = log2(tmp8.yyyy).w;
			tmp5.w = tmp8.yyyy.w;
			tmp8.y = vec4(greaterThan(tmp8.yyyy, vc[411 + a0.x].xxxx)).y;
			tmp8.z = vec4(equal(tmp8.yyyy, vc[463].xxxx)).z;
			cc0.y = (tmp8.xxxx * tmp8.yyyy).y;
			cc0.x = (tmp8.xxxx * tmp8.zzzz).x;
			tmp8.xyz = (tmp7.xyzx + vc[463].xxzx).xyz;
			tmp7.w = (vc[411 + a0.x].yyyy * tmp7.wwww).w;
			tmp6.w = (1.0 / tmp6.wwww).w;
			tmp8.w = vec4(dot(tmp8.xyzx.xyz, tmp8.xyzx.xyz)).w;
			if (greaterThan(cc0.yyyy, vec4(0.0)).x) tmp5.w = vec4(exp2(tmp7.wwww).w).x;
			cc0.y = vec4(dot(tmp8.xyzx.xyz, tmp8.xyzx.xyz)).y;
			tmp9.x = vec4(dot(-tmp14.xyzx.xyz, tmp7.xyzx.xyz)).x;
			tmp7.y = inversesqrt(abs(tmp8.wwww)).y;
			tmp7.x = (vc[412 + a0.x].zzzz * tmp6.wwww + vc[412 + a0.x].yyyy).x;
			if (greaterThan(cc0.yyyy, vec4(0.0)).x) tmp6.xyz.x = (tmp7.yyyy * tmp8.xyzx).xyz.x;
			if (greaterThan(cc0.yyyy, vec4(0.0)).y) tmp6.xyz.y = (tmp7.yyyy * tmp8.xyzx).xyz.y;
			if (greaterThan(cc0.yyyy, vec4(0.0)).z) tmp6.xyz.z = (tmp7.yyyy * tmp8.xyzx).xyz.z;
			tmp9.y = vec4(dot(-tmp14.xyzx.xyz, tmp6.xyzx.xyz)).y;
			tmp6.x = (tmp7.xxxx * tmp6.wwww + vc[412 + a0.x].xxxx).x;
			tmp7.yz = vec4(1.0, tmp9.xyxz.x, (tmp9.xyxz.x > 0.0 ? exp(tmp9.xyxz.w * log2(tmp9.xyxz.y)) : 0.0), 1.0).yz;
			if (greaterThan(cc0.xxxx, vec4(0.0)).x) tmp5.w = vec4(vc[463].xxxx.w).x;
			tmp6.w = (1.0 / tmp6.xxxx).w;
			tmp6.xyz = (tmp7.zzzz * vc[404].xyzx).xyz;
			tmp7.xyz = (tmp7.yyyy * tmp4.xyzx).xyz;
			tmp7.xyz = (tmp7.xyzx * vc[408 + a0.x].xyzx).xyz;
			tmp7.xyz = (tmp5.xyzx * vc[407 + a0.x].xyzx + tmp7.xyzx).xyz;
			tmp6.xyz = (tmp6.xyzx * vc[409 + a0.x].xyzx + tmp7.xyzx).xyz;
			tmp5.w = (tmp5.wwww * tmp6.wwww).w;
			tmp2.xyz = (tmp5.wwww * tmp6.xyzx + tmp2.xyzx).xyz;
			//Unknown vp sca_opcode 0x9
		}
		
		if (jump_position <= 4)
		{
		tmp2.w = clamp(tmp4.wwww.w, 0.0, 1.0);
			tmp4.xyz = (tmp5.xyzx * vc[403].xyzx).xyz;
			tmp4.xyz = (tmp4.xyzx + vc[402].xyzx).xyz;
			tmp2.xyz = clamp((tmp2.xyzx + tmp4.xyzx).xyz, 0.0, 1.0);
		}
		
		if (jump_position <= 5)
		{
		tmp4.x = vc[463].xxxx.x;
			tmp4 = vec4(notEqual(vc[401], tmp4.xxxx));
			tmp4.x = clamp((tmp4.xxxx + tmp4.yyyy).x, 0.0, 1.0);
			tmp4.x = clamp((tmp4.xxxx + tmp4.zzzz).x, 0.0, 1.0);
			cc0.x = clamp((tmp4.xxxx + tmp4.wwww).x, 0.0, 1.0);
			//Unknown vp sca_opcode 0x9
			tmp4 = in_tc0;
			tmp9.x = vc[400].xxxx.x;
			tmp7.zw = vc[463].xxxz.zw;
			tmp9.y = vec4(dot(tmp14.xyzx.xyz, tmp3.xyzx.xyz)).y;
			tmp5 = (tmp3.yyyy * vc[268]);
			tmp8.x = vec4(dot(tmp3.xyzx.xyz, tmp3.xyzx.xyz)).x;
			tmp7.xy = vc[400].yzyy.xy;
			tmp4 = in_tc0;
			tmp6 = (in_pos.yyyy * vc[268]);
			tmp8.zw = vc[463].zzzw.zw;
			cc0 = vec4(equal(vc[401], tmp8.zzzz));
			tmp6 = (in_pos.xxxx * vc[267] + tmp6);
			tmp6 = (in_pos.zzzz * vc[269] + tmp6);
			if (greaterThan(cc0, vec4(0.0)).x) tmp4.x = (in_pos.wwww * vc[270] + tmp6).x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp4.y = (in_pos.wwww * vc[270] + tmp6).y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp4.z = (in_pos.wwww * vc[270] + tmp6).z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp4.w = (in_pos.wwww * vc[270] + tmp6).w;
			cc0 = vec4(equal(vc[401], tmp7.xxxx));
			tmp6.x = inversesqrt(abs(tmp8.xxxx)).x;
			tmp5 = (tmp3.xxxx * vc[267] + tmp5);
			tmp6.xyz = (tmp6.xxxx * tmp3.xyzx).xyz;
			tmp6.w = vec4(dot(tmp14.xyzx.xyz, tmp6.xyzx.xyz)).w;
			tmp5 = (tmp3.zzzz * vc[269] + tmp5);
			tmp8.xyz = (tmp14.xyzx * tmp6.wwww).xyz;
			tmp8.xyz = (tmp8.xyzx * vc[400].yyyy).xyz;
			tmp6.xyz = (tmp6.xyzx + -tmp8.xyzx).xyz;
			if (greaterThan(cc0, vec4(0.0)).x) tmp4.x = (tmp3.wwww * vc[270] + tmp5).x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp4.y = (tmp3.wwww * vc[270] + tmp5).y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp4.z = (tmp3.wwww * vc[270] + tmp5).z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp4.w = (tmp3.wwww * vc[270] + tmp5).w;
			tmp5.xyz = (tmp6.xyzx + vc[463].xxzx).xyz;
			cc0 = vec4(equal(vc[401], tmp7.yyyy));
			tmp5.w = vec4(dot(tmp5.xyzx.xyz, tmp5.xyzx.xyz)).w;
			tmp5.xyz = (tmp14.xyzx * tmp9.yyyy).xyz;
			tmp5.w = inversesqrt(abs(tmp5.wwww)).w;
			tmp5.xyz = (-tmp5.xyzx * vc[400].yyyy + tmp3.xyzx).xyz;
			tmp6.xy = (tmp5.wwww * tmp6.xyxx).xy;
			tmp7.xy = (tmp6.xyxx * vc[400].wwww + vc[400].wwww).xy;
			tmp5.w = vec4(dot(tmp5.xyzx.xyz, tmp5.xyzx.xyz)).w;
			if (greaterThan(cc0, vec4(0.0)).x) tmp4.x = tmp7.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp4.y = tmp7.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp4.z = tmp7.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp4.w = tmp7.w;
			cc0 = vec4(equal(vc[401], tmp9.xxxx));
			tmp6.x = inversesqrt(abs(tmp5.wwww)).x;
			tmp5.w = vc[463].zzzz.w;
			tmp5.xyz = (tmp6.xxxx * tmp5.xyzx).xyz;
			if (greaterThan(cc0, vec4(0.0)).x) tmp4.x = tmp5.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp4.y = tmp5.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp4.z = tmp5.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp4.w = tmp5.w;
			cc0 = vec4(equal(vc[401], tmp8.wwww));
			tmp5.xyz = tmp14.xyzx.xyz;
			tmp5.w = vc[463].zzzz.w;
			if (greaterThan(cc0, vec4(0.0)).x) tmp4.x = tmp5.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp4.y = tmp5.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp4.z = tmp5.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp4.w = tmp5.w;
		}
		
		if (jump_position <= 6)
		{
		tmp5.x = vc[463].xxxx.x;
			tmp5 = vec4(notEqual(vc[399], tmp5.xxxx));
			tmp5.x = clamp((tmp5.xxxx + tmp5.yyyy).x, 0.0, 1.0);
			tmp5.x = clamp((tmp5.xxxx + tmp5.zzzz).x, 0.0, 1.0);
			cc0.x = clamp((tmp5.xxxx + tmp5.wwww).x, 0.0, 1.0);
			tmp5 = tmp4;
			//Unknown vp sca_opcode 0x9
			tmp6 = in_tc1;
			tmp9.zw = vc[463].xxxz.zw;
			tmp9.x = vec4(dot(tmp14.xyzx.xyz, tmp3.xyzx.xyz)).x;
			tmp7 = (tmp3.yyyy * vc[276]);
			tmp10.xyz = vc[400].xyzx.xyz;
			tmp6 = in_tc1;
			tmp9.y = vec4(dot(tmp3.xyzx.xyz, tmp3.xyzx.xyz)).y;
			tmp8 = (in_pos.yyyy * vc[276]);
			tmp11.zw = vc[463].zzzw.zw;
			cc0 = vec4(equal(vc[399], tmp11.zzzz));
			tmp8 = (in_pos.xxxx * vc[275] + tmp8);
			tmp9.y = inversesqrt(abs(tmp9.yyyy)).y;
			tmp8 = (in_pos.zzzz * vc[277] + tmp8);
			if (greaterThan(cc0, vec4(0.0)).x) tmp6.x = (in_pos.wwww * vc[278] + tmp8).x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp6.y = (in_pos.wwww * vc[278] + tmp8).y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp6.z = (in_pos.wwww * vc[278] + tmp8).z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp6.w = (in_pos.wwww * vc[278] + tmp8).w;
			cc0 = vec4(equal(vc[399], tmp10.yyyy));
			tmp8.xyz = (tmp9.yyyy * tmp3.xyzx).xyz;
			tmp8.w = vec4(dot(tmp14.xyzx.xyz, tmp8.xyzx.xyz)).w;
			tmp7 = (tmp3.xxxx * vc[275] + tmp7);
			tmp11.xyz = (tmp14.xyzx * tmp8.wwww).xyz;
			tmp11.xyz = (tmp11.xyzx * vc[400].yyyy).xyz;
			tmp8.xyz = (tmp8.xyzx + -tmp11.xyzx).xyz;
			tmp7 = (tmp3.zzzz * vc[277] + tmp7);
			tmp11.xyz = (tmp8.xyzx + vc[463].xxzx).xyz;
			if (greaterThan(cc0, vec4(0.0)).x) tmp6.x = (tmp3.wwww * vc[278] + tmp7).x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp6.y = (tmp3.wwww * vc[278] + tmp7).y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp6.z = (tmp3.wwww * vc[278] + tmp7).z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp6.w = (tmp3.wwww * vc[278] + tmp7).w;
			tmp7.w = vec4(dot(tmp11.xyzx.xyz, tmp11.xyzx.xyz)).w;
			cc0 = vec4(equal(vc[399], tmp10.zzzz));
			tmp7.xyz = (tmp14.xyzx * tmp9.xxxx).xyz;
			tmp7.w = inversesqrt(abs(tmp7.wwww)).w;
			tmp7.xyz = (-tmp7.xyzx * vc[400].yyyy + tmp3.xyzx).xyz;
			tmp8.xy = (tmp7.wwww * tmp8.xyxx).xy;
			tmp9.xy = (tmp8.xyxx * vc[400].wwww + vc[400].wwww).xy;
			tmp7.w = vec4(dot(tmp7.xyzx.xyz, tmp7.xyzx.xyz)).w;
			if (greaterThan(cc0, vec4(0.0)).x) tmp6.x = tmp9.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp6.y = tmp9.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp6.z = tmp9.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp6.w = tmp9.w;
			cc0.x = inversesqrt(abs(tmp7.wwww)).x;
			cc0 = vec4(equal(vc[399], tmp10.xxxx));
			tmp7.w = vc[463].zzzz.w;
			tmp7.xyz = (tmp8.xxxx * tmp7.xyzx).xyz;
			if (greaterThan(cc0, vec4(0.0)).x) tmp6.x = tmp7.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp6.y = tmp7.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp6.z = tmp7.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp6.w = tmp7.w;
			cc0 = vec4(equal(vc[399], tmp11.wwww));
			tmp7.xyz = tmp14.xyzx.xyz;
			tmp7.w = vc[463].zzzz.w;
			if (greaterThan(cc0, vec4(0.0)).x) tmp6.x = tmp7.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp6.y = tmp7.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp6.z = tmp7.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp6.w = tmp7.w;
		}
		
		if (jump_position <= 7)
		{
		tmp7.x = vc[463].xxxx.x;
			tmp7 = vec4(notEqual(vc[398], tmp7.xxxx));
			tmp7.x = clamp((tmp7.xxxx + tmp7.yyyy).x, 0.0, 1.0);
			tmp7.x = clamp((tmp7.xxxx + tmp7.zzzz).x, 0.0, 1.0);
			cc0.x = clamp((tmp7.xxxx + tmp7.wwww).x, 0.0, 1.0);
			tmp7 = tmp6;
			//Unknown vp sca_opcode 0x9
			tmp8 = in_tc2;
			tmp11.zw = vc[463].xxxz.zw;
			tmp11.x = vec4(dot(tmp14.xyzx.xyz, tmp3.xyzx.xyz)).x;
			tmp9 = (tmp3.yyyy * vc[284]);
			tmp12.xyz = vc[400].xyzx.xyz;
			tmp8 = in_tc2;
			tmp11.y = vec4(dot(tmp3.xyzx.xyz, tmp3.xyzx.xyz)).y;
			tmp10 = (in_pos.yyyy * vc[284]);
			tmp13.zw = vc[463].zzzw.zw;
			cc0 = vec4(equal(vc[398], tmp13.zzzz));
			tmp10 = (in_pos.xxxx * vc[283] + tmp10);
			tmp11.y = inversesqrt(abs(tmp11.yyyy)).y;
			tmp10 = (in_pos.zzzz * vc[285] + tmp10);
			if (greaterThan(cc0, vec4(0.0)).x) tmp8.x = (in_pos.wwww * vc[286] + tmp10).x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp8.y = (in_pos.wwww * vc[286] + tmp10).y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp8.z = (in_pos.wwww * vc[286] + tmp10).z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp8.w = (in_pos.wwww * vc[286] + tmp10).w;
			cc0 = vec4(equal(vc[398], tmp12.yyyy));
			tmp10.xyz = (tmp11.yyyy * tmp3.xyzx).xyz;
			tmp10.w = vec4(dot(tmp14.xyzx.xyz, tmp10.xyzx.xyz)).w;
			tmp9 = (tmp3.xxxx * vc[283] + tmp9);
			tmp13.xyz = (tmp14.xyzx * tmp10.wwww).xyz;
			tmp13.xyz = (tmp13.xyzx * vc[400].yyyy).xyz;
			tmp10.xyz = (tmp10.xyzx + -tmp13.xyzx).xyz;
			tmp9 = (tmp3.zzzz * vc[285] + tmp9);
			tmp13.xyz = (tmp10.xyzx + vc[463].xxzx).xyz;
			if (greaterThan(cc0, vec4(0.0)).x) tmp8.x = (tmp3.wwww * vc[286] + tmp9).x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp8.y = (tmp3.wwww * vc[286] + tmp9).y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp8.z = (tmp3.wwww * vc[286] + tmp9).z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp8.w = (tmp3.wwww * vc[286] + tmp9).w;
			tmp9.w = vec4(dot(tmp13.xyzx.xyz, tmp13.xyzx.xyz)).w;
			cc0 = vec4(equal(vc[398], tmp12.zzzz));
			tmp9.xyz = (tmp14.xyzx * tmp11.xxxx).xyz;
			tmp9.w = inversesqrt(abs(tmp9.wwww)).w;
			tmp9.xyz = (-tmp9.xyzx * vc[400].yyyy + tmp3.xyzx).xyz;
			tmp10.xy = (tmp9.wwww * tmp10.xyxx).xy;
			tmp11.xy = (tmp10.xyxx * vc[400].wwww + vc[400].wwww).xy;
			tmp9.w = vec4(dot(tmp9.xyzx.xyz, tmp9.xyzx.xyz)).w;
			if (greaterThan(cc0, vec4(0.0)).x) tmp8.x = tmp11.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp8.y = tmp11.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp8.z = tmp11.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp8.w = tmp11.w;
			cc0.x = inversesqrt(abs(tmp9.wwww)).x;
			cc0 = vec4(equal(vc[398], tmp12.xxxx));
			tmp9.w = vc[463].zzzz.w;
			tmp9.xyz = (tmp10.xxxx * tmp9.xyzx).xyz;
			if (greaterThan(cc0, vec4(0.0)).x) tmp8.x = tmp9.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp8.y = tmp9.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp8.z = tmp9.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp8.w = tmp9.w;
			cc0 = vec4(equal(vc[398], tmp13.wwww));
			tmp9.xyz = tmp14.xyzx.xyz;
			tmp9.w = vc[463].zzzz.w;
			if (greaterThan(cc0, vec4(0.0)).x) tmp8.x = tmp9.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp8.y = tmp9.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp8.z = tmp9.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp8.w = tmp9.w;
		}
		
		if (jump_position <= 8)
		{
		tmp9.x = vc[463].xxxx.x;
			tmp9 = vec4(notEqual(vc[397], tmp9.xxxx));
			tmp9.x = clamp((tmp9.xxxx + tmp9.yyyy).x, 0.0, 1.0);
			tmp9.x = clamp((tmp9.xxxx + tmp9.zzzz).x, 0.0, 1.0);
			cc0.x = clamp((tmp9.xxxx + tmp9.wwww).x, 0.0, 1.0);
			tmp9 = tmp8;
			//Unknown vp sca_opcode 0x9
			tmp10 = in_tc3;
			tmp13.zw = vc[463].xxxz.zw;
			tmp13.x = vec4(dot(tmp14.xyzx.xyz, tmp3.xyzx.xyz)).x;
			tmp11 = (tmp3.yyyy * vc[292]);
			tmp15.xyz = vc[400].xyzx.xyz;
			tmp10 = in_tc3;
			tmp13.y = vec4(dot(tmp3.xyzx.xyz, tmp3.xyzx.xyz)).y;
			tmp12 = (in_pos.yyyy * vc[292]);
			tmp16.zw = vc[463].zzzw.zw;
			cc0 = vec4(equal(vc[397], tmp16.zzzz));
			tmp12 = (in_pos.xxxx * vc[291] + tmp12);
			tmp13.y = inversesqrt(abs(tmp13.yyyy)).y;
			tmp12 = (in_pos.zzzz * vc[293] + tmp12);
			if (greaterThan(cc0, vec4(0.0)).x) tmp10.x = (in_pos.wwww * vc[294] + tmp12).x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp10.y = (in_pos.wwww * vc[294] + tmp12).y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp10.z = (in_pos.wwww * vc[294] + tmp12).z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp10.w = (in_pos.wwww * vc[294] + tmp12).w;
			cc0 = vec4(equal(vc[397], tmp15.yyyy));
			tmp12.xyz = (tmp13.yyyy * tmp3.xyzx).xyz;
			tmp12.w = vec4(dot(tmp14.xyzx.xyz, tmp12.xyzx.xyz)).w;
			tmp11 = (tmp3.xxxx * vc[291] + tmp11);
			tmp16.xyz = (tmp14.xyzx * tmp12.wwww).xyz;
			tmp16.xyz = (tmp16.xyzx * vc[400].yyyy).xyz;
			tmp12.xyz = (tmp12.xyzx + -tmp16.xyzx).xyz;
			tmp11 = (tmp3.zzzz * vc[293] + tmp11);
			tmp16.xyz = (tmp12.xyzx + vc[463].xxzx).xyz;
			if (greaterThan(cc0, vec4(0.0)).x) tmp10.x = (tmp3.wwww * vc[294] + tmp11).x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp10.y = (tmp3.wwww * vc[294] + tmp11).y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp10.z = (tmp3.wwww * vc[294] + tmp11).z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp10.w = (tmp3.wwww * vc[294] + tmp11).w;
			tmp11.w = vec4(dot(tmp16.xyzx.xyz, tmp16.xyzx.xyz)).w;
			cc0 = vec4(equal(vc[397], tmp15.zzzz));
			tmp11.xyz = (tmp14.xyzx * tmp13.xxxx).xyz;
			tmp11.w = inversesqrt(abs(tmp11.wwww)).w;
			tmp11.xyz = (-tmp11.xyzx * vc[400].yyyy + tmp3.xyzx).xyz;
			tmp12.xy = (tmp11.wwww * tmp12.xyxx).xy;
			tmp13.xy = (tmp12.xyxx * vc[400].wwww + vc[400].wwww).xy;
			tmp11.w = vec4(dot(tmp11.xyzx.xyz, tmp11.xyzx.xyz)).w;
			if (greaterThan(cc0, vec4(0.0)).x) tmp10.x = tmp13.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp10.y = tmp13.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp10.z = tmp13.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp10.w = tmp13.w;
			cc0.x = inversesqrt(abs(tmp11.wwww)).x;
			cc0 = vec4(equal(vc[397], tmp15.xxxx));
			tmp11.w = vc[463].zzzz.w;
			tmp11.xyz = (tmp12.xxxx * tmp11.xyzx).xyz;
			if (greaterThan(cc0, vec4(0.0)).x) tmp10.x = tmp11.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp10.y = tmp11.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp10.z = tmp11.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp10.w = tmp11.w;
			cc0 = vec4(equal(vc[397], tmp16.wwww));
			tmp11.xyz = tmp14.xyzx.xyz;
			tmp11.w = vc[463].zzzz.w;
			if (greaterThan(cc0, vec4(0.0)).x) tmp10.x = tmp11.x;
			if (greaterThan(cc0, vec4(0.0)).y) tmp10.y = tmp11.y;
			if (greaterThan(cc0, vec4(0.0)).z) tmp10.z = tmp11.z;
			if (greaterThan(cc0, vec4(0.0)).w) tmp10.w = tmp11.w;
		}
		
		if (jump_position <= 9)
		{
		dst_reg0 = tmp0;
			dst_reg1 = tmp1;
			dst_reg3 = tmp2;
			dst_reg5.y = vec4(dot(tmp3, vc[395])).y;
			dst_reg5.z = vec4(dot(tmp3, vc[394])).z;
			dst_reg5.w = vec4(dot(tmp3, vc[393])).w;
			dst_reg6.y = vec4(dot(tmp3, vc[392])).y;
			dst_reg6.z = vec4(dot(tmp3, vc[391])).z;
			dst_reg6.w = vec4(dot(tmp3, vc[390])).w;
			dst_reg5.x = tmp14.wwww.x;
			tmp0.w = vec4(dot(tmp10, vc[298])).w;
			tmp0.z = vec4(dot(tmp10, vc[297])).z;
			tmp0.y = vec4(dot(tmp10, vc[296])).y;
			tmp0.x = vec4(dot(tmp10, vc[295])).x;
			dst_reg10 = tmp10;
			dst_reg9.w = vec4(dot(tmp8, vc[290])).w;
			dst_reg9.z = vec4(dot(tmp8, vc[289])).z;
			dst_reg9.y = vec4(dot(tmp8, vc[288])).y;
			dst_reg9.x = vec4(dot(tmp8, vc[287])).x;
			dst_reg8.w = vec4(dot(tmp6, vc[282])).w;
			dst_reg8.z = vec4(dot(tmp6, vc[281])).z;
			dst_reg8.y = vec4(dot(tmp6, vc[280])).y;
			cc0.x = vc[396].xxxx.x;
			dst_reg7.w = vec4(dot(tmp4, vc[274])).w;
			dst_reg7.z = vec4(dot(tmp4, vc[273])).z;
			dst_reg7.y = vec4(dot(tmp4, vc[272])).y;
			dst_reg7.x = vec4(dot(tmp4, vc[271])).x;
			dst_reg8.x = vec4(dot(tmp6, vc[279])).x;
			if (equal(cc0.xxxx, vec4(0.0)).x) dst_reg7.x = tmp5.x;
			if (equal(cc0.xxxx, vec4(0.0)).y) dst_reg7.y = tmp5.y;
			if (equal(cc0.xxxx, vec4(0.0)).z) dst_reg7.z = tmp5.z;
			if (equal(cc0.xxxx, vec4(0.0)).w) dst_reg7.w = tmp5.w;
			if (equal(cc0.xxxx, vec4(0.0)).x) dst_reg8.x = tmp7.x;
			if (equal(cc0.xxxx, vec4(0.0)).y) dst_reg8.y = tmp7.y;
			if (equal(cc0.xxxx, vec4(0.0)).z) dst_reg8.z = tmp7.z;
			if (equal(cc0.xxxx, vec4(0.0)).w) dst_reg8.w = tmp7.w;
			if (equal(cc0.xxxx, vec4(0.0)).x) dst_reg9.x = tmp9.x;
			if (equal(cc0.xxxx, vec4(0.0)).y) dst_reg9.y = tmp9.y;
			if (equal(cc0.xxxx, vec4(0.0)).z) dst_reg9.z = tmp9.z;
			if (equal(cc0.xxxx, vec4(0.0)).w) dst_reg9.w = tmp9.w;
	if (notEqual(cc0.xxxx, vec4(0.0)).x) dst_reg10.x = tmp0.x;
	if (notEqual(cc0.xxxx, vec4(0.0)).y) dst_reg10.y = tmp0.y;
	if (notEqual(cc0.xxxx, vec4(0.0)).z) dst_reg10.z = tmp0.z;
	if (notEqual(cc0.xxxx, vec4(0.0)).w) dst_reg10.w = tmp0.w;
	}
	break;
	}
}

RSX: ! {RSXThread} *** fp shader = 
#version 420

vec4 r0 = vec4(0.0);
vec4 r2 = vec4(0.0);
vec4 r1 = vec4(0.0);
vec4 h0 = vec4(0.0);
uniform sampler2D tex0;
in vec4 tc6;
in vec4 tc7;
in vec4 tc0;
in vec4 tc1;
in vec4 tc2;
in vec4 tc3;
in vec4 tc5;
in vec4 tc4;
in vec4 diff_color;
uniform vec4 fc3776 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc3808 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc3872 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc3920 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc3952 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4016 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4064 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4128 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4176 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4208 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4256 = vec4(0.250000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4288 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4336 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4368 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4416 = vec4(0.250000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4640 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4688 = vec4(0.250000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4736 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4800 = vec4(0.250000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4848 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4928 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc4960 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5024 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5072 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5104 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5168 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5216 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5280 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5328 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5360 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5408 = vec4(0.250000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5440 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5488 = vec4(0.500000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5520 = vec4(-0.001953, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5568 = vec4(0.250000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc5664 = vec4(0.111111, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc6.xy);
	r2 = (r2 + r0);
	r0 = texture(tex0, tc7.xy);
	r2 = (r0 * fc3776.xxxx + r2);
	r0.xy = (tc0 + fc3808.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r1 + r2);
	r1.xy = (tc1 + fc3872.xyxx).xy;
	r1 = texture(tex0, r1.xy);
	r1 = (r0 * fc3920.xxxx + r1);
	r0.xy = (tc2 + fc3952.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r1 = (r1 + r0);
	r0.xy = (tc3 + fc4016.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r1 = (r0 * fc4064.xxxx + r1);
	r1 = (r2 + r1);
	r0.xy = (tc5 + fc4128.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r0 * fc4176.xxxx);
	r0.xy = (tc4 + fc4208.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r0 * fc4256.xxxx + r2);
	r0.xy = (tc6 + fc4288.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r0 * fc4336.xxxx + r2);
	r0.xy = (tc7 + fc4368.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r0 * fc4416.xxxx + r2);
	r1 = (r1 + r2);
	h0 = diff_color;
	r0 = (r1 * h0);
	r1 = texture(tex0, tc1.xy);
	r2 = (r1 * fc4640.xxxx);
	r1 = texture(tex0, tc0.xy);
	r2 = (r1 * fc4688.xxxx + r2);
	r1 = texture(tex0, tc2.xy);
	r2 = (r1 * fc4736.xxxx + r2);
	r0 = texture(tex0, tc4.xy);
	r1 = texture(tex0, tc3.xy);
	r1 = (r1 * fc4800.xxxx + r2);
	r2 = texture(tex0, tc5.xy);
	r2 = (r0 * fc4848.xxxx + r2);
	r0 = texture(tex0, tc6.xy);
	r2 = (r2 + r0);
	r0 = texture(tex0, tc7.xy);
	r2 = (r0 * fc4928.xxxx + r2);
	r0.xy = (tc0 + fc4960.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r1 + r2);
	r1.xy = (tc1 + fc5024.xyxx).xy;
	r1 = texture(tex0, r1.xy);
	r1 = (r0 * fc5072.xxxx + r1);
	r0.xy = (tc2 + fc5104.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r1 = (r1 + r0);
	r0.xy = (tc3 + fc5168.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r1 = (r0 * fc5216.xxxx + r1);
	r1 = (r2 + r1);
	r0.xy = (tc5 + fc5280.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r0 * fc5328.xxxx);
	r0.xy = (tc4 + fc5360.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r0 * fc5408.xxxx + r2);
	r0.xy = (tc6 + fc5440.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r0 * fc5488.xxxx + r2);
	r0.xy = (tc7 + fc5520.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r2 = (r0 * fc5568.xxxx + r2);
	r1 = (r1 + r2);
	h0 = diff_color;
	r0 = (r1 * h0);
	r0 = (r0 * fc5664.xxxx);
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} RSX thread aborted
RSX: ! {RSXThread} RSX thread ended
HLE: W {PPU[0xf3] Thread (audio fade thread)[0x00026f70]} sys_timer: sys_timer_usleep(sleep_time=0x2710) aborted
HLE: W {PPU[0x50] Thread (SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0x47) aborted
HLE: ! {PPU[0x2] Thread (Callback Thread)[0x00000000]} CallbackManager thread aborted
HLE: ! {VBlank thread} VBlank thread aborted
HLE: W {PPU[0x50] Thread (SpursHdlr0)[0x00000000]} cellSpurs: SPURS Handler Thread 0 aborted
HLE: W {PPU[0x71] Thread (fios scheduler 1)[0x001f8868]} sys_lwcond: _sys_lwcond_queue_wait(lwcond_id=0x69) aborted
HLE: W {PPU[0x99] Thread (texture thread)[0x00034d14]} sys_timer: sys_timer_usleep(sleep_time=0x2710) aborted
HLE: W {PPU[0x70] Thread (fios mediathread 3)[0x001f8868]} sys_lwcond: _sys_lwcond_queue_wait(lwcond_id=0x6e) aborted
HLE: W {PPU[0xd6] Thread (_cellsurMixerMain)[0x001bc91c]} sys_event: sys_event_queue_receive(equeue_id=0xd8) aborted
HLE: W {PPU[0x90] Thread (fios mediathread 7)[0x001f8868]} sys_lwcond: _sys_lwcond_queue_wait(lwcond_id=0x8d) aborted
HLE: W {PPU[0xcb] Thread (_sys_MixerChStripMain)[0x001c0e8c]} sys_cond: sys_cond_wait(id=0xca) aborted
HLE: W {PPU[0x8f] Thread (fios mediathread 6)[0x001f8868]} sys_lwcond: _sys_lwcond_queue_wait(lwcond_id=0x8c) aborted
HLE: W {PPU[0x8e] Thread (fios mediathread 5)[0x001f8868]} sys_lwcond: _sys_lwcond_queue_wait(lwcond_id=0x8b) aborted
HLE: W {PPU[0xd3] Thread (_sys_mixerSurBusReq)[0x001ba3b0]} sys_cond: sys_cond_wait(id=0xce) aborted
HLE: W {PPU[0x91] Thread (fios scheduler 4)[0x001f8868]} sys_lwcond: _sys_lwcond_queue_wait(lwcond_id=0x87) aborted
HLE: W {PPU[0x6f] Thread (fios mediathread 2)[0x001f8868]} sys_lwcond: _sys_lwcond_queue_wait(lwcond_id=0x6d) aborted
HLE: ! {Internal Audio Thread} Internal Audio Thread aborted
HLE: ! {Audio Thread} Audio Thread aborted
HLE: ! All threads stopped...
RSX: W GLVertexProgram::Delete(): glDeleteShader(2) avoided
RSX: W GLFragmentProgram::Delete(): glDeleteShader(1) avoided
MEM: ! Closing memory...
