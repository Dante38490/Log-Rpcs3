LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 v0.0.0.5-2539-g316959f
G: ! 
G: ! Stopping emulator...
LDR: ! Loading 'D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00798-[How to Train Your Dragon™]/PS3_GAME/USRDIR/BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00798-[How to Train Your Dragon™]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00798-[How to Train Your Dragon™]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! Settings:
LDR: ! CPU: PPU Interpreter 2
LDR: ! SPU: SPU Recompiler (ASMJIT)
LDR: ! Renderer: DirectX 12
LDR: ! D3D Adapter: Default
LDR: ! Resolution: 1280x720
LDR: ! Write Depth Buffer: No
LDR: ! Write Color Buffers: No
LDR: ! Read Color Buffer: No
LDR: ! Audio Out: XAudio2
LDR: ! Log Everything: No
LDR: ! RSX Logging: No
LDR: ! 
LDR: ! Title: How to Train Your Dragon™
LDR: ! Serial: BLES00798
LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x300001
LDR: ! *** primary prio: 1001
LDR: ! *** primary stacksize: 0x40000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0x8a26e4)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0x8a2704)
LDR: ! Imported function 'cellPadSetPortSetting' in 'sys_io' module (0x8a2724)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0x8a2744)
LDR: ! Imported function 'cellPadGetInfo2' in 'sys_io' module (0x8a2764)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module (0x8a2784)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0x8a27a4)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0x8a27c4)
LDR: ! Imported function 'cellSysmoduleIsLoaded' in 'cellSysmodule' module (0x8a3184)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0x8a27e4)
LDR: ! Imported function 'cellGcmBindTile' in 'cellGcmSys' module (0x8a2804)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0x8a2824)
LDR: ! Imported function 'cellGcmSetDebugOutputLevel' in 'cellGcmSys' module (0x8a2844)
LDR: ! Imported function 'cellGcmGetLastFlipTime' in 'cellGcmSys' module (0x8a2864)
LDR: ! Imported function 'cellGcmGetFlipStatus' in 'cellGcmSys' module (0x8a2884)
LDR: ! Imported function 'cellGcmGetReport' in 'cellGcmSys' module (0x8a28a4)
LDR: ! Imported function 'cellGcmBindZcull' in 'cellGcmSys' module (0x8a28c4)
LDR: ! Imported function 'cellGcmMapMainMemory' in 'cellGcmSys' module (0x8a28e4)
LDR: ! Imported function 'cellGcmSetFlipHandler' in 'cellGcmSys' module (0x8a2904)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0x8a2924)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0x8a2944)
LDR: ! Imported function 'cellGcmUnbindZcull' in 'cellGcmSys' module (0x8a2964)
LDR: ! Imported function 'cellGcmSetVBlankHandler' in 'cellGcmSys' module (0x8a2984)
LDR: ! Imported function 'cellGcmResetFlipStatus' in 'cellGcmSys' module (0x8a29a4)
LDR: ! Imported function 'cellGcmSetTileInfo' in 'cellGcmSys' module (0x8a29c4)
LDR: ! Imported function 'cellGcmSetGraphicsHandler' in 'cellGcmSys' module (0x8a29e4)
LDR: ! Imported function 'cellGcmUnbindTile' in 'cellGcmSys' module (0x8a2a04)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0x8a2a24)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0x8a2a44)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0x8a31a4)
LDR: ! Imported function '_cellGcmSetFlipCommand' in 'cellGcmSys' module (0x8a31c4)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0x8a31e4)
LDR: ! Imported function 'cellGcmGetDefaultCommandWordSize' in 'cellGcmSys' module (0x8a3204)
LDR: ! Imported function 'cellGcmGetDefaultSegmentWordSize' in 'cellGcmSys' module (0x8a3224)
LDR: ! Imported function 'cellGcmSetDefaultFifoSize' in 'cellGcmSys' module (0x8a3244)
LDR: ! Imported function '_cellGcmSetFlipCommandWithWaitLabel' in 'cellGcmSys' module (0x8a3264)
LDR: ! Imported function 'cellSysutilUnregisterCallback' in 'cellSysutil' module (0x8a2a64)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0x8a2a84)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0x8a2aa4)
LDR: ! Imported function 'cellSaveDataListLoad2' in 'cellSysutil' module (0x8a2ac4)
LDR: ! Imported function 'cellSaveDataListAutoLoad' in 'cellSysutil' module (0x8a2ae4)
LDR: ! Imported function 'cellSysutilEnableBgmPlayback' in 'cellSysutil' module (0x8a2b04)
LDR: ! Imported function 'cellSaveDataFixedLoad2' in 'cellSysutil' module (0x8a2b24)
LDR: ! Imported function 'cellSaveDataFixedSave2' in 'cellSysutil' module (0x8a2b44)
LDR: ! Imported function 'cellSaveDataListSave2' in 'cellSysutil' module (0x8a2b64)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0x8a2b84)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0x8a2ba4)
LDR: ! Imported function 'cellMsgDialogOpen2' in 'cellSysutil' module (0x8a2bc4)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0x8a2be4)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0x8a2c04)
LDR: ! Imported function 'cellSysutilGetBgmPlaybackStatus' in 'cellSysutil' module (0x8a2c24)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0x8a2c44)
LDR: ! Imported function 'cellAudioOutSetCopyControl' in 'cellSysutil' module (0x8a2c64)
LDR: ! Imported function 'cellSysutilDisableBgmPlayback' in 'cellSysutil' module (0x8a2c84)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0x8a2ca4)
LDR: ! Imported function 'cellSaveDataDelete2' in 'cellSysutil' module (0x8a2cc4)
LDR: ! Imported function 'cellVideoOutGetResolutionAvailability' in 'cellSysutil' module (0x8a3284)
LDR: ! Imported function 'cellAudioOutGetDeviceInfo' in 'cellSysutil' module (0x8a33c4)
LDR: ! Imported function 'cellAudioOutGetNumberOfDevice' in 'cellSysutil' module (0x8a33e4)
LDR: ! Imported function 'cellAudioOutGetConfiguration' in 'cellSysutil' module (0x8a3404)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module (0x8a3424)
LDR: ! Imported function 'cellVideoOutSetGamma' in 'cellSysutilAvconfExt' module (0x8a2ce4)
LDR: ! Imported function 'cellRescGetNumColorBuffers' in 'cellResc' module (0x8a2d04)
LDR: ! Imported function 'cellRescSetWaitFlip' in 'cellResc' module (0x8a2d24)
LDR: ! Imported function 'cellRescSetDsts' in 'cellResc' module (0x8a2d44)
LDR: ! Imported function 'cellRescAdjustAspectRatio' in 'cellResc' module (0x8a2d64)
LDR: ! Imported function 'cellRescSetDisplayMode' in 'cellResc' module (0x8a2d84)
LDR: ! Imported function 'cellRescSetConvertAndFlip' in 'cellResc' module (0x8a2da4)
LDR: ! Imported function 'cellRescExit' in 'cellResc' module (0x8a2dc4)
LDR: ! Imported function 'cellRescSetFlipHandler' in 'cellResc' module (0x8a2de4)
LDR: ! Imported function 'cellRescInit' in 'cellResc' module (0x8a2e04)
LDR: ! Imported function 'cellRescGetBufferSize' in 'cellResc' module (0x8a2e24)
LDR: ! Imported function 'cellRescSetSrc' in 'cellResc' module (0x8a2e44)
LDR: ! Imported function 'cellRescSetBufferAddress' in 'cellResc' module (0x8a2e64)
LDR: ! Imported function 'cellRescSetVBlankHandler' in 'cellResc' module (0x8a2e84)
LDR: ! Imported function 'cellRescCreateInterlaceTable' in 'cellResc' module (0x8a2ea4)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0x8a2ec4)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module (0x8a2ee4)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0x8a2f04)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0x8a2f24)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0x8a2f44)
LDR: ! Imported function 'cellFsGetDirectoryEntries' in 'sys_fs' module (0x8a2f64)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0x8a2f84)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module (0x8a2fa4)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0x8a32a4)
LDR: ! Imported function 'cellSpursDetachLv2EventQueue' in 'cellSpurs' module (0x8a2fc4)
LDR: ! Imported function 'cellSpursAttachLv2EventQueue' in 'cellSpurs' module (0x8a2fe4)
LDR: ! Imported function 'cellSpursEventFlagDetachLv2EventQueue' in 'cellSpurs' module (0x8a3444)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module (0x8a3464)
LDR: ! Imported function 'cellSpursJoinTaskset' in 'cellSpurs' module (0x8a3484)
LDR: ! Imported function 'cellSpursShutdownTaskset' in 'cellSpurs' module (0x8a34a4)
LDR: ! Imported function '_cellSpursSendSignal' in 'cellSpurs' module (0x8a34c4)
LDR: ! Imported function 'UCS2stoUTF8s' in 'cellL10n' module (0x8a3004)
LDR: ! Imported function 'sceNpTrophyRegisterContext' in 'sceNpTrophy' module (0x8a3024)
LDR: ! Imported function 'sceNpTrophyCreateHandle' in 'sceNpTrophy' module (0x8a3044)
LDR: ! Imported function 'sceNpTrophyGetRequiredDiskSpace' in 'sceNpTrophy' module (0x8a3064)
LDR: ! Imported function 'sceNpTrophyInit' in 'sceNpTrophy' module (0x8a3084)
LDR: ! Imported function 'sceNpTrophyGetGameInfo' in 'sceNpTrophy' module (0x8a30a4)
LDR: ! Imported function 'sceNpTrophyUnlockTrophy' in 'sceNpTrophy' module (0x8a30c4)
LDR: ! Imported function 'sceNpTrophyGetTrophyUnlockState' in 'sceNpTrophy' module (0x8a30e4)
LDR: ! Imported function 'sceNpTrophyCreateContext' in 'sceNpTrophy' module (0x8a3104)
LDR: ! Imported function 'cellGameContentPermit' in 'cellGame' module (0x8a3124)
LDR: ! Imported function 'cellGameContentErrorDialog' in 'cellGame' module (0x8a3144)
LDR: ! Imported function 'cellGameBootCheck' in 'cellGame' module (0x8a3164)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0x8a32c4)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0x8a32e4)
LDR: ! Imported function 'cellAudioSetPortLevel' in 'cellAudio' module (0x8a3304)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0x8a3324)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0x8a3344)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0x8a3364)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0x8a3384)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0x8a33a4)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0x8a34e4)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0x8a3504)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0x8a3524)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0x8a3544)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0x8a3564)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0x8a3584)
LDR: ! Imported function 'sys_prx_register_library' in 'sysPrxForUser' module (0x8a35a4)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0x8a35c4)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0x8a35e4)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module (0x8a3604)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0x8a3624)
LDR: ! Imported function 'sys_lwmutex_trylock' in 'sysPrxForUser' module (0x8a3644)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0x8a3664)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0x8a3684)
LDR: ! Imported function 'sys_spu_image_close' in 'sysPrxForUser' module (0x8a36a4)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0x8a36c4)
LDR: ! Imported function 'sys_spu_image_import' in 'sysPrxForUser' module (0x8a36e4)
MEM: ! Thread Local Storage initialized (g_tls_start=0xae7000, user_size=0x1d0)
*** TLS segment addr: 0x00a271c8
*** TLS segment size: 0x00000008
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9fed8, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x007922dc]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003fc04)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9fce0, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9f468, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9f490, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9f4b8, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9f3a0, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9f3c8, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9f3f0, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9f418, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xa9f440, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x00790c44]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd003f730)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000020, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200000a0, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000130, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000190, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200001d0, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000210, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200002d0, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000300, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000330, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000360, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000390, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200003c0, attr=*0x8ae468)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20002200, attr=*0xd003f990)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2c04]} cellSysutil: cellSysutilRegisterCallback(slot=0, func=*0x974b88, userdata=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a27c4]} cellSysmodule: cellSysmoduleLoadModule(id=0x001e: CELL_SYSMODULE_L10N)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a27c4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0031: CELL_SYSMODULE_AVCONF_EXT)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a27c4]} cellSysmodule: cellSysmoduleLoadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a27c4]} cellSysmodule: cellSysmoduleLoadModule(id=0xf035: CELL_SYSMODULE_SYSUTIL_NP_TROPHY)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2b84]} cellSysutil: cellSysutilGetSystemParamInt(id=0x112(ID_ENTER_BUTTON_ASSIGN), value=*0xa28190)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2b04]} cellSysutil: cellSysutilEnableBgmPlayback()
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2b84]} cellSysutil: cellSysutilGetSystemParamInt(id=0x152(ID_PAD_RUMBLE), value=*0xa96e70)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000fb0, attr=*0xd003fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20000fd0, attr=*0xd003f9c0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20000fd4, attr=*0xd003f9c0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000fd8, attr=*0xd003f9d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20009e80, attr=*0xd003f830)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20009ea8, attr=*0xd003f790, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20009eac, attr=*0xd003f790, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20009eb0, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20009ee0, attr=*0xd003f790, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20009ee4, attr=*0xd003f790, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20009ee8, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20009f20, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a2c0, attr=*0xd003f750)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a2e0, attr=*0xd003f6b0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a2e4, attr=*0xd003f6b0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a2e8, attr=*0xd003f6c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x2000a320, entry=0x9094a8, arg=0x2000a320, prio=1002, stacksize=0x10000, flags=0x1, threadname=*0x2000a330)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x2000a320, param=*0xd003f6a8, arg=0x2000a320, unk=0x0, prio=1002, stacksize=0x10000, flags=0x1, threadname=*0x2000a330)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x2a)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20009f60, attr=*0xd003f880)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20009f80, attr=*0xd003f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20009f84, attr=*0xd003f7e0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20009f88, attr=*0xd003f7f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20009fd0, attr=*0xd003f880)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20009ff0, attr=*0xd003f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20009ff4, attr=*0xd003f7e0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20009ff8, attr=*0xd003f7f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a038, attr=*0xd003f880)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a058, attr=*0xd003f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a05c, attr=*0xd003f7e0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a060, attr=*0xd003f7f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a098, attr=*0xd003f830)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a0c0, attr=*0xd003f790, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a0c4, attr=*0xd003f790, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a0c8, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a0f8, attr=*0xd003f790, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a0fc, attr=*0xd003f790, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a100, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a138, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000c50, attr=*0xd003f750)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20000c70, attr=*0xd003f6b0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20000c74, attr=*0xd003f6b0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000c78, attr=*0xd003f6c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20000cb0, entry=0x9094a8, arg=0x20000cb0, prio=1001, stacksize=0x10000, flags=0x1, threadname=*0x20000cc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20000cb0, param=*0xd003f6a8, arg=0x20000cb0, unk=0x0, prio=1001, stacksize=0x10000, flags=0x1, threadname=*0x20000cc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x43)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a178, attr=*0xd003f880)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a198, attr=*0xd003f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a19c, attr=*0xd003f7e0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a1a0, attr=*0xd003f7f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a1d8, attr=*0xd003f830)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a200, attr=*0xd003f790, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a204, attr=*0xd003f790, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a208, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a238, attr=*0xd003f790, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x2000a23c, attr=*0xd003f790, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a240, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000a278, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20001820, attr=*0xd003f750)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20001840, attr=*0xd003f6b0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20001844, attr=*0xd003f6b0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20001848, attr=*0xd003f6c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20001880, entry=0x9094a8, arg=0x20001880, prio=1001, stacksize=0x10000, flags=0x1, threadname=*0x20001890)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20001880, param=*0xd003f6a8, arg=0x20001880, unk=0x0, prio=1001, stacksize=0x10000, flags=0x1, threadname=*0x20001890)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x54)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20001330, attr=*0xd003fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20001350, attr=*0xd003f9b0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20001354, attr=*0xd003f9b0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20001358, attr=*0xd003f9c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200013a0, attr=*0xd003fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200013c0, attr=*0xd003f9b0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200013c4, attr=*0xd003f9b0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200013c8, attr=*0xd003f9c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20001410, attr=*0xd003fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20001430, attr=*0xd003f9b0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20001434, attr=*0xd003f9b0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20001438, attr=*0xd003f9c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20001480, attr=*0xd003fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200014a0, attr=*0xd003f9b0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200014a4, attr=*0xd003f9b0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200014a8, attr=*0xd003f9c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200014f0, attr=*0xd003fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20001510, attr=*0xd003f9b0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20001514, attr=*0xd003f9b0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20001518, attr=*0xd003f9c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20001548, attr=*0xd003fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006f1efc]} sys_spu: sys_spu_initialize(max_usable_spu=6, max_raw_spu=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a27c4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a27c4]} cellSysmodule: cellSysmoduleLoadModule(id=0x001f: CELL_SYSMODULE_RESC)
HLE: W {PPU[0x1] Thread (main_thread)[0x005ddcd8]} sys_spu: sys_raw_spu_create(id=*0xa99080, attr=*0xd003ef70)
SPU: S {PPU[0x1] Thread (main_thread)[0x005ddcd8]} SPU Database initialized...
SPU: S {PPU[0x1] Thread (main_thread)[0x005ddcd8]} SPU Recompiler (ASMJIT) created...
SPU: S {RawSPU[0] Thread (0x6a)[0x000e0]} Function detected [0x000e0-0x00138] (size=0x58)
SPU: S {RawSPU[0] Thread (0x6a)[0x00090]} Function detected [0x00090-0x000c0] (size=0x30)
SPU: S {RawSPU[0] Thread (0x6a)[0x00138]} Function detected [0x00138-0x00634] (size=0x4fc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00790c44]} sys_memory: sys_memory_allocate(size=0x1700000, flags=0x400, alloc_addr=*0xd003ec70)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a31a4]} cellGcmSys: _cellGcmInitBody(context=**0xa99bac, cmdSize=0x10000, ioSize=0x1500000, ioAddress=0x20100000)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a31a4]} cellGcmSys: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a31a4]} cellGcmSys: cellGcmInit(): 256MB io address space used
RSX: ! {RSXThread} RSX thread started
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2844]} cellGcmSys: cellGcmSetDebugOutputLevel(level=2)
HLE: E {PPU[0x1] Thread (main_thread)[0x008a29e4]} cellGcmSys: cellGcmSetGraphicsHandler
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=5)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=6)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=9)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=10)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=11)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=12)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=13)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a04]} cellGcmSys: cellGcmUnbindTile(index=14)
RSX: W {RSXThread} TODO: NV4097_SET_FREQUENCY_DIVIDER_OPERATION: 0
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xaa0810, attr=*0xd003f138)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3284]} cellSysutil: cellVideoOutGetResolutionAvailability(videoOut=0, resolutionId=0x2, aspect=0, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a29c4]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=65536, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2804]} cellGcmSys: cellGcmBindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a29c4]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=65536, size=7864320, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2804]} cellGcmSys: cellGcmBindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a29c4]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=65536, size=11796480, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2804]} cellGcmSys: cellGcmBindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a29c4]} cellGcmSys: cellGcmSetTileInfo(index=1, location=0, offset=257163264, size=3932160, pitch=5120, comp=10, base=1, bank=3)
HLE: E {PPU[0x1] Thread (main_thread)[0x008a29c4]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2804]} cellGcmSys: cellGcmBindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28c4]} cellGcmSys: cellGcmBindZcull(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0062b848]} sys_semaphore: sys_semaphore_create(sem_id=*0xa992d0, attr=*0xd003ef30, initial_val=2, max_val=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2904]} cellGcmSys: cellGcmSetFlipHandler(handler=*0xa00660)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2a84]} cellSysutil: cellVideoOutConfigure(videoOut=0, config=*0xd003ef00, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2824]} cellGcmSys: cellGcmSetFlipMode(mode=1)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} Creating RTT
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} Creating RTT
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} Creating RTT
HLE: W {PPU[0x1] Thread (main_thread)[0x005dbe94]} sys_mutex: sys_mutex_create(mutex_id=*0x20003d70, attr=*0xd003ee00)
HLE: W {PPU[0x1] Thread (main_thread)[0x005dc03c]} sys_cond: sys_cond_create(cond_id=*0x20003d80, mutex_id=0x6d, attr=*0xd003ee10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00790c44]} sys_memory: sys_memory_allocate(size=0xd00000, flags=0x400, alloc_addr=*0xd003f6a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20063798, attr=*0xd003f880)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200638d8, attr=*0xd003f8f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2824]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0xf0d
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=1, pitch=64, offset=0xb50000, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0xb50040, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0xb50080, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=1, pitch=64, offset=0xb50100, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0xb50140, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0xb50180, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0xb50200, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x1] Thread (main_thread)[0x00790c44]} sys_memory: sys_memory_allocate(size=0x500000, flags=0x400, alloc_addr=*0xd003f820)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22200068, attr=*0xd003f880)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x22200090, attr=*0xd003f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x22200094, attr=*0xd003f7e0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22200098, attr=*0xd003f7f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x222000c8, attr=*0xd003f7e0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x222000cc, attr=*0xd003f7e0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x222000d0, attr=*0xd003f7f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22200108, attr=*0xd003f7f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20072b00, attr=*0xd003f7a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20072b20, attr=*0xd003f700, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20072b24, attr=*0xd003f700, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20072b28, attr=*0xd003f710)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20072b60, entry=0x9094a8, arg=0x20072b60, prio=1002, stacksize=0x10000, flags=0x1, threadname=*0x20072b70)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20072b60, param=*0xd003f6f8, arg=0x20072b60, unk=0x0, prio=1002, stacksize=0x10000, flags=0x1, threadname=*0x20072b70)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x7d)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22200150, attr=*0xd003f8d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x22200170, attr=*0xd003f830, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x22200174, attr=*0xd003f830, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22200178, attr=*0xd003f840)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3184]} cellSysmodule: cellSysmoduleIsLoaded(id=0x000e: CELL_SYSMODULE_FS)
HLE: E {PPU[0x1] Thread (main_thread)[0x008a3184]} cellSysmodule: cellSysmoduleIsLoaded() failed: module not loaded (id=0x000e)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a27c4]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x007353f8]} sys_semaphore: sys_semaphore_create(sem_id=*0xa9d7e0, attr=*0xd003f810, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x007353f8]} sys_semaphore: sys_semaphore_create(sem_id=*0xa9d7e8, attr=*0xd003f810, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xa9d7f0, entry=0xa080b8, arg=0xa9d7f0, prio=998, stacksize=0x10000, flags=0x0, threadname=*0x8c0030)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xa9d7f0, param=*0xd003f7b8, arg=0xa9d7f0, unk=0x0, prio=998, stacksize=0x10000, flags=0x0, threadname=*0x8c0030)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x84)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2c44]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=0, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2c44]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=1, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2c44]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=6, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2ba4]} cellSysutil: cellAudioOutConfigure(audioOut=0, config=*0xd003f4b0, option=*0x0, waitForEvent=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3424]} cellSysutil: cellAudioOutGetState(audioOut=0x0, deviceIndex=0x0, state=*0xd003f4c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a32c4]} cellAudio: cellAudioInit()
HLE: W {PPU[0x1] Thread (main_thread)[0x008a33a4]} cellAudio: cellAudioPortOpen(audioParam=*0xd003f5c0, portNum=*0x20074434)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a33a4]} cellAudio: *** audio port opened(nChannel=8, nBlock=8, attr=0x1000, level=1.000000): port = 0
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3344]} cellAudio: cellAudioGetPortConfig(portNum=0, portConfig=*0xd003f5e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xaa3b80, attr=*0xd003f350)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075ce6c]} sys_event: sys_event_queue_create(equeue_id=*0xaa5884, attr=*0xd003f4ac, event_queue_key=0x0, size=32)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075ce94]} sys_spu: sys_spu_thread_group_create(id=*0xaa5988, num=1, prio=100, attr=*0xd003f49c)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a36e4]} sysPrxForUser: sys_spu_image_import(img=*0xaa598c, src=0x8c4500, type=1)
LDR: W {PPU[0x1] Thread (main_thread)[0x008a36e4]} m_ehdr.e_type = 0x2
HLE: W {PPU[0x1] Thread (main_thread)[0x0075cf24]} sys_spu: sys_spu_thread_initialize(thread=*0xaa3e84, group=0x87, spu_num=0, img=*0xaa598c, attr=*0xd003f490, arg=*0xd003f4c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075cf48]} sys_spu: sys_spu_thread_connect_event(id=0x88, eq=0x86, et=1, spup=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075cf60]} sys_spu: sys_spu_thread_group_start(id=0x87)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x000d0]} Function detected [0x000d0-0x00128] (size=0x58)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x00760]} Function detected [0x00760-0x023f4] (size=0x1c94)
TTY: MULTISTREAM: SPU thread started successfully (Thread ID : 88)\n
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2f24]} cellFs: cellFsOpen(path=*0x8c0a38, flags=0, fd=*0xd003f3c0, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2f24]} sys_fs: sys_fs_open(path=*0x8c0a38, flags=0, fd=*0xd003f3c0, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2f24]} sys_fs: *** path = '/dev_flash/sys/external/flashATRAC.pic'
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x09b10]} Function detected [0x09b10-0x09b48] (size=0x38)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x00498]} Function detected [0x00498-0x00760] (size=0x2c8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075ca24]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xffdd)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x00298]} Function detected [0x00298-0x00494] (size=0x1fc)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x0d828]} Function detected [0x0d828-0x0d880] (size=0x58)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075ca78]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0x227c7980)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x30290]} Function detected [0x30290-0x30570] (size=0x2e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3364]} cellAudio: cellAudioPortStart(portNum=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20074450, entry=0xa093e0, arg=0x200743f8, prio=999, stacksize=0x4000, flags=0x1, threadname=*0x8acba8)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20074450, param=*0xd003f518, arg=0x200743f8, unk=0x0, prio=999, stacksize=0x4000, flags=0x1, threadname=*0x8acba8)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x89)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200729f8, attr=*0xd003f6c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20072a20, attr=*0xd003f620, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20072a24, attr=*0xd003f620, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20072a28, attr=*0xd003f630)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd003f1e8, flags=0, fd=*0x20072c80, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd003f1e8, flags=0, fd=*0x20072c80, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/SHADER/PS3/SHFCT.STATIC.V2.BIN'
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2f44]} cellFs: cellFsStat(path=*0xd003f1e8, sb=*0xd003f1b0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd003f1e8, sb=*0xd003f1b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/SHADER/PS3/SHFCT.STATIC.V2.BIN'
HLE: W {PPU[0x1] Thread (main_thread)[0x00790c44]} sys_memory: sys_memory_allocate(size=0x200000, flags=0x400, alloc_addr=*0xd003f560)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x099d0]} Function detected [0x099d0-0x09b0c] (size=0x13c)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x06ca0]} Function detected [0x06ca0-0x087c8] (size=0x1b28)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3684]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0x8d)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021ee0]} sys_semaphore: sys_semaphore_destroy(sem_id=0x8c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021ee0]} sys_semaphore: sys_semaphore_destroy(sem_id=0x8b)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3684]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0x8a)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3164]} cellGame: cellGameBootCheck(type=*0xd003f8e0, attributes=*0xd003f8e4, size=*0xd003f8e8, dirName=*0xd003f8f8)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3124]} cellGame: cellGameContentPermit(contentInfoPath=*0xd003f9f8, usrdirPath=*0xd003f8f8)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3084]} sceNpTrophy: sceNpTrophyInit(pool=*0x0, poolSize=0x0, containerId=0xffffffff, options=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200d9a00, attr=*0xd003f740)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200d9a20, attr=*0xd003f6a0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200d9a24, attr=*0xd003f6a0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200d9a28, attr=*0xd003f6b0)
HLE: W {PPU[0x54] Thread (CKTrophyRequestQueue::keCThreadPool 0)[0x008a3104]} sceNpTrophy: sceNpTrophyCreateContext(context=*0xa84acc, commId=*0x8a3c80, commSign=*0x8a3c8c, options=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200da430, attr=*0xd003f9d0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200da434, attr=*0xd003f9d0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200da438, attr=*0xd003f9e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200da460, attr=*0xd003fa70)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200da760, attr=*0xd003f9a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200da780, attr=*0xd003f900, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200da784, attr=*0xd003f900, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200da788, attr=*0xd003f910)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x200da7c0, entry=0x9094a8, arg=0x200da7c0, prio=1001, stacksize=0x10000, flags=0x1, threadname=*0x200da7d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x200da7c0, param=*0xd003f8f8, arg=0x200da7c0, unk=0x0, prio=1001, stacksize=0x10000, flags=0x1, threadname=*0x200da7d0)
HLE: W {PPU[0x54] Thread (CKTrophyRequestQueue::keCThreadPool 0)[0x008a3044]} sceNpTrophy: sceNpTrophyCreateHandle(handle=*0xa84ad0)
HLE: E {PPU[0x54] Thread (CKTrophyRequestQueue::keCThreadPool 0)[0x008a3064]} sceNpTrophy TODO: sceNpTrophyGetRequiredDiskSpace(context=0x9b, handle=0x9c, reqspace=*0xd007fb90, options=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a3524]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x9a)
HLE: E {PPU[0x54] Thread (CKTrophyRequestQueue::keCThreadPool 0)[0x008a3024]} sceNpTrophy: sceNpTrophyRegisterContext(context=0x9b, handle=0x9c, statusCb=*0x909a18, arg=*0x0, options=0x1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2b84]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd003fab0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a26e4]} sys_io: cellPadInit(max_connect=7)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200daa48, attr=*0xd005f760)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200daa70, attr=*0xd005f6c0, initial_val=1, max_val=1)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x200daa74, attr=*0xd005f6c0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200daa78, attr=*0xd005f6d0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005f288, flags=0, fd=*0x20072c80, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005f288, flags=0, fd=*0x20072c80, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/GAME.KP3'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005f288, sb=*0xd005f250) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005f288, sb=*0xd005f250)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/GAME.KP3'
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x05f90]} Function detected [0x05f90-0x06ca0] (size=0xd10)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=4, pitch=64, offset=0xb50280, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=32, h=3, pitch=64, offset=0xb50380, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=24, h=1, pitch=64, offset=0xb50440, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0xb50480, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=24, h=1, pitch=64, offset=0xb50500, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0xb50580, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=16, h=1, pitch=64, offset=0xb50590, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x09b48]} Function detected [0x09b48-0x0a7b0] (size=0xc68)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x2d198]} Function detected [0x2d198-0x2d1f8] (size=0x60)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x2d190]} Function detected [0x2d190-0x2d194] (size=0x4)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x2ddc0]} Function detected [0x2ddc0-0x2f890] (size=0x1ad0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x2dba0]} Function detected [0x2dba0-0x2ddbc] (size=0x21c)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x2d520]} Function detected [0x2d520-0x2d5f8] (size=0xd8)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x2d288]} Function detected [0x2d288-0x2d520] (size=0x298)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x2d5f8]} Function detected [0x2d5f8-0x2db9c] (size=0x5a4)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x097e8]} Function detected [0x097e8-0x099d0] (size=0x1e8)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x09700]} Function detected [0x09700-0x097e8] (size=0xe8)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x08c78]} Function detected [0x08c78-0x090b4] (size=0x43c)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x088d8]} Function detected [0x088d8-0x08a44] (size=0x16c)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x091d8]} Function detected [0x091d8-0x0962c] (size=0x454)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x088c0]} Function detected [0x088c0-0x088d4] (size=0x14)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x090b8]} Function detected [0x090b8-0x091d8] (size=0x120)
SPU: S {SPU[0x88] Thread (_Multistream SPU Thread)[0x00128]} Function detected [0x00128-0x00298] (size=0x170)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: E {PPU[0x54] Thread (CKTrophyRequestQueue::keCThreadPool 0)[0x008a30a4]} sceNpTrophy: sceNpTrophyGetGameInfo(context=0x9b, handle=0x9c, details=*0xa84adc, data=*0xa84f74)
HLE: E {PPU[0x54] Thread (CKTrophyRequestQueue::keCThreadPool 0)[0x008a30e4]} sceNpTrophy: sceNpTrophyGetTrophyUnlockState(context=0x9b, handle=0x9c, flags=*0xa84f88, count=*0xa84f98)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00790c44]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd005f210)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3684]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0xa0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021ee0]} sys_semaphore: sys_semaphore_destroy(sem_id=0x9f)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021ee0]} sys_semaphore: sys_semaphore_destroy(sem_id=0x9e)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3684]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0x9d)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20034d00, attr=*0xd005f670)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20034d28, attr=*0xd005f5d0, initial_val=1, max_val=1)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20034d2c, attr=*0xd005f5d0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20034d30, attr=*0xd005f5e0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005f148, flags=0, fd=*0x20072c80, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005f148, flags=0, fd=*0x20072c80, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/00GLC.KP3'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005f148, sb=*0xd005f110) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005f148, sb=*0xd005f110)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/00GLC.KP3'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00790c44]} sys_memory: sys_memory_allocate(size=0x200000, flags=0x400, alloc_addr=*0xd005f4c0)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00790c44]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd005f360)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00790c44]} sys_memory: sys_memory_allocate(size=0x200000, flags=0x400, alloc_addr=*0xd005f360)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3684]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0xa4)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021ee0]} sys_semaphore: sys_semaphore_destroy(sem_id=0xa3)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021ee0]} sys_semaphore: sys_semaphore_destroy(sem_id=0xa2)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3684]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0xa1)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20034d00, attr=*0xd005f670)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20034d28, attr=*0xd005f5d0, initial_val=1, max_val=1)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x20034d2c, attr=*0xd005f5d0, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20034d30, attr=*0xd005f5e0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005f148, flags=0, fd=*0x20072c80, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005f148, flags=0, fd=*0x20072c80, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/01GLC.KP3'
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005f148, sb=*0xd005f110) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005f148, sb=*0xd005f110)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/01GLC.KP3'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3684]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0xa8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021ee0]} sys_semaphore: sys_semaphore_destroy(sem_id=0xa7)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021ee0]} sys_semaphore: sys_semaphore_destroy(sem_id=0xa6)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3684]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0xa5)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x1] Thread (main_thread)[0x0078cb8c]} sys_fs: sys_fs_open(path=*0xd003f630, flags=0, fd=*0xd003ef90, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0078cb8c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MOVIE/03/PS3_034.VID'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 2
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 3
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 4
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 5
RSX: W {RSXThread} TODO: NV4097_CLEAR_REPORT_VALUE: ZCULL_STATS
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005fab0, fd=*0xd005f618) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005fab0, fd=*0xd005f618)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/0_PS30.RWS'
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_CONTROL0: 0x10
RSX: W {RSXThread} TODO: NV4097_SET_SCULL_CONTROL: 0xff000007
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL000/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL001/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL002/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL003/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL004/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL005'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL006/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/0_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/1_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/2_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/3_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/LVL007/SPEECH/4_PS30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MOVIE'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MOVIE/00'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MOVIE/01'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MOVIE/02'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MOVIE/03'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA0.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA0.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA1.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA1.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA2.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA2.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA3.RWS'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA3.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA4.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA4.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA5.RWS'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA5.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA6.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA6.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA7.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA7.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA8.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA8.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA9.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/0/STRA9.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA10.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA10.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA11.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA11.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA12.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA12.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA13.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA13.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA14.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA14.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA15.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA15.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA16.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA16.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA17.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA17.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA18.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA18.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA19.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/1/STRA19.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/10'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/10/STRA100.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/10/STRA100.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/10/STRA101.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/10/STRA101.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/10/STRA102.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/10/STRA102.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/10/STRA103.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/10/STRA103.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA20.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA20.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA21.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA21.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA22.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA22.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA23.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA23.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA24.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA24.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA25.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA25.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA26.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA26.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA27.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA27.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA28.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA28.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA29.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/2/STRA29.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA30.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA31.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA31.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA32.RWS'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA32.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA33.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA33.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA34.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA34.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA35.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA35.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA36.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA36.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA37.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA37.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA38.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA38.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA39.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/3/STRA39.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA40.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA40.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA41.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA41.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA42.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA42.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA43.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA43.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA44.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA44.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA45.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA45.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA46.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA46.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA47.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA47.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA48.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA48.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA49.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/4/STRA49.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA50.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA50.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA51.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA51.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA52.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA52.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA53.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA53.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA54.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA54.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA55.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA55.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA56.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA56.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA57.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA57.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA58.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA58.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA59.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/5/STRA59.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA60.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA60.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA61.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA61.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA62.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA62.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA63.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA63.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA64.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA64.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA65.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA65.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA66.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA66.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA67.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA67.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA68.RWS'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA68.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA69.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/6/STRA69.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA70.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA70.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA71.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA71.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA72.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA72.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA73.RWS'
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2c24]} cellSysutil: cellSysutilGetBgmPlaybackStatus(status=*0xd003f8f0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA73.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA74.RWS'
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA74.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA75.RWS'
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4000
RSX: W {RSXThread} TODO: NV4097_SET_TEX_COORD_CONTROL(texMask2D=1, texMaskCentroid=0)
RSX: W {RSXThread} TODO: NV4097_SET_ZMIN_MAX_CONTROL: cullNearFarEnable=1, zclampEnable=1, cullIgnoreW=0
RSX: W {RSXThread} TODO: NV4097_SET_ZMIN_MAX_CONTROL: cullNearFarEnable=1, zclampEnable=0, cullIgnoreW=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0001
RSX: W {RSXThread} TODO: NV4097_SET_REDUCE_DST_COLOR: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4000
RSX: W {RSXThread} TODO: NV4097_SET_POINT_PARAMS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4000
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4000
RSX: W {RSXThread} TODO: NV4097_SET_FREQUENCY_DIVIDER_OPERATION: 0
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA75.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA76.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA76.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA77.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA77.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA78.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA78.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA79.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/7/STRA79.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA80.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA80.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA81.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA81.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA82.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA82.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA83.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA83.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA84.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA84.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA85.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA85.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA86.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA86.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA87.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA87.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA88.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA88.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA89.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/8/STRA89.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA90.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA90.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA91.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA91.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA92.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA92.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA93.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA93.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA94.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA94.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA95.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA95.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA96.RWS'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA96.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA97.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA97.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA98.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA98.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005ee38, flags=0, fd=*0xd005ecd4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA99.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005ee38, sb=*0xd005ed00) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005ee38, sb=*0xd005ed00)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MUSIC/9/STRA99.RWS'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/SAVE'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f678, fd=*0xd005f178) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f678, fd=*0xd005f178)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/SHADER'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} cellFs: cellFsOpendir(path=*0xd005f1d8, fd=*0xd005ecd8) -> sys_fs_opendir()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: sys_fs_opendir(path=*0xd005f1d8, fd=*0xd005ecd8)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2ee4]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/SHADER/PS3'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=5, entries=*0xd005ef38, entries_size=0x138, data_count=*0xd005ecd0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=4, entries=*0xd005f3d8, entries_size=0x138, data_count=*0xd005f170)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f64]} cellFs: cellFsGetDirectoryEntries(fd=3, entries=*0xd005f878, entries_size=0x138, data_count=*0xd005f610)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22ef4eb8, attr=*0xd005f6f0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x22ef4ee0, attr=*0xd005f650, initial_val=1, max_val=1)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x00021e20]} sys_semaphore: sys_semaphore_create(sem_id=*0x22ef4ee4, attr=*0xd005f650, initial_val=0, max_val=2147483647)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a3564]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x22ef4ee8, attr=*0xd005f660)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} cellFs: cellFsOpen(path=*0xd005f218, flags=0, fd=*0x20072c80, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: sys_fs_open(path=*0xd005f218, flags=0, fd=*0x20072c80, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f24]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/SHADER/PS3/SHFCT.V2.BIN'
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} cellFs: cellFsStat(path=*0xd005f218, sb=*0xd005f1e0) -> sys_fs_stat()
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: sys_fs_stat(path=*0xd005f218, sb=*0xd005f1e0)
HLE: W {PPU[0x2a] Thread (CKLoadRequestQueue 0)[0x008a2f44]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/SHADER/PS3/SHFCT.V2.BIN'
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} VP not found in buffer!
HLE: W {PPU[0x1] Thread (main_thread)[0x008a2c24]} cellSysutil: cellSysutilGetBgmPlaybackStatus(status=*0xd003f8f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=2, index=791)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=3, index=792)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=4, index=793)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a28a4]} cellGcmSys: cellGcmGetReport(type=5, index=794)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} FP not found in buffer!
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
RSX: W {RSXThread} Add program :
RSX: W {RSXThread} *** vp id = 0
RSX: W {RSXThread} *** fp id = 1
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
HLE: W {PPU[0x89] Thread (RWA Rendering Thread)[0x0075d8cc]} sys_spu: sys_spu_thread_write_spu_mb(id=0x88, value=0xaa3c80)
