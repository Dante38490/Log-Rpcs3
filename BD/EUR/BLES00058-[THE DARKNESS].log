LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 0.0.0.5 v0.0.0.5-2533-g467bea3
G: ! 
G: ! Stopping emulator...
LDR: ! Loading 'D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00058-[THE DARKNESS]/PS3_GAME/USRDIR/BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00058-[THE DARKNESS]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00058-[THE DARKNESS]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! Settings:
LDR: ! CPU: PPU Interpreter 2
LDR: ! SPU: SPU Recompiler (ASMJIT)
LDR: ! Renderer: DirectX 12
LDR: ! D3D Adapter: Default
LDR: ! Resolution: 1280x720
LDR: ! Write Depth Buffer: No
LDR: ! Write Color Buffers: No
LDR: ! Read Color Buffer: No
LDR: ! Audio Out: XAudio2
LDR: ! Log Everything: No
LDR: ! RSX Logging: No
LDR: ! 
LDR: ! Title: THE DARKNESS
LDR: ! Serial: BLES00058
LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x160008
LDR: ! *** primary prio: 900
LDR: ! *** primary stacksize: 0x40000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function 'cellGcmGetTiledPitchSize' in 'cellGcmSys' module (0x101d028)
LDR: ! Imported function 'cellGcmSetUserHandler' in 'cellGcmSys' module (0x101d048)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0x101d068)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0x101d088)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0x101d0a8)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0x101d0c8)
LDR: ! Imported function 'cellGcmSetDebugOutputLevel' in 'cellGcmSys' module (0x101d0e8)
LDR: ! Imported function 'cellGcmGetTimeStamp' in 'cellGcmSys' module (0x101d108)
LDR: ! Imported function 'cellGcmSetUserCommand' in 'cellGcmSys' module (0x101d128)
LDR: ! Imported function 'cellGcmSetWaitFlip' in 'cellGcmSys' module (0x101d148)
LDR: ! Imported function 'cellGcmGetReport' in 'cellGcmSys' module (0x101d168)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0x101d188)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0x101d1a8)
LDR: ! Imported function 'cellGcmSetVBlankHandler' in 'cellGcmSys' module (0x101d1c8)
LDR: ! Imported function 'cellGcmSetInvalidateTile' in 'cellGcmSys' module (0x101d1e8)
LDR: ! Imported function 'cellGcmSetTile' in 'cellGcmSys' module (0x101d208)
LDR: ! Imported function 'cellGcmSetZcull' in 'cellGcmSys' module (0x101d228)
LDR: ! Imported function 'cellGcmSetFlip' in 'cellGcmSys' module (0x101d248)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0x101d268)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0x101d288)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0x101d2a8)
LDR: ! Imported function 'cellPadGetInfo' in 'sys_io' module (0x101d2c8)
LDR: ! Imported function 'cellKbInit' in 'sys_io' module (0x101d2e8)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0x101d308)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0x101d328)
LDR: ! Imported function 'cellKbSetCodeType' in 'sys_io' module (0x101d348)
LDR: ! Imported function 'cellKbEnd' in 'sys_io' module (0x101d368)
LDR: ! Imported function 'cellKbSetReadMode' in 'sys_io' module (0x101d388)
LDR: ! Imported function 'sys_net_initialize_network_ex' in 'sys_net' module (0x101d3a8)
LDR: ! Imported function 'recvfrom' in 'sys_net' module (0x101d3c8)
LDR: ! Imported function 'listen' in 'sys_net' module (0x101d3e8)
LDR: ! Imported function 'socketselect' in 'sys_net' module (0x101d408)
LDR: ! Imported function '_sys_net_errno_loc' in 'sys_net' module (0x101d428)
LDR: ! Imported function 'connect' in 'sys_net' module (0x101d448)
LDR: ! Imported function 'socketclose' in 'sys_net' module (0x101d468)
LDR: ! Imported function 'setsockopt' in 'sys_net' module (0x101d488)
LDR: ! Imported function 'sendto' in 'sys_net' module (0x101d4a8)
LDR: ! Imported function 'socket' in 'sys_net' module (0x101d4c8)
LDR: ! Imported function 'bind' in 'sys_net' module (0x101d4e8)
LDR: ! Imported function 'sys_net_finalize_network' in 'sys_net' module (0x101d508)
LDR: ! Imported function 'accept' in 'sys_net' module (0x101d528)
LDR: ! Imported function 'inet_addr' in 'sys_net' module (0x101d548)
LDR: ! Imported function 'send' in 'sys_net' module (0x101d568)
LDR: ! Imported function 'recv' in 'sys_net' module (0x101d588)
LDR: ! Imported function 'sys_net_free_thread_context' in 'sys_net' module (0x101d5a8)
LDR: ! Imported function 'cellNetCtlNetStartDialogLoadAsync' in 'cellNetCtl' module (0x101d5c8)
LDR: ! Imported function 'cellNetCtlAddHandler' in 'cellNetCtl' module (0x101d5e8)
LDR: ! Imported function 'cellNetCtlNetStartDialogUnloadAsync' in 'cellNetCtl' module (0x101d608)
LDR: ! Imported function 'cellNetCtlTerm' in 'cellNetCtl' module (0x101d628)
LDR: ! Imported function 'cellNetCtlGetInfo' in 'cellNetCtl' module (0x101d648)
LDR: ! Imported function 'cellNetCtlGetState' in 'cellNetCtl' module (0x101d668)
LDR: ! Imported function 'cellNetCtlDelHandler' in 'cellNetCtl' module (0x101d688)
LDR: ! Imported function 'cellNetCtlInit' in 'cellNetCtl' module (0x101d6a8)
LDR: ! Imported function 'cellFsRmdir' in 'sys_fs' module (0x101d6c8)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0x101d6e8)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module (0x101d708)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0x101d728)
LDR: ! Imported function 'cellFsReaddir' in 'sys_fs' module (0x101d748)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0x101d768)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0x101d788)
LDR: ! Imported function 'cellFsUnlink' in 'sys_fs' module (0x101d7a8)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0x101d7c8)
LDR: ! Imported function 'cellFsGetFreeSize' in 'sys_fs' module (0x101d7e8)
LDR: ! Imported function 'cellFsMkdir' in 'sys_fs' module (0x101d808)
LDR: ! Imported function 'cellFsUtime' in 'sys_fs' module (0x101d828)
LDR: ! Imported function 'cellFsTruncate' in 'sys_fs' module (0x101d848)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0x101d868)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0x101d888)
LDR: ! Imported function 'cellFsRename' in 'sys_fs' module (0x101d8a8)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module (0x101d8c8)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0x101d8e8)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0x101d908)
LDR: ! Imported function 'cellSaveDataListLoad2' in 'cellSysutil' module (0x101d928)
LDR: ! Imported function 'cellSysCacheMount' in 'cellSysutil' module (0x101d948)
LDR: ! Imported function 'cellVideoOutGetDeviceInfo' in 'cellSysutil' module (0x101d968)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0x101d988)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0x101d9a8)
LDR: ! Imported function 'cellMsgDialogAbort' in 'cellSysutil' module (0x101d9c8)
LDR: ! Imported function 'cellMsgDialogOpen2' in 'cellSysutil' module (0x101d9e8)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0x101da08)
LDR: ! Imported function 'cellSaveDataAutoSave2' in 'cellSysutil' module (0x101da28)
LDR: ! Imported function 'cellSysutilGetSystemParamString' in 'cellSysutil' module (0x101da48)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0x101da68)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0x101da88)
LDR: ! Imported function 'cellGameDataCheckCreate2' in 'cellSysutil' module (0x101daa8)
LDR: ! Imported function 'cellDiscGameRegisterDiscChangeCallback' in 'cellSysutil' module (0x101dac8)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0x101dae8)
LDR: ! Imported function 'cellSaveDataDelete2' in 'cellSysutil' module (0x101db08)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module (0x101db28)
LDR: ! Imported function 'cellSaveDataAutoLoad2' in 'cellSysutil' module (0x101db48)
LDR: ! Imported function 'cellVdecClose' in 'libvdec' module (0x101db68)
LDR: ! Imported function 'cellVdecGetPicItem' in 'libvdec' module (0x101db88)
LDR: ! Imported function 'cellVdecDecodeAu' in 'libvdec' module (0x101dba8)
LDR: ! Imported function 'cellVdecGetPicture' in 'libvdec' module (0x101dbc8)
LDR: ! Imported function 'cellVdecEndSeq' in 'libvdec' module (0x101dbe8)
LDR: ! Imported function 'cellVdecOpen' in 'libvdec' module (0x101dc08)
LDR: ! Imported function 'cellVdecStartSeq' in 'libvdec' module (0x101dc28)
LDR: ! Imported function 'cellVdecQueryAttr' in 'libvdec' module (0x101dc48)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0x101dc68)
LDR: ! Imported function 'cellAudioSetNotifyEventQueue' in 'cellAudio' module (0x101dc88)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0x101dca8)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0x101dcc8)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0x101dce8)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0x101dd08)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0x101dd28)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0x101dd48)
LDR: ! Imported function 'cellAudioRemoveNotifyEventQueue' in 'cellAudio' module (0x101dd68)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0x101dd88)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0x101dda8)
LDR: ! Imported function 'cellSysmoduleInitialize' in 'cellSysmodule' module (0x101ddc8)
LDR: ! Imported function 'sceNpMatchingQuickMatchGUI' in 'sceNp' module (0x101dde8)
LDR: ! Imported function 'sceNpMatchingGetResultGUI' in 'sceNp' module (0x101de08)
LDR: ! Imported function 'sceNpMatchingDestroyCtx' in 'sceNp' module (0x101de28)
LDR: ! Imported function 'sceNpMatchingSearchJoinRoomGUI' in 'sceNp' module (0x101de48)
LDR: ! Imported function 'sceNpMatchingKickRoomMember' in 'sceNp' module (0x101de68)
LDR: ! Imported function 'sceNpMatchingCreateRoomGUI' in 'sceNp' module (0x101de88)
LDR: ! Imported function 'sceNpTerm' in 'sceNp' module (0x101dea8)
LDR: ! Imported function 'sceNpSignalingActivateConnection' in 'sceNp' module (0x101dec8)
LDR: ! Imported function 'sceNpSignalingCreateCtx' in 'sceNp' module (0x101dee8)
LDR: ! Imported function 'sceNpManagerGetContentRatingFlag' in 'sceNp' module (0x101df08)
LDR: ! Imported function 'sceNpMatchingSetRoomInfo' in 'sceNp' module (0x101df28)
LDR: ! Imported function 'sceNpSignalingGetLocalNetInfo' in 'sceNp' module (0x101df48)
LDR: ! Imported function 'sceNpSignalingDestroyCtx' in 'sceNp' module (0x101df68)
LDR: ! Imported function 'sceNpMatchingCreateCtx' in 'sceNp' module (0x101df88)
LDR: ! Imported function 'sceNpBasicUnregisterHandler' in 'sceNp' module (0x101dfa8)
LDR: ! Imported function 'sceNpBasicRegisterHandler' in 'sceNp' module (0x101dfc8)
LDR: ! Imported function 'sceNpInit' in 'sceNp' module (0x101dfe8)
LDR: ! Imported function 'sceNpSignalingGetConnectionStatus' in 'sceNp' module (0x101e008)
LDR: ! Imported function 'sceNpUtilCmpNpId' in 'sceNp' module (0x101e028)
LDR: ! Imported function 'sceNpManagerGetOnlineName' in 'sceNp' module (0x101e048)
LDR: ! Imported function 'sceNpMatchingLeaveRoom' in 'sceNp' module (0x101e068)
LDR: ! Imported function 'sceNpSignalingDeactivateConnection' in 'sceNp' module (0x101e088)
LDR: ! Imported function 'sceNpManagerGetNpId' in 'sceNp' module (0x101e0a8)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0x101e0c8)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0x101e0e8)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0x101e108)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0x101e128)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0x101e148)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0x101e168)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0x101e188)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0x101e1a8)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0x101e1c8)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0x101e1e8)
LDR: ! Imported function 'sys_spu_image_close' in 'sysPrxForUser' module (0x101e208)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0x101e228)
MEM: ! Thread Local Storage initialized (g_tls_start=0x10b6000, user_size=0x1bc)
*** TLS segment addr: 0x010b56e0
*** TLS segment size: 0x00000004
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1014c940, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1014c958, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fbf45c]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd003fb70)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000020, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000050, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000080, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200000b0, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200000e0, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000110, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000140, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0002b34c]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f850, attr=*0xd003f858)
TTY: PS3 CPU Frequency: 80000000\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0005828c]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f6d4)
TTY: MEMINFO: OS report 0FF00000 free of 10000000\n
HLE: W {PPU[0x1] Thread (main_thread)[0x000582e0]} sys_memory: sys_memory_allocate(size=0xf100000, flags=0x400, alloc_addr=*0xd003f6d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x000583ac]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f780)
TTY: Allocating 0000005c bytes, 4 align (Free 0eb00000, Largest 0eb00000), OS report 00E00000 free\n
HLE: W {PPU[0x1] Thread (main_thread)[0x000583ac]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f780)
TTY: Allocating 000000e8 bytes, 4 align (Free 0eafff80, Largest 0eafff80), OS report 00E00000 free\n
HLE: W {PPU[0x1] Thread (main_thread)[0x000583ac]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f6c0)
TTY: Allocating 00000400 bytes, 4 align (Free 0eaffe80, Largest 0eaffe80), OS report 00E00000 free\n
HLE: W {PPU[0x1] Thread (main_thread)[0x000583ac]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f5b0)
TTY: Allocating 09600000 bytes, 1000 align (Free 0eaffa80, Largest 0eaffa80), OS report 00E00000 free\n
HLE: W {PPU[0x1] Thread (main_thread)[0x000583ac]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f570)
TTY: Allocating 0000d880 bytes, 4 align (Free 054ffa80, Largest 054ff000), OS report 00E00000 free\n
HLE: W {PPU[0x1] Thread (main_thread)[0x00032fe4]} sys_mutex: sys_mutex_create(mutex_id=*0x100f1428, attr=*0xd003f7a8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0003301c]} sys_cond: sys_cond_create(cond_id=*0x100f142c, mutex_id=0xd, attr=*0xd003f790)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6a33c]} sys_spu: sys_spu_initialize(max_usable_spu=6, max_raw_spu=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101ddc8]} cellSysmodule: cellSysmoduleInitialize()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101dda8]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101dda8]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101dda8]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101dda8]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101dda8]} cellSysmodule: cellSysmoduleLoadModule(id=0x000a: CELL_SYSMODULE_SPURS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101dda8]} cellSysmodule: cellSysmoduleLoadModule(id=0x0000: CELL_SYSMODULE_NET)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101dda8]} cellSysmodule: cellSysmoduleLoadModule(id=0x0005: CELL_SYSMODULE_VDEC)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101dda8]} cellSysmodule: cellSysmoduleLoadModule(id=0x0016: CELL_SYSMODULE_SYSUTIL_NP)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20010180, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200101b0, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200101e0, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20010210, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20010240, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20010270, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200102a0, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200102d0, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20010300, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20010330, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20010360, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20010390, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101e128]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200103c0, attr=*0x10097c7c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00032fe4]} sys_mutex: sys_mutex_create(mutex_id=*0x100f1418, attr=*0xd003f8d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0003301c]} sys_cond: sys_cond_create(cond_id=*0x100f141c, mutex_id=0x1c, attr=*0xd003f8c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00032fe4]} sys_mutex: sys_mutex_create(mutex_id=*0x100f1408, attr=*0xd003f968)
HLE: W {PPU[0x1] Thread (main_thread)[0x0003301c]} sys_cond: sys_cond_create(cond_id=*0x100f140c, mutex_id=0x1e, attr=*0xd003f950)
HLE: W {PPU[0x1] Thread (main_thread)[0x00032fe4]} sys_mutex: sys_mutex_create(mutex_id=*0x100f13f8, attr=*0xd003faa8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0003301c]} sys_cond: sys_cond_create(cond_id=*0x100f13fc, mutex_id=0x20, attr=*0xd003fa90)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d2e8]} sys_io: cellKbInit(max_connect=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d2a8]} sys_io: cellPadInit(max_connect=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00032fe4]} sys_mutex: sys_mutex_create(mutex_id=*0x100f13e8, attr=*0xd003f838)
HLE: W {PPU[0x1] Thread (main_thread)[0x0003301c]} sys_cond: sys_cond_create(cond_id=*0x100f13ec, mutex_id=0x22, attr=*0xd003f820)
HLE: W {PPU[0x1] Thread (main_thread)[0x00032fe4]} sys_mutex: sys_mutex_create(mutex_id=*0x100f13d8, attr=*0xd003f958)
HLE: W {PPU[0x1] Thread (main_thread)[0x0003301c]} sys_cond: sys_cond_create(cond_id=*0x100f13dc, mutex_id=0x24, attr=*0xd003f940)
TTY: Default thread info: prio 384, stack 262144k\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0008007c]} sys_memory: sys_memory_container_create(cid=*0x2086f540, size=0x800000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0x10000698, sb=*0xd003f73c) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0x10000698, sb=*0xd003f73c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = '/dev_bdvd'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f598, sb=*0xd003f560) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f598, sb=*0xd003f560)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR'
HLE: W {PPU[0x1] Thread (main_thread)[0x00c68fd0]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f528)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69020]} sys_event: sys_event_queue_create(equeue_id=*0x207015c0, attr=*0x207015d8, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69038]} sys_event: sys_event_port_create(eport_id=*0x207015e8, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69048]} sys_event: sys_event_port_connect_local(eport_id=0x28, equeue_id=0x27)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69070]} sys_event: sys_event_queue_create(equeue_id=*0x207015c4, attr=*0x207015c8, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c690c4]} sys_spu: sys_spu_thread_group_create(id=*0x207015f8, num=1, prio=100, attr=*0x207015fc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69384]} sys_spu: sys_spu_image_open(img=*0x207015b0, path=*0x2086f7c2)
LDR: W {PPU[0x1] Thread (main_thread)[0x00c69384]} m_ehdr.e_type = 0x2
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69020]} sys_event: sys_event_queue_create(equeue_id=*0x20701668, attr=*0x20701680, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69038]} sys_event: sys_event_port_create(eport_id=*0x20701690, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69048]} sys_event: sys_event_port_connect_local(eport_id=0x2c, equeue_id=0x2b)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69070]} sys_event: sys_event_queue_create(equeue_id=*0x2070166c, attr=*0x20701670, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c690c4]} sys_spu: sys_spu_thread_group_create(id=*0x207016a0, num=1, prio=100, attr=*0x207016a4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69434]} sys_spu: sys_spu_image_open(img=*0x20701658, path=*0x2086f7c2)
LDR: W {PPU[0x1] Thread (main_thread)[0x00c69434]} m_ehdr.e_type = 0x2
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69020]} sys_event: sys_event_queue_create(equeue_id=*0x20701710, attr=*0x20701728, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69038]} sys_event: sys_event_port_create(eport_id=*0x20701738, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69048]} sys_event: sys_event_port_connect_local(eport_id=0x30, equeue_id=0x2f)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69070]} sys_event: sys_event_queue_create(equeue_id=*0x20701714, attr=*0x20701718, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c690c4]} sys_spu: sys_spu_thread_group_create(id=*0x20701748, num=2, prio=100, attr=*0x2070174c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c693dc]} sys_spu: sys_spu_image_open(img=*0x20701700, path=*0x2086f7c2)
LDR: W {PPU[0x1] Thread (main_thread)[0x00c693dc]} m_ehdr.e_type = 0x2
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69020]} sys_event: sys_event_queue_create(equeue_id=*0x207017b8, attr=*0x207017d0, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69038]} sys_event: sys_event_port_create(eport_id=*0x207017e0, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69048]} sys_event: sys_event_port_connect_local(eport_id=0x34, equeue_id=0x33)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69070]} sys_event: sys_event_queue_create(equeue_id=*0x207017bc, attr=*0x207017c0, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c690c4]} sys_spu: sys_spu_thread_group_create(id=*0x207017f0, num=1, prio=100, attr=*0x207017f4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6948c]} sys_spu: sys_spu_image_open(img=*0x207017a8, path=*0x2086f7c2)
LDR: W {PPU[0x1] Thread (main_thread)[0x00c6948c]} m_ehdr.e_type = 0x2
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692e0]} sys_spu: sys_spu_thread_initialize(thread=*0x20701900, group=0x2a, spu_num=0, img=*0x207015b0, attr=*0x20701950, arg=*0x20701608)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692f4]} sys_spu: sys_spu_thread_bind_queue(id=0x37, spuq=0x27, spuq_num=0x1012000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6930c]} sys_spu: sys_spu_thread_connect_event(id=0x37, eq=0x29, et=1, spup=58)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6931c]} sys_spu: sys_spu_thread_set_spu_cfg(id=0x37, value=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69140]} sys_spu: sys_spu_thread_group_start(id=0x2a)
SPU: S {PPU[0x1] Thread (main_thread)[0x00c69140]} SPU Database initialized...
SPU: S {PPU[0x1] Thread (main_thread)[0x00c69140]} SPU Recompiler (ASMJIT) created...
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692e0]} sys_spu: sys_spu_thread_initialize(thread=*0x20826110, group=0x2e, spu_num=1, img=*0x20701658, attr=*0x20826160, arg=*0x207016b0)
SPU: S {SPU[0x37] Thread (AI_0)[0x00090]} Function detected [0x00090-0x00114] (size=0x84)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692f4]} sys_spu: sys_spu_thread_bind_queue(id=0x38, spuq=0x2b, spuq_num=0x1012001)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6930c]} sys_spu: sys_spu_thread_connect_event(id=0x38, eq=0x2d, et=1, spup=59)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6931c]} sys_spu: sys_spu_thread_set_spu_cfg(id=0x38, value=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69140]} sys_spu: sys_spu_thread_group_start(id=0x2e)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692e0]} sys_spu: sys_spu_thread_initialize(thread=*0x20721ef0, group=0x32, spu_num=2, img=*0x20701700, attr=*0x20721f40, arg=*0x20701758)
SPU: S {SPU[0x38] Thread (Sound_0)[0x00090]} Function detected [0x00090-0x00114] (size=0x84)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692f4]} sys_spu: sys_spu_thread_bind_queue(id=0x39, spuq=0x2f, spuq_num=0x1012002)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6930c]} sys_spu: sys_spu_thread_connect_event(id=0x39, eq=0x31, et=1, spup=60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6931c]} sys_spu: sys_spu_thread_set_spu_cfg(id=0x39, value=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692e0]} sys_spu: sys_spu_thread_initialize(thread=*0x20721ef4, group=0x32, spu_num=3, img=*0x20701700, attr=*0x20721f4c, arg=*0x20701758)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692f4]} sys_spu: sys_spu_thread_bind_queue(id=0x3a, spuq=0x2f, spuq_num=0x1012002)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6930c]} sys_spu: sys_spu_thread_connect_event(id=0x3a, eq=0x31, et=1, spup=60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6931c]} sys_spu: sys_spu_thread_set_spu_cfg(id=0x3a, value=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69140]} sys_spu: sys_spu_thread_group_start(id=0x32)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692e0]} sys_spu: sys_spu_thread_initialize(thread=*0x20846700, group=0x36, spu_num=4, img=*0x207017a8, attr=*0x20846750, arg=*0x20701800)
SPU: S {SPU[0x39] Thread (Workers_0)[0x00090]} Function detected [0x00090-0x00114] (size=0x84)
SPU: S {SPU[0x37] Thread (AI_0)[0x0af18]} Function detected [0x0af18-0x0b384] (size=0x46c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c692f4]} sys_spu: sys_spu_thread_bind_queue(id=0x3b, spuq=0x33, spuq_num=0x1012003)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6930c]} sys_spu: sys_spu_thread_connect_event(id=0x3b, eq=0x35, et=1, spup=61)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6931c]} sys_spu: sys_spu_thread_set_spu_cfg(id=0x3b, value=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c69140]} sys_spu: sys_spu_thread_group_start(id=0x36)
HLE: W {PPU[0x1] Thread (main_thread)[0x00c6915c]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f548)
SPU: S {SPU[0x3b] Thread (Codec_0)[0x00090]} Function detected [0x00090-0x00114] (size=0x84)
TTY: VPUManager steals 00000000 bytes of memory\n
SPU: S {SPU[0x38] Thread (Sound_0)[0x13a20]} Function detected [0x13a20-0x13a40] (size=0x20)
SPU: S {SPU[0x39] Thread (Workers_0)[0x001f8]} Function detected [0x001f8-0x00204] (size=0xc)
SPU: S {SPU[0x37] Thread (AI_0)[0x00680]} Function detected [0x00680-0x00700] (size=0x80)
SPU: S {SPU[0x3b] Thread (Codec_0)[0x097e0]} Function detected [0x097e0-0x09800] (size=0x20)
SPU: S {SPU[0x38] Thread (Sound_0)[0x13880]} Function detected [0x13880-0x13a20] (size=0x1a0)
SPU: S {SPU[0x39] Thread (Workers_0)[0x00190]} Function detected [0x00190-0x001f4] (size=0x64)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f108, sb=*0xd003f0d0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f108, sb=*0xd003f0d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/ENVIRONMENT_PS3.CFG'
HLE: E {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/ENVIRONMENT_PS3.CFG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d988]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd003f3e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f108, sb=*0xd003f0d0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f108, sb=*0xd003f0d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/CONTENT_FREP5.XRG'
HLE: E {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/CONTENT_FREP5.XRG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d988]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd003f3e0)
SPU: S {SPU[0x3b] Thread (Codec_0)[0x09640]} Function detected [0x09640-0x097e0] (size=0x1a0)
SPU: S {SPU[0x38] Thread (Sound_0)[0x00738]} Function detected [0x00738-0x007b8] (size=0x80)
SPU: S {SPU[0x39] Thread (Workers_0)[0x0a9b0]} Function detected [0x0a9b0-0x0aebc] (size=0x50c)
SPU: S {SPU[0x3b] Thread (Codec_0)[0x01eb8]} Function detected [0x01eb8-0x01f38] (size=0x80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} cellFs: cellFsStat(path=*0xd003f2d8, sb=*0xd003f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat(path=*0xd003f2d8, sb=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: *** path = 'MXR.DLL'
HLE: W {PPU[0x1] Thread (main_thread)[0x0101d788]} sys_fs: sys_fs_stat('MXR.DLL') failed: not mounted
G: ! Stopping emulator...
G: ! All threads signaled...
G: ! {PPU[0x2] Thread (Callback Thread)[0x00000000]} Thread aborted
G: ! {SPU[0x37] Thread (AI_0)[0x00690]} Thread aborted
G: ! {SPU[0x3a] Thread (Workers_1)[0x0aa38]} Thread aborted
G: ! {SPU[0x3b] Thread (Codec_0)[0x01ec8]} Thread aborted
G: ! {SPU[0x39] Thread (Workers_0)[0x0aa38]} Thread aborted
G: ! {SPU[0x38] Thread (Sound_0)[0x00748]} Thread aborted
HLE: S {PPU[0x1] Thread (main_thread)[0x00032ae4]} Last syscall: 141 (sys_timer_usleep)
G: ! {PPU[0x1] Thread (main_thread)[0x00032ae4]} Thread aborted
G: ! All threads stopped...
G: ! Objects cleared...
