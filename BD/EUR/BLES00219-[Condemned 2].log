LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 0.0.0.5 v0.0.0.5-2529-g286d296
G: ! 
G: ! Stopping emulator...
LDR: ! Loading 'D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00219-[Condemned 2]/PS3_GAME/USRDIR/BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00219-[Condemned 2]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00219-[Condemned 2]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! Settings:
LDR: ! CPU: PPU Interpreter 2
LDR: ! SPU: SPU Recompiler (ASMJIT)
LDR: ! Renderer: DirectX 12
LDR: ! D3D Adapter: Default
LDR: ! Resolution: 1280x720
LDR: ! Write Depth Buffer: No
LDR: ! Write Color Buffers: No
LDR: ! Read Color Buffer: No
LDR: ! Audio Out: XAudio2
LDR: ! Log Everything: No
LDR: ! RSX Logging: No
LDR: ! 
LDR: ! Title: Condemned 2
LDR: ! Serial: BLES00219
LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x200002
LDR: ! *** primary prio: 500
LDR: ! *** primary stacksize: 0x40000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function 'cellSpursAttributeSetNamePrefix' in 'cellSpurs' module (0x103e424)
LDR: ! Imported function 'cellSpursTaskExitCodeGet' in 'cellSpurs' module (0x103e444)
LDR: ! Imported function '_cellSpursTasksetAttributeInitialize' in 'cellSpurs' module (0x103e464)
LDR: ! Imported function 'cellSpursCreateTaskWithAttribute' in 'cellSpurs' module (0x103e484)
LDR: ! Imported function 'cellSpursEventFlagDetachLv2EventQueue' in 'cellSpurs' module (0x103e4a4)
LDR: ! Imported function 'cellSpursTaskExitCodeInitialize' in 'cellSpurs' module (0x103e4c4)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module (0x103e4e4)
LDR: ! Imported function 'cellSpursEventFlagClear' in 'cellSpurs' module (0x103e504)
LDR: ! Imported function 'cellSpursDetachLv2EventQueue' in 'cellSpurs' module (0x103e524)
LDR: ! Imported function '_cellSpursEventFlagInitialize' in 'cellSpurs' module (0x103e544)
LDR: ! Imported function 'cellSpursTasksetAttributeSetName' in 'cellSpurs' module (0x103e564)
LDR: ! Imported function 'cellSpursEventFlagTryWait' in 'cellSpurs' module (0x103e584)
LDR: ! Imported function 'cellSpursEventFlagAttachLv2EventQueue' in 'cellSpurs' module (0x103e5a4)
LDR: ! Imported function 'cellSpursTasksetAttributeSetTasksetSize' in 'cellSpurs' module (0x103e5c4)
LDR: ! Imported function '_cellSpursAttributeInitialize' in 'cellSpurs' module (0x103e5e4)
LDR: ! Imported function 'cellSpursJoinTaskset' in 'cellSpurs' module (0x103e604)
LDR: ! Imported function 'cellSpursTaskAttributeSetExitCodeContainer' in 'cellSpurs' module (0x103e624)
LDR: ! Imported function 'cellSpursShutdownTaskset' in 'cellSpurs' module (0x103e644)
LDR: ! Imported function 'cellSpursInitializeWithAttribute' in 'cellSpurs' module (0x103e664)
LDR: ! Imported function '_cellSpursTaskAttributeInitialize' in 'cellSpurs' module (0x103e684)
LDR: ! Imported function 'cellSpursAttachLv2EventQueue' in 'cellSpurs' module (0x103e6a4)
LDR: ! Imported function 'cellSpursCreateTasksetWithAttribute' in 'cellSpurs' module (0x103e6c4)
LDR: ! Imported function 'cellSpursFinalize' in 'cellSpurs' module (0x103e6e4)
LDR: ! Imported function 'cellSpursEventFlagSet' in 'cellSpurs' module (0x103e704)
LDR: ! Imported function '_cellSpursSendSignal' in 'cellSpurs' module (0x103f1c4)
LDR: ! Imported function 'cellSpursCreateTaskset' in 'cellSpurs' module (0x103f4a4)
LDR: ! Imported function 'cellSpursCreateTask' in 'cellSpurs' module (0x103f4c4)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0x103e724)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0x103e744)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0x103e764)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0x103e784)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0x103e7a4)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0x103e7c4)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0x103f4e4)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0x103e7e4)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module (0x103e804)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0x103e824)
LDR: ! Imported function 'cellFsReaddir' in 'sys_fs' module (0x103e844)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0x103e864)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0x103e884)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0x103e8a4)
LDR: ! Imported function 'cellFsMkdir' in 'sys_fs' module (0x103e8c4)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0x103e8e4)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0x103e904)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module (0x103e924)
LDR: ! Imported function 'cellFsGetFreeSize' in 'sys_fs' module (0x103f1e4)
LDR: ! Imported function 'cellPadClearBuf' in 'sys_io' module (0x103e944)
LDR: ! Imported function 'cellPadInfoPressMode' in 'sys_io' module (0x103e964)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0x103e984)
LDR: ! Imported function 'cellPadGetInfo' in 'sys_io' module (0x103e9a4)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0x103e9c4)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0x103e9e4)
LDR: ! Imported function 'cellPadGetCapabilityInfo' in 'sys_io' module (0x103ea04)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module (0x103ea24)
LDR: ! Imported function 'cellPadSetPressMode' in 'sys_io' module (0x103ea44)
LDR: ! Imported function 'getsockname' in 'sys_net' module (0x103ea64)
LDR: ! Imported function 'recvfrom' in 'sys_net' module (0x103ea84)
LDR: ! Imported function 'socketselect' in 'sys_net' module (0x103eaa4)
LDR: ! Imported function 'getsockopt' in 'sys_net' module (0x103eac4)
LDR: ! Imported function '_sys_net_errno_loc' in 'sys_net' module (0x103eae4)
LDR: ! Imported function 'connect' in 'sys_net' module (0x103eb04)
LDR: ! Imported function 'socketclose' in 'sys_net' module (0x103eb24)
LDR: ! Imported function 'gethostbyname' in 'sys_net' module (0x103eb44)
LDR: ! Imported function 'inet_ntoa' in 'sys_net' module (0x103eb64)
LDR: ! Imported function 'setsockopt' in 'sys_net' module (0x103eb84)
LDR: ! Imported function 'sendto' in 'sys_net' module (0x103eba4)
LDR: ! Imported function 'socket' in 'sys_net' module (0x103ebc4)
LDR: ! Imported function 'shutdown' in 'sys_net' module (0x103ebe4)
LDR: ! Imported function 'bind' in 'sys_net' module (0x103ec04)
LDR: ! Imported function 'inet_addr' in 'sys_net' module (0x103ec24)
LDR: ! Imported function 'send' in 'sys_net' module (0x103ec44)
LDR: ! Imported function 'gethostbyaddr' in 'sys_net' module (0x103ec64)
LDR: ! Imported function 'recv' in 'sys_net' module (0x103ec84)
LDR: ! Imported function 'sys_net_initialize_network_ex' in 'sys_net' module (0x103f204)
LDR: ! Imported function 'listen' in 'sys_net' module (0x103f224)
LDR: ! Imported function 'sys_net_show_ifconfig' in 'sys_net' module (0x103f244)
LDR: ! Imported function 'sys_net_finalize_network' in 'sys_net' module (0x103f264)
LDR: ! Imported function 'accept' in 'sys_net' module (0x103f284)
LDR: ! Imported function 'cellNetCtlNetStartDialogLoadAsync' in 'cellNetCtl' module (0x103eca4)
LDR: ! Imported function 'cellNetCtlAddHandler' in 'cellNetCtl' module (0x103ecc4)
LDR: ! Imported function 'cellNetCtlNetStartDialogUnloadAsync' in 'cellNetCtl' module (0x103ece4)
LDR: ! Imported function 'cellNetCtlGetInfo' in 'cellNetCtl' module (0x103ed04)
LDR: ! Imported function 'cellNetCtlDelHandler' in 'cellNetCtl' module (0x103ed24)
LDR: ! Imported function 'cellNetCtlTerm' in 'cellNetCtl' module (0x103f2a4)
LDR: ! Imported function 'cellNetCtlGetState' in 'cellNetCtl' module (0x103f2c4)
LDR: ! Imported function 'cellNetCtlInit' in 'cellNetCtl' module (0x103f2e4)
LDR: ! Imported function 'cellSysutilUnregisterCallback' in 'cellSysutil' module (0x103ed44)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0x103ed64)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0x103ed84)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0x103eda4)
LDR: ! Imported function 'cellSysutilGetSystemParamString' in 'cellSysutil' module (0x103edc4)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0x103ede4)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0x103ee04)
LDR: ! Imported function 'cellGameDataCheckCreate2' in 'cellSysutil' module (0x103ee24)
LDR: ! Imported function 'cellDiscGameRegisterDiscChangeCallback' in 'cellSysutil' module (0x103ee44)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module (0x103ee64)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0x103f364)
LDR: ! Imported function 'cellSaveDataListLoad2' in 'cellSysutil' module (0x103f384)
LDR: ! Imported function 'cellSaveDataListAutoLoad' in 'cellSysutil' module (0x103f3a4)
LDR: ! Imported function 'cellSaveDataListSave2' in 'cellSysutil' module (0x103f3c4)
LDR: ! Imported function 'cellSaveDataListAutoSave' in 'cellSysutil' module (0x103f3e4)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0x103f404)
LDR: ! Imported function 'cellVideoOutGetResolutionAvailability' in 'cellSysutil' module (0x103f424)
LDR: ! Imported function 'cellDiscGameGetBootDiscInfo' in 'cellSysutil' module (0x103f444)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0x103f464)
LDR: ! Imported function 'sceNpManagerGetAccountAge' in 'sceNp' module (0x103ee84)
LDR: ! Imported function 'sceNpManagerUnregisterCallback' in 'sceNp' module (0x103eea4)
LDR: ! Imported function 'sceNpManagerGetContentRatingFlag' in 'sceNp' module (0x103eec4)
LDR: ! Imported function 'sceNpManagerGetStatus' in 'sceNp' module (0x103eee4)
LDR: ! Imported function 'sceNpDrmIsAvailable' in 'sceNp' module (0x103ef04)
LDR: ! Imported function 'sceNpManagerGetOnlineId' in 'sceNp' module (0x103ef24)
LDR: ! Imported function 'sceNpUtilCmpNpId' in 'sceNp' module (0x103ef44)
LDR: ! Imported function 'sceNpManagerRegisterCallback' in 'sceNp' module (0x103ef64)
LDR: ! Imported function 'sceNpManagerGetNpId' in 'sceNp' module (0x103ef84)
LDR: ! Imported function 'sceNpInit' in 'sceNp' module (0x103f484)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0x103efa4)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0x103efc4)
LDR: ! Imported function 'cellRtcGetCurrentClockLocalTime' in 'cellRtc' module (0x103efe4)
LDR: ! Imported function 'cellGcmGetTiledPitchSize' in 'cellGcmSys' module (0x103f004)
LDR: ! Imported function 'cellGcmSetUserHandler' in 'cellGcmSys' module (0x103f024)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0x103f044)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0x103f064)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0x103f084)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0x103f0a4)
LDR: ! Imported function 'cellGcmGetFlipStatus' in 'cellGcmSys' module (0x103f0c4)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0x103f0e4)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0x103f104)
LDR: ! Imported function 'cellGcmResetFlipStatus' in 'cellGcmSys' module (0x103f124)
LDR: ! Imported function 'cellGcmSetTile' in 'cellGcmSys' module (0x103f144)
LDR: ! Imported function 'cellGcmSetZcull' in 'cellGcmSys' module (0x103f164)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0x103f184)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0x103f1a4)
LDR: ! Imported function 'cellSyncMutexUnlock' in 'cellSync' module (0x103f304)
LDR: ! Imported function 'cellSyncMutexInitialize' in 'cellSync' module (0x103f324)
LDR: ! Imported function 'cellSyncMutexTryLock' in 'cellSync' module (0x103f344)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0x103f504)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0x103f524)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0x103f544)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0x103f564)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0x103f584)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0x103f5a4)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0x103f5c4)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0x103f5e4)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0x103f604)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0x103f624)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0x103f644)
LDR: ! Imported function 'sys_spu_image_close' in 'sysPrxForUser' module (0x103f664)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0x103f684)
LDR: ! Imported function 'sys_spu_image_import' in 'sysPrxForUser' module (0x103f6a4)
MEM: ! Thread Local Storage initialized (g_tls_start=0x1179000, user_size=0x1e4)
*** TLS segment addr: 0x01173170
*** TLS segment size: 0x00000004
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x10123bb8, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x10123b90, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x10123318, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x10123340, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x10123368, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x10123250, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x101232a0, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x101232c8, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x101232f0, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x007f0270]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd003f510)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f5e0, attr=*0xd003f5e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f5e0, attr=*0xd003f5e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f5e0, attr=*0xd003f5e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f5e0, attr=*0xd003f5e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f5e0, attr=*0xd003f5e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f5e0, attr=*0xd003f5e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f5e0, attr=*0xd003f5e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f5e0, attr=*0xd003f5e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f5d0, attr=*0xd003f5d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f3d0, attr=*0xd003f3d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200000e0, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000110, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000140, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000170, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200001a0, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200001d0, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000230, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000260, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000290, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200002c0, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200002f0, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000320, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f940, attr=*0xd003f948)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f940, attr=*0xd003f948)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f940, attr=*0xd003f948)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f840, attr=*0xd003f848)
HLE: W {PPU[0x1] Thread (main_thread)[0x00db42c4]} sys_mutex: sys_mutex_create(mutex_id=*0x101acf68, attr=*0xd003fba0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x100c1b18, attr=*0xd003fbb0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x100c6e98, attr=*0xd003fbb0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x100c6e70, attr=*0xd003fbf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x100c6e48, attr=*0xd003fbf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003fa80, attr=*0xd003fa88)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003fa80, attr=*0xd003fa88)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003fa90, attr=*0xd003fa98)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003fa80, attr=*0xd003fa88)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003fa80, attr=*0xd003fa88)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003fa80, attr=*0xd003fa88)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f9b0, attr=*0xd003f9b8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0015: CELL_SYSMODULE_SYSUTIL)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0000: CELL_SYSMODULE_NET)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0014: CELL_SYSMODULE_NETCTL)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0016: CELL_SYSMODULE_SYSUTIL_NP)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0011: CELL_SYSMODULE_AUDIO)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x001f: CELL_SYSMODULE_RESC)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x000d: CELL_SYSMODULE_SYNC)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x000a: CELL_SYSMODULE_SPURS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103efc4]} cellSysmodule: cellSysmoduleLoadModule(id=0x0009: CELL_SYSMODULE_RTC)
HLE: W {PPU[0x1] Thread (main_thread)[0x00010838]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003fa50)
TTY: File location prefix is set to /dev_bdvd/PS3_GAME/USRDIR\n
TTY: Main init pre SPU\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0002a80c]} sys_spu: sys_spu_initialize(max_usable_spu=5, max_raw_spu=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e5e4]} cellSpurs: _cellSpursAttributeInitialize(attr=*0xd003f670, revision=1, sdkVersion=0x200002, nSpus=5, spuPriority=100, ppuPriority=501, exitIfNoWork=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e424]} cellSpurs: cellSpursAttributeSetNamePrefix(attr=*0xd003f670, prefix=*0x1000c488, size=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} cellSpurs: cellSpursInitializeWithAttribute(spurs=*0x2008c300, attr=*0xd003f670)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0x2008c300, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f5d8, attr=*0xd003f5b8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: sys_spu_thread_group_create(id=*0xd003f598, num=5, prio=100, attr=*0xd003f508)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: sys_spu_thread_initialize(thread=*0xd003f4e0, group=0x142, spu_num=0, img=*0x2008d070, attr=*0xd003f4d0, arg=*0xd003f4e8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: sys_spu_thread_initialize(thread=*0xd003f4e0, group=0x142, spu_num=1, img=*0x2008d070, attr=*0xd003f4d0, arg=*0xd003f4e8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: sys_spu_thread_initialize(thread=*0xd003f4e0, group=0x142, spu_num=2, img=*0x2008d070, attr=*0xd003f4d0, arg=*0xd003f4e8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: sys_spu_thread_initialize(thread=*0xd003f4e0, group=0x142, spu_num=3, img=*0x2008d070, attr=*0xd003f4d0, arg=*0xd003f4e8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: sys_spu_thread_initialize(thread=*0xd003f4e0, group=0x142, spu_num=4, img=*0x2008d070, attr=*0xd003f4d0, arg=*0xd003f4e8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2008d0b0, attr=*0xd003f5a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2008d0c8, lwmutex=*0x2008d0b0, attr=*0xd003f5b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_event: sys_event_queue_create(equeue_id=*0x2008d05c, attr=*0xd003f438, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x142, eq=0x14a, req=0xffffffffffff0000, spup=*0x2008c3c9)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_event: sys_event_port_create(eport_id=*0x2008d060, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_event: sys_event_port_connect_local(eport_id=0x14b, equeue_id=0x14a)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0x2008c300, flag=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} sys_spu: sys_spu_thread_group_connect_event(id=0x142, eq=0x14a, et=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e664]} cellSpurs: cellSpursWakeUp(spurs=*0x2008c300)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e464]} cellSpurs: _cellSpursTasksetAttributeInitialize(attribute=*0xd003f678, revision=1, skd_version=0x200002, args=0x0, priority=*0xd003f660, max_contention=5)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e564]} cellSpurs: cellSpursTasksetAttributeSetName(attr=*0xd003f678, name=*0x1000d1e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e5c4]} cellSpurs: cellSpursTasksetAttributeSetTasksetSize(attr=*0xd003f678, size=0x2900)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e6c4]} cellSpurs: cellSpursCreateTasksetWithAttribute(spurs=*0x2008c300, taskset=*0x2008d400, attr=*0xd003f678)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e6c4]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003f3f0, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x2008d400, priority=*0xd003f688, minCnt=0x8, maxCnt=0x5)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e6c4]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003f3f0, nameClass=*0x0, nameInstance=*0x1000d1e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e6c4]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0x2008c300, wid=*0xd003f3e8, attr=*0xd003f3f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e5c4]} cellSpurs: cellSpursTasksetAttributeSetTasksetSize(attr=*0xd003f678, size=0x2900)
TTY: Main init post SPU\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} cellFs: cellFsOpen(path=*0xd003f564, flags=0, fd=*0xd003f714, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: sys_fs_open(path=*0xd003f564, flags=0, fd=*0xd003f714, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/cmdline.txt'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e904]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd003f530)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103ede4]} cellSysutil: cellSysutilRegisterCallback(slot=3, func=*0x10eb9d0, userdata=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f204]} sys_net: sys_net_initialize_network_ex(param=*0xd003f470)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f2e4]} cellNetCtl: cellNetCtlInit()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f484]} sceNp: sceNpInit(poolsize=0x20000, poolptr=*0x10163008)
HLE: W {PPU[0x1] Thread (main_thread)[0x00da6d2c]} sys_mutex: sys_mutex_create(mutex_id=*0x20091170, attr=*0xd003f3a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} cellFs: cellFsOpendir(path=*0xd003e910, fd=*0xd003e900) -> sys_fs_opendir()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: sys_fs_opendir(path=*0xd003e910, fd=*0xd003e900)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/Custom/AdditionalContent/*.Arch02'
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: sys_fs_opendir('//dev_bdvd/PS3_GAME/USRDIR/Custom/AdditionalContent/*.Arch02'): failed to open directory
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e884]} cellFs: cellFsStat(path=*0xd003ea34, sb=*0xd003ea00) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e884]} sys_fs: sys_fs_stat(path=*0xd003ea34, sb=*0xd003ea00)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e884]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/default.archcfg'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} cellFs: cellFsOpen(path=*0xd003e524, flags=0, fd=*0xd003e6cc, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: sys_fs_open(path=*0xd003e524, flags=0, fd=*0xd003e6cc, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/default.archcfg'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e904]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd003e4f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003e320, attr=*0xd003e328)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} cellFs: cellFsOpendir(path=*0xd003e2c4, fd=*0xd003e2c0) -> sys_fs_opendir()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: sys_fs_opendir(path=*0xd003e2c4, fd=*0xd003e2c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/game'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} cellFs: cellFsOpendir(path=*0xd003e2c4, fd=*0xd003e2c0) -> sys_fs_opendir()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: sys_fs_opendir(path=*0xd003e2c4, fd=*0xd003e2c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/Layer.Arch02'
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: sys_fs_opendir('/dev_bdvd/PS3_GAME/USRDIR/Layer.Arch02'): failed to open directory
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e884]} cellFs: cellFsStat(path=*0xd003e2d4, sb=*0xd003e2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e884]} sys_fs: sys_fs_stat(path=*0xd003e2d4, sb=*0xd003e2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e884]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/Layer.Arch02'
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003e270, attr=*0xd003e278)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003e240, attr=*0xd003e248)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003e240, attr=*0xd003e248)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003e1b0, attr=*0xd003e1b8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e544]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x2008d400, eventFlag=*0x20057d80, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e504]} cellSpurs: cellSpursEventFlagClear(eventFlag=*0x20057d80, bits=0xffff)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e5a4]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0x20057d80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e5a4]} sys_event: sys_event_queue_create(equeue_id=*0xd003de48, attr=*0xd003de28, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e5a4]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x142, eq=0x154, req=0xffffffffffff0000, spup=*0xd003de40)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e544]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x2008d400, eventFlag=*0x20057e80, flagClearMode=0, flagDirection=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e504]} cellSpurs: cellSpursEventFlagClear(eventFlag=*0x20057e80, bits=0xffff)
HLE: W {PPU[0x1] Thread (main_thread)[0x007f0270]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd003dcf0)
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e684]} cellSpurs: _cellSpursTaskAttributeInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e4c4]} cellSpurs: cellSpursTaskExitCodeInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e624]} cellSpurs: cellSpursTaskAttributeSetExitCodeContainer
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e484]} cellSpurs: cellSpursCreateTaskWithAttribute
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e544]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x2008d400, eventFlag=*0x20132900, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e504]} cellSpurs: cellSpursEventFlagClear(eventFlag=*0x20132900, bits=0xffff)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e5a4]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0x20132900)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e5a4]} sys_event: sys_event_queue_create(equeue_id=*0xd003de48, attr=*0xd003de28, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e5a4]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x142, eq=0x155, req=0xffffffffffff0000, spup=*0xd003de40)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e544]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x2008d400, eventFlag=*0x20132a00, flagClearMode=0, flagDirection=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e504]} cellSpurs: cellSpursEventFlagClear(eventFlag=*0x20132a00, bits=0xffff)
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e684]} cellSpurs: _cellSpursTaskAttributeInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e4c4]} cellSpurs: cellSpursTaskExitCodeInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e624]} cellSpurs: cellSpursTaskAttributeSetExitCodeContainer
HLE: E {PPU[0x1] Thread (main_thread)[0x0103e484]} cellSpurs: cellSpursCreateTaskWithAttribute
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20170930, attr=*0xd003e090)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f544]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x201708d0, entry=0x1134d00, arg=0x201708d000000000, prio=0, stacksize=0x4000, flags=0x1, threadname=*0xd003e0a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f544]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x201708d0, param=*0xd003e008, arg=0x201708d000000000, unk=0x0, prio=0, stacksize=0x4000, flags=0x1, threadname=*0xd003e0a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f544]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x157)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x007e9d68]} sys_cond: sys_cond_create(cond_id=*0xd005fac0, mutex_id=0x152, attr=*0xd005fad8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} cellFs: cellFsOpen(path=*0xd003e134, flags=0, fd=*0x2017097c, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: sys_fs_open(path=*0xd003e134, flags=0, fd=*0x2017097c, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/Layer.Arch02'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e904]} sys_fs: sys_fs_fstat(fd=5, sb=*0xd003e100)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} cellFs: cellFsOpen(path=*0xd003e1f4, flags=0, fd=*0x2005c3d4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: sys_fs_open(path=*0xd003e1f4, flags=0, fd=*0x2005c3d4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/Layer.Arch02'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e904]} sys_fs: sys_fs_fstat(fd=5, sb=*0xd003e1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} cellFs: cellFsOpen(path=*0xd003e1f4, flags=0, fd=*0x2005c3fc, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: sys_fs_open(path=*0xd003e1f4, flags=0, fd=*0x2005c3fc, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/Layer.Arch02'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e904]} sys_fs: sys_fs_fstat(fd=6, sb=*0xd003e1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} cellFs: cellFsOpen(path=*0xd003e1f4, flags=0, fd=*0x2005c424, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: sys_fs_open(path=*0xd003e1f4, flags=0, fd=*0x2005c424, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e864]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/Layer.Arch02'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e904]} sys_fs: sys_fs_fstat(fd=7, sb=*0xd003e1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001aea4]} sys_memory: sys_memory_container_create(cid=*0xd003eb20, size=0x300000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103ee24]} cellGame: cellGameDataCheckCreate2(version=0x0, dirName=*0x1000c748, errDialog=0x1, funcStat=*0x10eaf00, container=345)
HLE: E {PPU[0x1] Thread (main_thread)[0x0103ee24]} cellGame TODO: cellGameDataCheckCreate2(): creating directory '/dev_hdd0/game/BLUS30115'
HLE: W {PPU[0x1] Thread (main_thread)[0x0001aed8]} sys_memory: sys_memory_container_destroy(cid=0x159)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001a940]} sys_memory: sys_memory_container_create(cid=*0xd003eb20, size=0x300000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103ee24]} cellGame: cellGameDataCheckCreate2(version=0x0, dirName=*0x1000c748, errDialog=0x1, funcStat=*0x10eaf08, container=346)
HLE: E {PPU[0x1] Thread (main_thread)[0x0103ee24]} cellGame TODO: cellGameDataCheckCreate2(): creating directory '/dev_hdd0/game/BLUS30115'
HLE: W {PPU[0x1] Thread (main_thread)[0x0001a974]} sys_memory: sys_memory_container_destroy(cid=0x15a)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e984]} sys_io: cellPadInit(max_connect=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open(path=*0xd003f6a0, flags=0, fd=*0xd003f010, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/autoexec.cfg'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20057f40, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f644]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0x15b)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open(path=*0xd003f7a0, flags=0, fd=*0xd003f010, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/display.cfg'
G: W {PPU[0x1] Thread (main_thread)[0x007fe180]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00219-[Condemned 2]/PS3_GAME/USRDIR/display.cfg', 0x1) failed: error 0x2
HLE: E {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open('//dev_bdvd/PS3_GAME/USRDIR/display.cfg'): failed to open file (flags=0, mode=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open(path=*0xd003f8a0, flags=0, fd=*0xd003f010, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/settings.cfg'
G: W {PPU[0x1] Thread (main_thread)[0x007fe180]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00219-[Condemned 2]/PS3_GAME/USRDIR/settings.cfg', 0x1) failed: error 0x2
HLE: E {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open('//dev_bdvd/PS3_GAME/USRDIR/settings.cfg'): failed to open file (flags=0, mode=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open(path=*0xd003f6a0, flags=0, fd=*0xd003f010, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/autoexec.cfg'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20057f40, attr=*0x1000726c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f644]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0x15c)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open(path=*0xd003f7a0, flags=0, fd=*0xd003f010, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/display.cfg'
G: W {PPU[0x1] Thread (main_thread)[0x007fe180]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00219-[Condemned 2]/PS3_GAME/USRDIR/display.cfg', 0x1) failed: error 0x2
HLE: E {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open('//dev_bdvd/PS3_GAME/USRDIR/display.cfg'): failed to open file (flags=0, mode=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open(path=*0xd003f8a0, flags=0, fd=*0xd003f010, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/settings.cfg'
G: W {PPU[0x1] Thread (main_thread)[0x007fe180]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00219-[Condemned 2]/PS3_GAME/USRDIR/settings.cfg', 0x1) failed: error 0x2
HLE: E {PPU[0x1] Thread (main_thread)[0x007fe180]} sys_fs: sys_fs_open('//dev_bdvd/PS3_GAME/USRDIR/settings.cfg'): failed to open file (flags=0, mode=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f270, attr=*0xd003f278)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f270, attr=*0xd003f278)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f300, attr=*0xd003f308)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f300, attr=*0xd003f308)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f270, attr=*0xd003f278)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f300, attr=*0xd003f308)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} cellFs: cellFsOpendir(path=*0xd003f0f4, fd=*0xd003f0f0) -> sys_fs_opendir()
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: sys_fs_opendir(path=*0xd003f0f4, fd=*0xd003f0f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103e804]} sys_fs: *** path = '//dev_bdvd/PS3_GAME/USRDIR/Save'
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f584]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20172610, attr=*0xd003ef80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f544]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x201725b0, entry=0x1134d00, arg=0x201725b000000000, prio=0, stacksize=0x4000, flags=0x1, threadname=*0xd003ef90)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f544]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x201725b0, param=*0xd003eef8, arg=0x201725b000000000, unk=0x0, prio=0, stacksize=0x4000, flags=0x1, threadname=*0xd003ef90)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103f544]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x164)
HLE: W {PPU[0x1] Thread (main_thread)[0x0103ed84]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd003ef80)
HLE: W {PPU[0x164] Thread (ResourceLoader)[0x007e9d68]} sys_cond: sys_cond_create(cond_id=*0xd0063aa0, mutex_id=0x15f, attr=*0xd0063ab8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007f0270]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd003e8d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8cc]} sys_mutex: sys_mutex_create(mutex_id=*0xd003e9a0, attr=*0xd003e9a8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007e9d68]} sys_cond: sys_cond_create(cond_id=*0xd003ea10, mutex_id=0x166, attr=*0xd003ea28)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
HLE: W {PPU[0x157] Thread (FileDecomp)[0x0103e704]} cellSpurs: cellSpursEventFlagSet(eventFlag=*0x20132a00, bits=0x4)
G: ! All threads signaled...
G: ! {SPU[0x147] Thread (lithCellSpursKernel4)[0x00000]} Thread aborted
G: ! {SPU[0x146] Thread (lithCellSpursKernel3)[0x00000]} Thread aborted
HLE: S {PPU[0x1] Thread (main_thread)[0x007e9f00]} Last syscall: 107 (sys_cond_wait)
G: ! {SPU[0x145] Thread (lithCellSpursKernel2)[0x00000]} Thread aborted
G: ! {PPU[0x2] Thread (Callback Thread)[0x00000000]} Thread aborted
G: ! {PPU[0x1] Thread (main_thread)[0x007e9f00]} Thread aborted
HLE: S {PPU[0x164] Thread (ResourceLoader)[0x007e9f00]} Last syscall: 107 (sys_cond_wait)
G: ! {PPU[0x14c] Thread (lithSpursHdlr1)[0x00000000]} Thread aborted
G: ! {SPU[0x144] Thread (lithCellSpursKernel1)[0x00000]} Thread aborted
G: ! {PPU[0x164] Thread (ResourceLoader)[0x007e9f00]} Thread aborted
G: ! {PPU[0x157] Thread (FileDecomp)[0x0018c514]} Thread aborted
G: ! {SPU[0x143] Thread (lithCellSpursKernel0)[0x00000]} Thread aborted
G: ! {PPU[0x14d] Thread (lithSpursHdlr0)[0x00000000]} Thread aborted
G: ! All threads stopped...
G: ! Objects cleared...
