LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 v0.0.0.5-2554-gdfeedf2
G: ! 
G: ! Stopping emulator...
LDR: ! Loading 'D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES01815-[Tales of Xillia Undub]/PS3_GAME/USRDIR/BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES01815-[Tales of Xillia Undub]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES01815-[Tales of Xillia Undub]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! Settings:
LDR: ! CPU: PPU JIT (LLVM)
LDR: ! SPU: SPU Recompiler (ASMJIT)
LDR: ! Renderer: DirectX 12
LDR: ! D3D Adapter: Default
LDR: ! Resolution: 1280x720
LDR: ! Write Depth Buffer: No
LDR: ! Write Color Buffers: No
LDR: ! Read Color Buffer: No
LDR: ! Audio Out: XAudio2
LDR: ! Log Everything: No
LDR: ! RSX Logging: No
LDR: ! 
LDR: ! Title: Tales of Xillia
LDR: ! Serial: BLES01815
LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x360001
LDR: ! *** primary prio: 1001
LDR: ! *** primary stacksize: 0x10000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0xa9f8c8)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0xa9f8e8)
LDR: ! Imported function 'cellPadSetPortSetting' in 'sys_io' module (0xa9f908)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0xa9f928)
LDR: ! Imported function 'cellPadGetInfo2' in 'sys_io' module (0xa9f948)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module (0xa9f968)
LDR: ! Imported function 'cellRtcSetTick' in 'cellRtc' module (0xa9f988)
LDR: ! Imported function 'cellRtcGetCurrentTick' in 'cellRtc' module (0xa9f9a8)
LDR: ! Imported function 'cellRtcGetDayOfWeek' in 'cellRtc' module (0xa9f9c8)
LDR: ! Imported function 'cellRtcConvertUtcToLocalTime' in 'cellRtc' module (0xa9f9e8)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0xa9fa08)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0xa9fa28)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0xa9fa48)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0xa9fa68)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0xa9fa88)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0xa9faa8)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0xa9fac8)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0xa9fae8)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0xa9fb08)
LDR: ! Imported function 'cellSpursAttributeSetNamePrefix' in 'cellSpurs' module (0xa9fb28)
LDR: ! Imported function 'cellSpursAttributeEnableSpuPrintfIfAvailable' in 'cellSpurs' module (0xa9fb48)
LDR: ! Imported function '_cellSpursTasksetAttributeInitialize' in 'cellSpurs' module (0xa9fb68)
LDR: ! Imported function 'cellSpursDestroyTaskset2' in 'cellSpurs' module (0xa9fb88)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module (0xa9fba8)
LDR: ! Imported function 'cellSpursCreateTaskset2' in 'cellSpurs' module (0xa9fbc8)
LDR: ! Imported function '_cellSpursEventFlagInitialize' in 'cellSpurs' module (0xa9fbe8)
LDR: ! Imported function 'cellSpursTasksetAttributeSetName' in 'cellSpurs' module (0xa9fc08)
LDR: ! Imported function 'cellSpursTryJoinTask2' in 'cellSpurs' module (0xa9fc28)
LDR: ! Imported function 'cellSpursEventFlagAttachLv2EventQueue' in 'cellSpurs' module (0xa9fc48)
LDR: ! Imported function '_cellSpursAttributeInitialize' in 'cellSpurs' module (0xa9fc68)
LDR: ! Imported function 'cellSpursJoinTask2' in 'cellSpurs' module (0xa9fc88)
LDR: ! Imported function 'cellSpursAttributeSetSpuThreadGroupType' in 'cellSpurs' module (0xa9fca8)
LDR: ! Imported function 'cellSpursInitializeWithAttribute' in 'cellSpurs' module (0xa9fcc8)
LDR: ! Imported function 'cellSpursCreateTasksetWithAttribute' in 'cellSpurs' module (0xa9fce8)
LDR: ! Imported function '_cellSpursTasksetAttribute2Initialize' in 'cellSpurs' module (0xa9fd08)
LDR: ! Imported function 'cellSpursFinalize' in 'cellSpurs' module (0xa9fd28)
LDR: ! Imported function 'cellSpursCreateTask2WithBinInfo' in 'cellSpurs' module (0xa9fd48)
LDR: ! Imported function '_cellSpursLFQueueInitialize' in 'cellSpurs' module (0xaa0048)
LDR: ! Imported function 'cellSpursLFQueueAttachLv2EventQueue' in 'cellSpurs' module (0xaa0068)
LDR: ! Imported function 'cellSpursLFQueueDetachLv2EventQueue' in 'cellSpurs' module (0xaa0088)
LDR: ! Imported function '_cellSpursLFQueuePushBody' in 'cellSpurs' module (0xaa00a8)
LDR: ! Imported function 'cellSpursCreateTask' in 'cellSpurs' module (0xaa00c8)
LDR: ! Imported function '_cellSpursQueueInitialize' in 'cellSpurs' module (0xaa0948)
LDR: ! Imported function 'cellSpursEventFlagTryWait' in 'cellSpurs' module (0xaa0968)
LDR: ! Imported function '_cellSpursTaskAttribute2Initialize' in 'cellSpurs' module (0xaa0988)
LDR: ! Imported function 'cellSpursTaskGetContextSaveAreaSize' in 'cellSpurs' module (0xaa09a8)
LDR: ! Imported function 'cellSpursQueuePushBody' in 'cellSpurs' module (0xaa09c8)
LDR: ! Imported function 'cellSpursCreateTask2' in 'cellSpurs' module (0xaa09e8)
LDR: ! Imported function 'cellSpursQueueAttachLv2EventQueue' in 'cellSpurs' module (0xaa0a08)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0xa9fd68)
LDR: ! Imported function 'cellSaveDataListLoad2' in 'cellSysutil' module (0xa9fd88)
LDR: ! Imported function 'cellMsgDialogClose' in 'cellSysutil' module (0xa9fda8)
LDR: ! Imported function 'cellSaveDataListAutoLoad' in 'cellSysutil' module (0xa9fdc8)
LDR: ! Imported function 'cellSaveDataFixedLoad2' in 'cellSysutil' module (0xa9fde8)
LDR: ! Imported function 'cellSaveDataFixedSave2' in 'cellSysutil' module (0xa9fe08)
LDR: ! Imported function 'cellSaveDataListSave2' in 'cellSysutil' module (0xa9fe28)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0xa9fe48)
LDR: ! Imported function 'cellMsgDialogOpen2' in 'cellSysutil' module (0xa9fe68)
LDR: ! Imported function 'cellSaveDataAutoSave2' in 'cellSysutil' module (0xa9fe88)
LDR: ! Imported function 'cellMsgDialogProgressBarInc' in 'cellSysutil' module (0xa9fea8)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0xa9fec8)
LDR: ! Imported function 'cellSaveDataDelete2' in 'cellSysutil' module (0xa9fee8)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0xaa0a28)
LDR: ! Imported function 'cellSysutilEnableBgmPlayback' in 'cellSysutil' module (0xaa0a48)
LDR: ! Imported function 'cellMsgDialogOpenErrorCode' in 'cellSysutil' module (0xaa0a68)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0xaa0a88)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0xaa0aa8)
LDR: ! Imported function 'cellSysutilGetBgmPlaybackStatus' in 'cellSysutil' module (0xaa0ac8)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0xaa0ae8)
LDR: ! Imported function 'cellSysutilDisableBgmPlayback' in 'cellSysutil' module (0xaa0b08)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0xaa0b28)
LDR: ! Imported function 'cellAudioOutGetConfiguration' in 'cellSysutil' module (0xaa0b48)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module (0xaa0b68)
LDR: ! Imported function 'cellGameCreateGameData' in 'cellGame' module (0xa9ff08)
LDR: ! Imported function 'cellGameContentPermit' in 'cellGame' module (0xa9ff28)
LDR: ! Imported function 'cellGameSetParamString' in 'cellGame' module (0xa9ff48)
LDR: ! Imported function 'cellGameDataCheck' in 'cellGame' module (0xa9ff68)
LDR: ! Imported function 'cellGameBootCheck' in 'cellGame' module (0xa9ff88)
LDR: ! Imported function 'cellGameContentErrorDialog' in 'cellGame' module (0xaa0b88)
LDR: ! Imported function 'sceNpTerm' in 'sceNp' module (0xa9ffa8)
LDR: ! Imported function 'sceNpManagerGetContentRatingFlag' in 'sceNp' module (0xa9ffc8)
LDR: ! Imported function 'sceNpManagerGetStatus' in 'sceNp' module (0xa9ffe8)
LDR: ! Imported function 'sceNpDrmIsAvailable' in 'sceNp' module (0xaa0008)
LDR: ! Imported function 'sceNpInit' in 'sceNp' module (0xaa0028)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0xaa00e8)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0xaa0108)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0xaa0128)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0xaa0148)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0xaa0168)
LDR: ! Imported function 'cellAudioSetNotifyEventQueue' in 'cellAudio' module (0xaa06c8)
LDR: ! Imported function 'cellAudioSetPortLevel' in 'cellAudio' module (0xaa06e8)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0xaa0708)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0xaa0728)
LDR: ! Imported function 'cellAudioRemoveNotifyEventQueue' in 'cellAudio' module (0xaa0748)
LDR: ! Imported function 'cellGcmGetTiledPitchSize' in 'cellGcmSys' module (0xaa0188)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0xaa01a8)
LDR: ! Imported function '_cellGcmSetFlipCommand' in 'cellGcmSys' module (0xaa01c8)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0xaa01e8)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0xaa0208)
LDR: ! Imported function 'cellGcmBindTile' in 'cellGcmSys' module (0xaa0228)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0xaa0248)
LDR: ! Imported function 'cellGcmGetTimeStamp' in 'cellGcmSys' module (0xaa0268)
LDR: ! Imported function 'cellGcmGetDefaultCommandWordSize' in 'cellGcmSys' module (0xaa0288)
LDR: ! Imported function 'cellGcmGetFlipStatus' in 'cellGcmSys' module (0xaa02a8)
LDR: ! Imported function 'cellGcmGetDefaultSegmentWordSize' in 'cellGcmSys' module (0xaa02c8)
LDR: ! Imported function 'cellGcmSetDefaultFifoSize' in 'cellGcmSys' module (0xaa02e8)
LDR: ! Imported function 'cellGcmBindZcull' in 'cellGcmSys' module (0xaa0308)
LDR: ! Imported function 'cellGcmMapMainMemory' in 'cellGcmSys' module (0xaa0328)
LDR: ! Imported function 'cellGcmSetFlipHandler' in 'cellGcmSys' module (0xaa0348)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0xaa0368)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0xaa0388)
LDR: ! Imported function 'cellGcmUnbindZcull' in 'cellGcmSys' module (0xaa03a8)
LDR: ! Imported function 'cellGcmSetVBlankHandler' in 'cellGcmSys' module (0xaa03c8)
LDR: ! Imported function 'cellGcmResetFlipStatus' in 'cellGcmSys' module (0xaa03e8)
LDR: ! Imported function 'cellGcmSetTileInfo' in 'cellGcmSys' module (0xaa0408)
LDR: ! Imported function '_cellGcmSetFlipCommandWithWaitLabel' in 'cellGcmSys' module (0xaa0428)
LDR: ! Imported function 'cellGcmUnbindTile' in 'cellGcmSys' module (0xaa0448)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0xaa0468)
LDR: ! Imported function 'cellGcmUnmapEaIoAddress' in 'cellGcmSys' module (0xaa0488)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0xaa04a8)
LDR: ! Imported function 'cellVideoOutSetGamma' in 'cellSysutilAvconfExt' module (0xaa04c8)
LDR: ! Imported function 'cellAtracSetSecondBuffer' in 'cellAtrac' module (0xaa04e8)
LDR: ! Imported function 'cellAtracGetChannel' in 'cellAtrac' module (0xaa0508)
LDR: ! Imported function 'cellAtracCreateDecoderExt' in 'cellAtrac' module (0xaa0528)
LDR: ! Imported function 'cellAtracGetStreamDataInfo' in 'cellAtrac' module (0xaa0548)
LDR: ! Imported function 'cellAtracAddStreamData' in 'cellAtrac' module (0xaa0568)
LDR: ! Imported function 'cellAtracGetMaxSample' in 'cellAtrac' module (0xaa0588)
LDR: ! Imported function 'cellAtracSetDataAndGetMemSize' in 'cellAtrac' module (0xaa05a8)
LDR: ! Imported function 'cellAtracDeleteDecoder' in 'cellAtrac' module (0xaa05c8)
LDR: ! Imported function 'cellAtracSetLoopNum' in 'cellAtrac' module (0xaa05e8)
LDR: ! Imported function 'cellAtracDecode' in 'cellAtrac' module (0xaa0608)
LDR: ! Imported function 'cellAtracIsSecondBufferNeeded' in 'cellAtrac' module (0xaa0628)
LDR: ! Imported function 'cellAtracGetLoopInfo' in 'cellAtrac' module (0xaa0648)
LDR: ! Imported function 'cellAtracGetInternalErrorInfo' in 'cellAtrac' module (0xaa0668)
LDR: ! Imported function 'cellAtracGetSecondBufferInfo' in 'cellAtrac' module (0xaa0688)
LDR: ! Imported function 'cellAtracGetVacantSize' in 'cellAtrac' module (0xaa06a8)
LDR: ! Imported function 'sceNpTrophyRegisterContext' in 'sceNpTrophy' module (0xaa0768)
LDR: ! Imported function 'sceNpTrophyCreateHandle' in 'sceNpTrophy' module (0xaa0788)
LDR: ! Imported function 'sceNpTrophyGetRequiredDiskSpace' in 'sceNpTrophy' module (0xaa07a8)
LDR: ! Imported function 'sceNpTrophyDestroyContext' in 'sceNpTrophy' module (0xaa07c8)
LDR: ! Imported function 'sceNpTrophyInit' in 'sceNpTrophy' module (0xaa07e8)
LDR: ! Imported function 'sceNpTrophyAbortHandle' in 'sceNpTrophy' module (0xaa0808)
LDR: ! Imported function 'sceNpTrophyDestroyHandle' in 'sceNpTrophy' module (0xaa0828)
LDR: ! Imported function 'sceNpTrophyUnlockTrophy' in 'sceNpTrophy' module (0xaa0848)
LDR: ! Imported function 'sceNpTrophyTerm' in 'sceNpTrophy' module (0xaa0868)
LDR: ! Imported function 'sceNpTrophyCreateContext' in 'sceNpTrophy' module (0xaa0888)
LDR: ! Imported function 'sceNpCommerce2Init' in 'sceNpCommerce2' module (0xaa08a8)
LDR: ! Imported function 'sceNpCommerce2ExecuteStoreBrowse' in 'sceNpCommerce2' module (0xaa08c8)
LDR: ! Imported function 'cellNetCtlNetStartDialogLoadAsync' in 'cellNetCtl' module (0xaa08e8)
LDR: ! Imported function 'cellNetCtlNetStartDialogUnloadAsync' in 'cellNetCtl' module (0xaa0908)
LDR: ! Imported function 'cellNetCtlInit' in 'cellNetCtl' module (0xaa0928)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0xaa0ba8)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0xaa0bc8)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0xaa0be8)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0xaa0c08)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0xaa0c28)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0xaa0c48)
LDR: ! Imported function 'sys_prx_register_library' in 'sysPrxForUser' module (0xaa0c68)
LDR: ! Imported function '_sys_spu_printf_initialize' in 'sysPrxForUser' module (0xaa0c88)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0xaa0ca8)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0xaa0cc8)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module (0xaa0ce8)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0xaa0d08)
LDR: ! Imported function 'sys_ppu_thread_once' in 'sysPrxForUser' module (0xaa0d28)
LDR: ! Imported function 'sys_lwmutex_trylock' in 'sysPrxForUser' module (0xaa0d48)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0xaa0d68)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0xaa0d88)
LDR: ! Imported function '_sys_spu_printf_finalize' in 'sysPrxForUser' module (0xaa0da8)
LDR: ! Imported function 'sys_spu_image_close' in 'sysPrxForUser' module (0xaa0dc8)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0xaa0de8)
LDR: ! Imported function 'sys_spu_image_import' in 'sysPrxForUser' module (0xaa0e08)
MEM: ! Thread Local Storage initialized (g_tls_start=0xf19000, user_size=0x1b4)
*** TLS segment addr: 0x00e24a4c
*** TLS segment size: 0x00000004
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf0a6a8, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008708a8]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd000fc04)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf0a4a8, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf097f8, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf09820, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf09848, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf09730, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf09758, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf09780, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf097a8, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf097d0, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf0a7f8, attr=*0xe2a440)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf0a778, attr=*0xe2a440)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf0a7b8, attr=*0xe2a450)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe4e750, attr=*0xd000f740)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f7d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000040, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200000f0, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200001e0, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000280, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200002e0, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000340, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000470, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200004b0, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200004f0, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000530, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000570, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200005b0, attr=*0xcabdd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf04880, attr=*0xd000fab0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0086f194]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd000f8a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f9b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe4e700, attr=*0xd000f8d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f9c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xeb5b70, attr=*0xd000fa10)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f9b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xeb5b40, attr=*0xd000fad0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa00)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa00)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f970)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa30)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe4ec50, attr=*0xd000fad0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f980)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe4ea50, attr=*0xd000f9e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe4ea70, attr=*0xd000f9e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006e6068]} sys_event_flag: sys_event_flag_create(id=*0xe4ea8c, attr=*0xd000f9d0, init=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006e6068]} sys_event_flag: sys_event_flag_create(id=*0xe4ea94, attr=*0xd000f9d0, init=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f820)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe4eae8, attr=*0xd000f930)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe4eb08, attr=*0xd000f930)
HLE: W {PPU[0x1] Thread (main_thread)[0x006e6068]} sys_event_flag: sys_event_flag_create(id=*0xe4eb24, attr=*0xd000f920, init=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006e6068]} sys_event_flag: sys_event_flag_create(id=*0xe4eb2c, attr=*0xd000f920, init=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa30)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa30)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa30)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f9e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f9a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f9a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f9a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f9a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f9d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe3f678, attr=*0xd000fad0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa70)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa70)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa40)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe34170, attr=*0xd000fa80)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe34230, attr=*0xd000fa80)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe342f0, attr=*0xd000fa80)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe343b0, attr=*0xd000fa80)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe34470, attr=*0xd000fa80)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa20)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa28]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa28]} cellSysmodule: cellSysmoduleLoadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa28]} cellSysmodule: cellSysmoduleLoadModule(id=0x0016: CELL_SYSMODULE_SYSUTIL_NP)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0028]} sceNp: sceNpInit(poolsize=0x20000, poolptr=*0xe4ee40)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9ff88]} cellGame: cellGameBootCheck(type=*0xd000f940, attributes=*0xe4ec40, size=*0xe6ee40, dirName=*0xe6ee50)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9ff28]} cellGame: cellGameContentPermit(contentInfoPath=*0xe6ee70, usrdirPath=*0xe6eef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006ea91c]} sys_spu: sys_spu_initialize(max_usable_spu=6, max_raw_spu=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc68]} cellSpurs: _cellSpursAttributeInitialize(attr=*0xd000f780, revision=2, sdkVersion=0x330000, nSpus=5, spuPriority=250, ppuPriority=1000, exitIfNoWork=2863360)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fb28]} cellSpurs: cellSpursAttributeSetNamePrefix(attr=*0xd000f780, prefix=*0xce2600, size=15)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fb48]} cellSpurs: cellSpursAttributeEnableSpuPrintfIfAvailable(attr=*0xd000f780)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fca8]} cellSpurs: cellSpursAttributeSetSpuThreadGroupType(attr=*0xd000f780, type=24)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} cellSpurs: cellSpursInitializeWithAttribute(spurs=*0xe72e80, attr=*0xd000f780)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0xe72e80, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f6f8, attr=*0xd000f6d8, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: sys_spu_thread_group_create(id=*0xd000f6b8, num=5, prio=250, attr=*0xd000f628)
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu TODO: Unsupported SPU Thread Group type (0x18)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: sys_spu_thread_initialize(thread=*0xd000f600, group=0x41, spu_num=0, img=*0xe73bf0, attr=*0xd000f5f0, arg=*0xd000f608)
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: sys_spu_thread_initialize(thread=*0xd000f600, group=0x41, spu_num=1, img=*0xe73bf0, attr=*0xd000f5f0, arg=*0xd000f608)
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: sys_spu_thread_initialize(thread=*0xd000f600, group=0x41, spu_num=2, img=*0xe73bf0, attr=*0xd000f5f0, arg=*0xd000f608)
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: sys_spu_thread_initialize(thread=*0xd000f600, group=0x41, spu_num=3, img=*0xe73bf0, attr=*0xd000f5f0, arg=*0xd000f608)
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: sys_spu_thread_initialize(thread=*0xd000f600, group=0x41, spu_num=4, img=*0xe73bf0, attr=*0xd000f5f0, arg=*0xd000f608)
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe73c30, attr=*0xd000f6c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sysPrxForUser: sys_lwcond_create(lwcond=*0xe73c48, lwmutex=*0xe73c30, attr=*0xd000f6d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_event: sys_event_queue_create(equeue_id=*0xe73bdc, attr=*0xd000f558, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x41, eq=0x49, req=0xffffffffffff0000, spup=*0xe72f49)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_event: sys_event_port_create(eport_id=*0xe73be0, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_event: sys_event_port_connect_local(eport_id=0x4a, equeue_id=0x49)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0xe72e80, flag=1)
HLE: W {PPU[0x4c] Thread (SpursTLGraphicsSpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_start(id=0x41)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fcc8]} sys_spu: sys_spu_thread_group_connect_event(id=0x41, eq=0x49, et=2)
SPU: S {PPU[0x4c] Thread (SpursTLGraphicsSpursHdlr0)[0x00000000]} SPU Database initialized...
SPU: S {PPU[0x4c] Thread (SpursTLGraphicsSpursHdlr0)[0x00000000]} SPU Recompiler (ASMJIT) created...
HLE: W {PPU[0x4c] Thread (SpursTLGraphicsSpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0x41, cause=*0x0, status=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa28]} cellSysmodule: cellSysmoduleLoadModule(id=0x0009: CELL_SYSMODULE_RTC)
SPU: S {SPU[0x42] Thread (SpursTLGraphicsCellSpursKernel0)[0x00818]} Function detected [0x00818-0x00820] (size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f610)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f610)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f600)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f600)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f600)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20005300, attr=*0xd000f590)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xe4e8d0, entry=0xdfddd8, arg=0x200052f0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xe4e8d0, param=*0xd000f588, arg=0x200052f0, unk=0x0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x4e)
HLE: W {PPU[0x4e] Thread (CThread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200053a0, attr=*0xd003b960)
HLE: W {PPU[0x4e] Thread (CThread)[0x00aa0be8]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xe4eb38, entry=0xdfddd8, arg=0x20005390, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x4e] Thread (CThread)[0x00aa0be8]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xe4eb38, param=*0xd003b958, arg=0x20005390, unk=0x0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fb68]} cellSpurs: _cellSpursTasksetAttributeInitialize(attribute=*0xd000f7e0, revision=1, skd_version=0x330000, args=0x0, priority=*0xc9a488, max_contention=5)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc08]} cellSpurs: cellSpursTasksetAttributeSetName(attr=*0xd000f7e0, name=*0xce25e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fce8]} cellSpurs: cellSpursCreateTasksetWithAttribute(spurs=*0xe72e80, taskset=*0x20104980, attr=*0xd000f7e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fce8]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd000f560, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x20104980, priority=*0xd000f7f0, minCnt=0x8, maxCnt=0x5)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fce8]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd000f560, nameClass=*0x0, nameInstance=*0xce25e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fce8]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xe72e80, wid=*0xd000f558, attr=*0xd000f560)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbe8]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0xe72e80, taskset=*0x0, eventFlag=*0xe72d00, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0xe72d00)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_event: sys_event_queue_create(equeue_id=*0xd000f758, attr=*0xd000f738, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x41, eq=0x51, req=0xffffffffffff0000, spup=*0xd000f750)
HLE: W {PPU[0x4e] Thread (CThread)[0x00aa0be8]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x50)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0048]} cellSpurs TODO: _cellSpursLFQueueInitialize(pTasksetOrSpurs=*0xe72e81, pQueue=*0x20106300, buffer=*0x20106380, size=0x20, depth=0xa, direction=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0048]} cellSync: cellSyncLFQueueInitialize(queue=*0x20106300, buffer=*0x20106380, size=0x20, depth=0xa, direction=3, eaSignal=*0xe72e81)
HLE: W {PPU[0x50] Thread (CThread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x410000, flags=0x200, alloc_addr=*0xd004b8a0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0068]} cellSpurs: cellSpursLFQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursCreateTask(taskset=*0x20104980, taskID=*0xd000f740, elf=*0xcebe00, context=*0x20106500, size=0xc00, lsPattern=*0xce2738, argument=*0xd000f748)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0xe72e80, wid=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursWakeUp(spurs=*0xe72e80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursCreateTask(taskset=*0x20104980, taskID=*0xd000f740, elf=*0xcebe00, context=*0x20107100, size=0xc00, lsPattern=*0xce2738, argument=*0xd000f748)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0xe72e80, wid=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursWakeUp(spurs=*0xe72e80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursCreateTask(taskset=*0x20104980, taskID=*0xd000f740, elf=*0xcebe00, context=*0x20107d00, size=0xc00, lsPattern=*0xce2738, argument=*0xd000f748)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0xe72e80, wid=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursWakeUp(spurs=*0xe72e80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursCreateTask(taskset=*0x20104980, taskID=*0xd000f740, elf=*0xcebe00, context=*0x20108900, size=0xc00, lsPattern=*0xce2738, argument=*0xd000f748)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0xe72e80, wid=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursWakeUp(spurs=*0xe72e80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursCreateTask(taskset=*0x20104980, taskID=*0xd000f740, elf=*0xcebe00, context=*0x20109500, size=0xc00, lsPattern=*0xce2738, argument=*0xd000f748)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0xe72e80, wid=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa00c8]} cellSpurs: cellSpursWakeUp(spurs=*0xe72e80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xe72c88, attr=*0xd000f7d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fec8]} cellSysutil: cellSysutilRegisterCallback(slot=0, func=*0xdfe018, userdata=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fe48]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd000fa70)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f890)
HLE: W {PPU[0x1] Thread (main_thread)[0x007811a0]} sys_memory: sys_memory_allocate(size=0x200000, flags=0x400, alloc_addr=*0xd000f710)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa01a8]} cellGcmSys: _cellGcmInitBody(context=**0xf00ea4, cmdSize=0x1ff000, ioSize=0x200000, ioAddress=0x20c00000)
G: E {PPU Recompilation Engine} Exception: Access violation reading location 0x1541793
(in file ..\Utilities\Thread.cpp:1122, in function _se_translator)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa01a8]} cellGcmSys: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa01a8]} cellGcmSys: cellGcmInit(): 256MB io address space used
RSX: ! {RSXThread} RSX thread started
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa28]} cellSysmodule: cellSysmoduleLoadModule(id=0x0031: CELL_SYSMODULE_AVCONF_EXT)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa03c8]} cellGcmSys: cellGcmSetVBlankHandler(handler=*0xe03878)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0348]} cellGcmSys: cellGcmSetFlipHandler(handler=*0xe03880)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f4d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fd08]} cellSpurs: _cellSpursTasksetAttribute2Initialize(attribute=*0xd000f3a0, revision=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursCreateTaskset2(spurs=*0xe72e80, taskset=*0xee0800, attr=*0xd000f3a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd000ee10, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0xee0800, priority=*0xd000f3b0, minCnt=0x8, maxCnt=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd000ee10, nameClass=*0x0, nameInstance=*0xce7328)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xe72e80, wid=*0xd000ee08, attr=*0xd000ee10)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0948]} cellSpurs: _cellSpursQueueInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0a08]} cellSpurs: cellSpursQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbe8]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0xee0800, eventFlag=*0xee3280, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0xee3280)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_event: sys_event_queue_create(equeue_id=*0xd000f208, attr=*0xd000f1e8, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x41, eq=0x53, req=0xffffffffffff0000, spup=*0xd000f200)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09a8]} cellSpurs: cellSpursTaskGetContextSaveAreaSize
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fd08]} cellSpurs: _cellSpursTasksetAttribute2Initialize(attribute=*0xd000f3a0, revision=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursCreateTaskset2(spurs=*0xe72e80, taskset=*0xeddc80, attr=*0xd000f3a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd000ee10, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0xeddc80, priority=*0xd000f3b0, minCnt=0x8, maxCnt=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd000ee10, nameClass=*0x0, nameInstance=*0xce7338)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xe72e80, wid=*0xd000ee08, attr=*0xd000ee10)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0948]} cellSpurs: _cellSpursQueueInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0a08]} cellSpurs: cellSpursQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbe8]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0xeddc80, eventFlag=*0xee0700, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0xee0700)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_event: sys_event_queue_create(equeue_id=*0xd000f208, attr=*0xd000f1e8, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x41, eq=0x54, req=0xffffffffffff0000, spup=*0xd000f200)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09a8]} cellSpurs: cellSpursTaskGetContextSaveAreaSize
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fd08]} cellSpurs: _cellSpursTasksetAttribute2Initialize(attribute=*0xd000f3a0, revision=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursCreateTaskset2(spurs=*0xe72e80, taskset=*0xef1480, attr=*0xd000f3a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd000ee10, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0xef1480, priority=*0xd000f3b0, minCnt=0x8, maxCnt=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd000ee10, nameClass=*0x0, nameInstance=*0xce74a8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xe72e80, wid=*0xd000ee08, attr=*0xd000ee10)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0948]} cellSpurs: _cellSpursQueueInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0a08]} cellSpurs: cellSpursQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbe8]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0xef1480, eventFlag=*0xef3f00, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0xef3f00)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_event: sys_event_queue_create(equeue_id=*0xd000f208, attr=*0xd000f1e8, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x41, eq=0x55, req=0xffffffffffff0000, spup=*0xd000f200)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09a8]} cellSpurs: cellSpursTaskGetContextSaveAreaSize
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fd08]} cellSpurs: _cellSpursTasksetAttribute2Initialize(attribute=*0xd000f3a0, revision=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursCreateTaskset2(spurs=*0xe72e80, taskset=*0xeb8a80, attr=*0xd000f3a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd000ee10, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0xeb8a80, priority=*0xd000f3b0, minCnt=0x8, maxCnt=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd000ee10, nameClass=*0x0, nameInstance=*0xce6c80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xe72e80, wid=*0xd000ee08, attr=*0xd000ee10)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0948]} cellSpurs: _cellSpursQueueInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0a08]} cellSpurs: cellSpursQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbe8]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0xeb8a80, eventFlag=*0xebb500, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0xebb500)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_event: sys_event_queue_create(equeue_id=*0xd000f208, attr=*0xd000f1e8, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x41, eq=0x56, req=0xffffffffffff0000, spup=*0xd000f200)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09a8]} cellSpurs: cellSpursTaskGetContextSaveAreaSize
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2a0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x0077ce88]} sys_memory: sys_memory_allocate(size=0x800000, flags=0x400, alloc_addr=*0xd000f4b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0328]} cellGcmSys: cellGcmMapMainMemory(ea=0x20e00000, size=0x800000, offset=*0xd000f4b4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fd08]} cellSpurs: _cellSpursTasksetAttribute2Initialize(attribute=*0xd000f3c0, revision=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursCreateTaskset2(spurs=*0xe72e80, taskset=*0xeeb400, attr=*0xd000f3c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd000ee30, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0xeeb400, priority=*0xd000f3d0, minCnt=0x8, maxCnt=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd000ee30, nameClass=*0x0, nameInstance=*0xce7348)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbc8]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xe72e80, wid=*0xd000ee28, attr=*0xd000ee30)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x20000, flags=0x200, alloc_addr=*0xd000f040)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0948]} cellSpurs: _cellSpursQueueInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa0a08]} cellSpurs: cellSpursQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fbe8]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0xeeb400, eventFlag=*0xeede80, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0xeede80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_event: sys_event_queue_create(equeue_id=*0xd000f228, attr=*0xd000f208, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fc48]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x41, eq=0x57, req=0xffffffffffff0000, spup=*0xd000f220)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09a8]} cellSpurs: cellSpursTaskGetContextSaveAreaSize
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2c0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2c0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2c0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2c0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0988]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd000f2c0, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00aa09e8]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0xc10000, flags=0x200, alloc_addr=*0xd000f620)
HLE: W {PPU[0x1] Thread (main_thread)[0x0077ce88]} sys_memory: sys_memory_allocate(size=0x1000000, flags=0x400, alloc_addr=*0xd000f7e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0328]} cellGcmSys: cellGcmMapMainMemory(ea=0x22300000, size=0x1000000, offset=*0xd000f7e4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2000f8b0, attr=*0xd000f7c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xeb5b58, entry=0xdfddd8, arg=0x2000f8a0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xeb5b58, param=*0xd000f7b8, arg=0x2000f8a0, unk=0x0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x59)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f390)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f2f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f430)
RSX: W {RSXThread} TODO: NV4097_SET_POINT_PARAMS_ENABLE: 0x1
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0408]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=252706816, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0228]} cellGcmSys: cellGcmBindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0408]} cellGcmSys: cellGcmSetTileInfo(index=1, location=0, offset=256507904, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0228]} cellGcmSys: cellGcmBindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0a28]} cellSysutil: cellVideoOutConfigure(videoOut=0, config=*0xd000f8c4, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0248]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9f8c8]} sys_io: cellPadInit(max_connect=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa28]} cellSysmodule: cellSysmoduleLoadModule(id=0xf035: CELL_SYSMODULE_SYSUTIL_NP_TROPHY)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa07e8]} sceNpTrophy: sceNpTrophyInit(pool=*0x0, poolSize=0x0, containerId=0xffffffff, options=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0888]} sceNpTrophy: sceNpTrophyCreateContext(context=*0xe34744, commId=*0xc1758c, commSign=*0xc17598, options=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0788]} sceNpTrophy: sceNpTrophyCreateHandle(handle=*0xe34748)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20bcd6d0, attr=*0xd000f700)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xd000f9e0, entry=0xdfddd8, arg=0x20bcd6c0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xd000f9e0, param=*0xd000f6f8, arg=0x20bcd6c0, unk=0x0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x5d)
HLE: E {PPU[0x5d] Thread (CThread)[0x00aa07a8]} sceNpTrophy TODO: sceNpTrophyGetRequiredDiskSpace(context=0x5a, handle=0x5b, reqspace=*0xd006bbb0, options=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa04c8]} cellAvconfExt: cellVideoOutSetGamma(videoOut=0, gamma=1.000000)
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x2
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0d88]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0x5c)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} Creating RTT
HLE: W {PPU[0x1] Thread (main_thread)[0x006e6490]} sys_ppu_thread: sys_ppu_thread_detach(thread_id=0x5d)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0c28]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20bcd700, attr=*0xd000f6f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xe3f690, entry=0xdfddd8, arg=0x20bcd6f0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xe3f690, param=*0xd000f6e8, arg=0x20bcd6f0, unk=0x0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0xce2580)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0be8]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x5f)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} TODO: NV4097_SET_TEX_COORD_CONTROL(texMask2D=1, texMaskCentroid=0)
HLE: W {PPU[0x5f] Thread (CThread)[0x00a9fdc8]} cellSysutil: cellSaveDataListAutoLoad(version=0, errDialog=0, setList=*0xd006bb84, setBuf=*0xd006bb94, funcFixed=*0xde59e8, funcStat=*0xde5920, funcFile=*0xde58a0, container=0xffffffff, userdata=*0x0)
RSX: W {RSXThread} VP not found in buffer!
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa04c8]} cellAvconfExt: cellVideoOutSetGamma(videoOut=0, gamma=1.000000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa04c8]} cellAvconfExt: cellVideoOutSetGamma(videoOut=0, gamma=1.000000)
HLE: W {PPU[0x5f] Thread (CThread)[0x00a9fdc8]} cellSysutil: savedata_op(): funcFixed returned < 0.
RSX: W {RSXThread} FP not found in buffer!
HLE: W {PPU[0x1] Thread (main_thread)[0x006e64c4]} sys_ppu_thread: sys_ppu_thread_join(thread_id=0x5f, vptr=*0xd000f860)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa0d88]} sys_lwmutex: _sys_lwmutex_destroy(lwmutex_id=0x5e)
HLE: W {PPU[0x1] Thread (main_thread)[0x006e6490]} sys_ppu_thread: sys_ppu_thread_detach(thread_id=0x5f)
HLE: W {PPU[0x1] Thread (main_thread)[0x00aa04c8]} cellAvconfExt: cellVideoOutSetGamma(videoOut=0, gamma=1.000000)
RSX: W {RSXThread} Add program :
RSX: W {RSXThread} *** vp id = 0
RSX: W {RSXThread} *** fp id = 1
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_POINT_PARAMS_ENABLE: 0x1
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x2
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} Creating RTT
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} TODO: NV4097_SET_TEX_COORD_CONTROL(texMask2D=1, texMaskCentroid=0)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9ff88]} cellGame: cellGameBootCheck(type=*0xd000f6a8, attributes=*0xd000f6a0, size=*0xd000f6b8, dirName=*0xd000f788)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9ff28]} cellGame: cellGameContentPermit(contentInfoPath=*0xd000f928, usrdirPath=*0xd000f8a8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9ff68]} cellGame: cellGameDataCheck(type=3, dirName=*0x20bcd800, size=*0xd000f498)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} cellFs: cellFsOpen(path=*0x20bcd830, flags=0, fd=*0xd000f340, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: sys_fs_open(path=*0x20bcd830, flags=0, fd=*0xd000f340, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/FILEHEADER.TOFHDB'
RSX: W {RSXThread} TODO: NV4097_SET_POINT_PARAMS_ENABLE: 0x1
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x2
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} TODO: NV4097_SET_TEX_COORD_CONTROL(texMask2D=1, texMaskCentroid=0)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_POINT_PARAMS_ENABLE: 0x1
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x2
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_INVALIDATE_L2: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} TODO: NV4097_SET_TEX_COORD_CONTROL(texMask2D=1, texMaskCentroid=0)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9ff28]} cellGame: cellGameContentPermit(contentInfoPath=*0xe4ec80, usrdirPath=*0xe4ed00)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fda8]} cellSysutil: cellMsgDialogClose(delay=0.000000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} cellFs: cellFsOpen(path=*0x20bcd8f0, flags=0, fd=*0xd000f340, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: sys_fs_open(path=*0x20bcd8f0, flags=0, fd=*0xd000f340, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: *** path = '/dev_hdd0/game/BLES01815_INSTALL/USRDIR/FILEHEADER.TOFHDB'
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fda8]} cellSysutil: cellMsgDialogClose(delay=0.000000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9ff68]} cellGame: cellGameDataCheck(type=3, dirName=*0x20bcd800, size=*0xd000f6ac)
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9ff48]} cellGame: cellGameSetParamString
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9ff48]} cellGame: cellGameSetParamString
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9ff48]} cellGame: cellGameSetParamString
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9ff48]} cellGame: cellGameSetParamString
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9ff28]} cellGame: cellGameContentPermit(contentInfoPath=*0xd000f828, usrdirPath=*0xd000f7a8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} cellFs: cellFsStat(path=*0x20bcd8f0, sb=*0xd000f1cc) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} sys_fs: sys_fs_stat(path=*0x20bcd8f0, sb=*0xd000f1cc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} sys_fs: *** path = '/dev_hdd0/game/BLES01815_INSTALL/USRDIR/FILEHEADER.TOFHDB'
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} cellFs: cellFsOpen(path=*0x20bcd8f0, flags=0, fd=*0xd000f1c0, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: sys_fs_open(path=*0x20bcd8f0, flags=0, fd=*0xd000f1c0, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: *** path = '/dev_hdd0/game/BLES01815_INSTALL/USRDIR/FILEHEADER.TOFHDB'
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fb08]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd000f1c4)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a81d8]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd000ee38)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a8214]} sys_memory: sys_memory_container_create(cid=*0xf11540, size=0x5000000)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a8194]} sys_memory: sys_memory_container_get_size(mem_info=*0xd000ee30, cid=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7de4]} sys_memory: sys_memory_allocate_from_container(size=0x720000, cid=0x60, flags=0x200, alloc_addr=*0xd000edd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} cellFs: cellFsStat(path=*0x20bcd8f0, sb=*0xd000f2fc) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} sys_fs: sys_fs_stat(path=*0x20bcd8f0, sb=*0xd000f2fc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} sys_fs: *** path = '/dev_hdd0/game/BLES01815_INSTALL/USRDIR/FILEDATABASELOCAL.TLFDBX'
HLE: E {PPU[0x1] Thread (main_thread)[0x00a9faa8]} sys_fs: sys_fs_stat('/dev_hdd0/game/BLES01815_INSTALL/USRDIR/FILEDATABASELOCAL.TLFDBX') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} cellFs: cellFsStat(path=*0x20bcd8f0, sb=*0xd000f2fc) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} sys_fs: sys_fs_stat(path=*0x20bcd8f0, sb=*0xd000f2fc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} sys_fs: *** path = '/dev_hdd0/game/BLES01815_INSTALL/USRDIR/FILEHEADER.TOFHDB'
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} cellFs: cellFsOpen(path=*0x20bcd8f0, flags=0, fd=*0xd000f2f0, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: sys_fs_open(path=*0x20bcd8f0, flags=0, fd=*0xd000f2f0, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: *** path = '/dev_hdd0/game/BLES01815_INSTALL/USRDIR/FILEHEADER.TOFHDB'
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} cellFs: cellFsStat(path=*0x20bcd8f0, sb=*0xd000f38c) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} sys_fs: sys_fs_stat(path=*0x20bcd8f0, sb=*0xd000f38c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9faa8]} sys_fs: *** path = '/dev_hdd0/game/BLES01815_INSTALL/USRDIR/TLFILE.TLDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} cellFs: cellFsOpen(path=*0x20bcda20, flags=0, fd=*0xd000f380, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: sys_fs_open(path=*0x20bcda20, flags=0, fd=*0xd000f380, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00a9fa88]} sys_fs: *** path = '/dev_hdd0/game/BLES01815_INSTALL/USRDIR/TLFILE.TLDAT'
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7da4]} sys_memory: sys_memory_allocate(size=0x10000, flags=0x200, alloc_addr=*0xd000f550)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a8194]} sys_memory: sys_memory_container_get_size(mem_info=*0xd000f580, cid=0x60)
HLE: W {PPU[0x1] Thread (main_thread)[0x006a7de4]} sys_memory: sys_memory_allocate_from_container(size=0x30000, cid=0x60, flags=0x200, alloc_addr=*0xd000f520)
HLE: E {PPU[0x50] Thread (CThread)[0x00aa00a8]} cellSpurs: _cellSpursLFQueuePushBody
HLE: E {PPU[0x50] Thread (CThread)[0x00aa00a8]} cellSpurs: _cellSpursLFQueuePushBody
HLE: E {PPU[0x50] Thread (CThread)[0x00aa00a8]} cellSpurs: _cellSpursLFQueuePushBody
HLE: W {PPU[0x50] Thread (CThread)[0x00a9fba8]} cellSpurs: cellSpursEventFlagWait(eventFlag=*0xe72d00, mask=*0xd004b9b0, mode=1)
G: ! Stopping emulator...
G: ! All threads signaled...
G: ! {PPU[0x2] Thread (Callback Thread)[0x00000000]} Thread aborted
G: ! {PPU[0x59] Thread (CThread)[0x006e4070]} Thread aborted
G: ! {PPU[0x4b] Thread (SpursTLGraphicsSpursHdlr1)[0x00000000]} Thread aborted
G: ! {VBlank Thread} Thread aborted
G: ! {PPU[0x4e] Thread (CThread)[0x006e6508]} Thread aborted
G: ! {PPU[0x1] Thread (main_thread)[0x006e6508]} Thread aborted
HLE: S {PPU[0x50] Thread (CThread)[0x00a9fba8]} Last function: cellSpursEventFlagWait (0x373523d4)
G: ! {PPU[0x50] Thread (CThread)[0x00a9fba8]} Thread aborted
G: ! {PPU[0x4c] Thread (SpursTLGraphicsSpursHdlr0)[0x00000000]} Thread aborted
G: ! {SPU[0x42] Thread (SpursTLGraphicsCellSpursKernel0)[0x00818]} Thread aborted
G: ! {SPU[0x46] Thread (SpursTLGraphicsCellSpursKernel4)[0x00818]} Thread aborted
G: ! {SPU[0x43] Thread (SpursTLGraphicsCellSpursKernel1)[0x00818]} Thread aborted
G: ! {SPU[0x44] Thread (SpursTLGraphicsCellSpursKernel2)[0x00818]} Thread aborted
G: ! {SPU[0x45] Thread (SpursTLGraphicsCellSpursKernel3)[0x00818]} Thread aborted
G: ! All threads stopped...
G: ! Objects cleared...
