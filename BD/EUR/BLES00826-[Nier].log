LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 v0.0.0.5-2539-g316959f
G: ! 
G: ! Stopping emulator...
LDR: ! Loading 'D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00826-[Nier]/PS3_GAME/USRDIR/BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00826-[Nier]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00826-[Nier]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! Settings:
LDR: ! CPU: PPU Interpreter 2
LDR: ! SPU: SPU Recompiler (ASMJIT)
LDR: ! Renderer: DirectX 12
LDR: ! D3D Adapter: Default
LDR: ! Resolution: 1280x720
LDR: ! Write Depth Buffer: No
LDR: ! Write Color Buffers: No
LDR: ! Read Color Buffer: No
LDR: ! Audio Out: XAudio2
LDR: ! Log Everything: No
LDR: ! RSX Logging: No
LDR: ! 
LDR: ! Title: NIER
LDR: ! Serial: BLES00826
LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x310001
LDR: ! *** primary prio: 1001
LDR: ! *** primary stacksize: 0x80000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0xfaa730)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0xfaa750)
LDR: ! Imported function 'cellAudioSetNotifyEventQueue' in 'cellAudio' module (0xfaba30)
LDR: ! Imported function 'cellAudioGetPortTimestamp' in 'cellAudio' module (0xfaba50)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0xfaba70)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0xfaba90)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0xfabab0)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0xfabad0)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0xfabaf0)
LDR: ! Imported function 'cellAudioGetPortBlockTag' in 'cellAudio' module (0xfabb10)
LDR: ! Imported function 'cellAudioRemoveNotifyEventQueue' in 'cellAudio' module (0xfabb30)
LDR: ! Imported function 'cellFsFtruncate' in 'sys_fs' module (0xfaa770)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0xfaa790)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module (0xfaa7b0)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0xfaa7d0)
LDR: ! Imported function 'cellFsReaddir' in 'sys_fs' module (0xfaa7f0)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0xfaa810)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0xfaa830)
LDR: ! Imported function 'cellFsUnlink' in 'sys_fs' module (0xfaa850)
LDR: ! Imported function 'cellFsFsync' in 'sys_fs' module (0xfaa870)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0xfaa890)
LDR: ! Imported function 'cellFsSdataOpen' in 'sys_fs' module (0xfaa8b0)
LDR: ! Imported function 'cellFsMkdir' in 'sys_fs' module (0xfaa8d0)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0xfaa8f0)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0xfaa910)
LDR: ! Imported function 'cellFsRename' in 'sys_fs' module (0xfaa930)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module (0xfaa950)
LDR: ! Imported function 'cellGcmGetTiledPitchSize' in 'cellGcmSys' module (0xfaa970)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0xfaa990)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0xfaa9b0)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0xfaa9d0)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0xfaa9f0)
LDR: ! Imported function 'cellGcmGetDefaultCommandWordSize' in 'cellGcmSys' module (0xfaaa10)
LDR: ! Imported function 'cellGcmGetFlipStatus' in 'cellGcmSys' module (0xfaaa30)
LDR: ! Imported function 'cellGcmGetDefaultSegmentWordSize' in 'cellGcmSys' module (0xfaaa50)
LDR: ! Imported function 'cellGcmSetDefaultFifoSize' in 'cellGcmSys' module (0xfaaa70)
LDR: ! Imported function 'cellGcmMapMainMemory' in 'cellGcmSys' module (0xfaaa90)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0xfaaab0)
LDR: ! Imported function 'cellGcmSetTileInfo' in 'cellGcmSys' module (0xfaaad0)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0xfaaaf0)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0xfaab10)
LDR: ! Imported function 'cellGcmBindTile' in 'cellGcmSys' module (0xfabb50)
LDR: ! Imported function 'cellGcmBindZcull' in 'cellGcmSys' module (0xfabb70)
LDR: ! Imported function 'cellGcmUnbindZcull' in 'cellGcmSys' module (0xfabb90)
LDR: ! Imported function 'cellGcmUnbindTile' in 'cellGcmSys' module (0xfabbb0)
LDR: ! Imported function 'cellGcmUnmapEaIoAddress' in 'cellGcmSys' module (0xfabbd0)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0xfaab30)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0xfaab50)
LDR: ! Imported function 'cellPadSetPortSetting' in 'sys_io' module (0xfaab70)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0xfaab90)
LDR: ! Imported function 'cellPadGetInfo2' in 'sys_io' module (0xfaabb0)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module (0xfaabd0)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0xfaabf0)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0xfaac10)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0xfaac30)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0xfaac50)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0xfaac70)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0xfaac90)
LDR: ! Imported function 'sys_prx_register_library' in 'sysPrxForUser' module (0xfaacb0)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0xfaacd0)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0xfaacf0)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module (0xfaad10)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0xfaad30)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0xfaad50)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0xfaad70)
LDR: ! Imported function 'sys_spu_image_close' in 'sysPrxForUser' module (0xfaad90)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0xfaadb0)
LDR: ! Imported function 'sys_spu_image_import' in 'sysPrxForUser' module (0xfaadd0)
LDR: ! Imported function '_sys_heap_malloc' in 'sysPrxForUser' module (0xfabbf0)
LDR: ! Imported function '_sys_heap_memalign' in 'sysPrxForUser' module (0xfabc10)
LDR: ! Imported function '_sys_heap_free' in 'sysPrxForUser' module (0xfabc30)
LDR: ! Imported function 'sys_lwmutex_trylock' in 'sysPrxForUser' module (0xfabc50)
LDR: ! Imported function '_sys_heap_delete_heap' in 'sysPrxForUser' module (0xfabc70)
LDR: ! Imported function '_sys_heap_create_heap' in 'sysPrxForUser' module (0xfabc90)
LDR: ! Imported function 'cellRescGcmSurface2RescSrc' in 'cellResc' module (0xfaadf0)
LDR: ! Imported function 'cellRescSetWaitFlip' in 'cellResc' module (0xfaae10)
LDR: ! Imported function 'cellRescSetDsts' in 'cellResc' module (0xfaae30)
LDR: ! Imported function 'cellRescResetFlipStatus' in 'cellResc' module (0xfaae50)
LDR: ! Imported function 'cellRescSetDisplayMode' in 'cellResc' module (0xfaae70)
LDR: ! Imported function 'cellRescSetConvertAndFlip' in 'cellResc' module (0xfaae90)
LDR: ! Imported function 'cellRescInit' in 'cellResc' module (0xfaaeb0)
LDR: ! Imported function 'cellRescGetBufferSize' in 'cellResc' module (0xfaaed0)
LDR: ! Imported function 'cellRescSetSrc' in 'cellResc' module (0xfaaef0)
LDR: ! Imported function 'cellRescSetBufferAddress' in 'cellResc' module (0xfaaf10)
LDR: ! Imported function 'cellRescVideoOutResolutionId2RescBufferMode' in 'cellResc' module (0xfaaf30)
LDR: ! Imported function 'cellRescCreateInterlaceTable' in 'cellResc' module (0xfaaf50)
LDR: ! Imported function 'cellSpursQueueDetachLv2EventQueue' in 'cellSpurs' module (0xfaaf70)
LDR: ! Imported function 'cellSpursAttributeSetNamePrefix' in 'cellSpurs' module (0xfaaf90)
LDR: ! Imported function '_cellSpursQueueInitialize' in 'cellSpurs' module (0xfaafb0)
LDR: ! Imported function '_cellSpursTasksetAttributeInitialize' in 'cellSpurs' module (0xfaafd0)
LDR: ! Imported function 'cellSpursCreateTaskWithAttribute' in 'cellSpurs' module (0xfaaff0)
LDR: ! Imported function 'cellSpursTraceInitialize' in 'cellSpurs' module (0xfab010)
LDR: ! Imported function 'cellSpursTasksetAttributeSetName' in 'cellSpurs' module (0xfab030)
LDR: ! Imported function 'cellSpursQueuePopBody' in 'cellSpurs' module (0xfab050)
LDR: ! Imported function 'cellSpursQueuePushBody' in 'cellSpurs' module (0xfab070)
LDR: ! Imported function '_cellSpursAttributeInitialize' in 'cellSpurs' module (0xfab090)
LDR: ! Imported function 'cellSpursJoinTaskset' in 'cellSpurs' module (0xfab0b0)
LDR: ! Imported function 'cellSpursInitializeWithAttribute' in 'cellSpurs' module (0xfab0d0)
LDR: ! Imported function '_cellSpursTaskAttributeInitialize' in 'cellSpurs' module (0xfab0f0)
LDR: ! Imported function 'cellSpursCreateTasksetWithAttribute' in 'cellSpurs' module (0xfab110)
LDR: ! Imported function 'cellSpursFinalize' in 'cellSpurs' module (0xfab130)
LDR: ! Imported function 'cellSpursTraceStart' in 'cellSpurs' module (0xfab150)
LDR: ! Imported function 'cellSpursQueueAttachLv2EventQueue' in 'cellSpurs' module (0xfab170)
LDR: ! Imported function 'cellSpursEventFlagDetachLv2EventQueue' in 'cellSpurs' module (0xfabcb0)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module (0xfabcd0)
LDR: ! Imported function '_cellSpursEventFlagInitialize' in 'cellSpurs' module (0xfabcf0)
LDR: ! Imported function 'cellSpursEventFlagAttachLv2EventQueue' in 'cellSpurs' module (0xfabd10)
LDR: ! Imported function 'cellSpursShutdownTaskset' in 'cellSpurs' module (0xfabd30)
LDR: ! Imported function 'cellSpursEventFlagSet' in 'cellSpurs' module (0xfabd50)
LDR: ! Imported function 'cellSyncMutexUnlock' in 'cellSync' module (0xfab190)
LDR: ! Imported function 'cellSyncMutexInitialize' in 'cellSync' module (0xfab1b0)
LDR: ! Imported function 'cellSyncMutexTryLock' in 'cellSync' module (0xfab1d0)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0xfab1f0)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0xfab210)
LDR: ! Imported function 'cellSysmoduleIsLoaded' in 'cellSysmodule' module (0xfab230)
LDR: ! Imported function 'cellGameGetParamString' in 'cellGame' module (0xfab250)
LDR: ! Imported function 'cellGameCreateGameData' in 'cellGame' module (0xfab270)
LDR: ! Imported function 'cellGameContentPermit' in 'cellGame' module (0xfab290)
LDR: ! Imported function 'cellGameContentErrorDialog' in 'cellGame' module (0xfab2b0)
LDR: ! Imported function 'cellGameDataCheck' in 'cellGame' module (0xfab2d0)
LDR: ! Imported function 'cellGameBootCheck' in 'cellGame' module (0xfab2f0)
LDR: ! Imported function 'sceNpTrophyRegisterContext' in 'sceNpTrophy' module (0xfab310)
LDR: ! Imported function 'sceNpTrophyCreateHandle' in 'sceNpTrophy' module (0xfab330)
LDR: ! Imported function 'sceNpTrophyGetRequiredDiskSpace' in 'sceNpTrophy' module (0xfab350)
LDR: ! Imported function 'sceNpTrophyDestroyContext' in 'sceNpTrophy' module (0xfab370)
LDR: ! Imported function 'sceNpTrophyInit' in 'sceNpTrophy' module (0xfab390)
LDR: ! Imported function 'sceNpTrophyDestroyHandle' in 'sceNpTrophy' module (0xfab3b0)
LDR: ! Imported function 'sceNpTrophyUnlockTrophy' in 'sceNpTrophy' module (0xfab3d0)
LDR: ! Imported function 'sceNpTrophyTerm' in 'sceNpTrophy' module (0xfab3f0)
LDR: ! Imported function 'sceNpTrophyCreateContext' in 'sceNpTrophy' module (0xfab410)
LDR: ! Imported function 'cellSysutilUnregisterCallback' in 'cellSysutil' module (0xfab430)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0xfab450)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0xfab470)
LDR: ! Imported function 'cellSaveDataListLoad2' in 'cellSysutil' module (0xfab490)
LDR: ! Imported function 'cellSysutilEnableBgmPlayback' in 'cellSysutil' module (0xfab4b0)
LDR: ! Imported function 'cellSaveDataListSave2' in 'cellSysutil' module (0xfab4d0)
LDR: ! Imported function 'cellOskDialogUnloadAsync' in 'cellSysutil' module (0xfab4f0)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0xfab510)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0xfab530)
LDR: ! Imported function 'cellVideoOutGetNumberOfDevice' in 'cellSysutil' module (0xfab550)
LDR: ! Imported function 'cellOskDialogLoadAsync' in 'cellSysutil' module (0xfab570)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0xfab590)
LDR: ! Imported function 'cellSaveDataAutoSave2' in 'cellSysutil' module (0xfab5b0)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0xfab5d0)
LDR: ! Imported function 'cellSysutilEnableBgmPlaybackEx' in 'cellSysutil' module (0xfab5f0)
LDR: ! Imported function 'cellOskDialogSetKeyLayoutOption' in 'cellSysutil' module (0xfab610)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0xfab630)
LDR: ! Imported function 'cellSaveDataFixedDelete' in 'cellSysutil' module (0xfab650)
LDR: ! Imported function 'cellSysutilDisableBgmPlayback' in 'cellSysutil' module (0xfab670)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0xfab690)
LDR: ! Imported function 'cellAudioOutGetConfiguration' in 'cellSysutil' module (0xfab6b0)
LDR: ! Imported function 'cellOskDialogSetLayoutMode' in 'cellSysutil' module (0xfab6d0)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module (0xfab6f0)
LDR: ! Imported function 'cellSaveDataAutoLoad2' in 'cellSysutil' module (0xfab710)
LDR: ! Imported function 'cellRtcGetCurrentClockLocalTime' in 'cellRtc' module (0xfab730)
LDR: ! Imported function 'sceNpTerm' in 'sceNp' module (0xfab750)
LDR: ! Imported function 'sceNpManagerUnregisterCallback' in 'sceNp' module (0xfab770)
LDR: ! Imported function 'sceNpLookupDestroyTitleCtx' in 'sceNp' module (0xfab790)
LDR: ! Imported function 'sceNpBasicSetPresenceDetails2' in 'sceNp' module (0xfab7b0)
LDR: ! Imported function 'sceNpLookupInit' in 'sceNp' module (0xfab7d0)
LDR: ! Imported function 'sceNpManagerGetContentRatingFlag' in 'sceNp' module (0xfab7f0)
LDR: ! Imported function 'sceNpLookupTerm' in 'sceNp' module (0xfab810)
LDR: ! Imported function 'sceNpManagerGetStatus' in 'sceNp' module (0xfab830)
LDR: ! Imported function 'sceNpBasicUnregisterHandler' in 'sceNp' module (0xfab850)
LDR: ! Imported function 'sceNpDrmIsAvailable' in 'sceNp' module (0xfab870)
LDR: ! Imported function 'sceNpBasicRegisterHandler' in 'sceNp' module (0xfab890)
LDR: ! Imported function 'sceNpInit' in 'sceNp' module (0xfab8b0)
LDR: ! Imported function 'sceNpLookupTitleSmallStorage' in 'sceNp' module (0xfab8d0)
LDR: ! Imported function 'sceNpLookupCreateTitleCtx' in 'sceNp' module (0xfab8f0)
LDR: ! Imported function 'sceNpBasicGetEvent' in 'sceNp' module (0xfab910)
LDR: ! Imported function 'sceNpManagerRegisterCallback' in 'sceNp' module (0xfab930)
LDR: ! Imported function 'sceNpLookupCreateTransactionCtx' in 'sceNp' module (0xfab950)
LDR: ! Imported function 'sceNpLookupDestroyTransactionCtx' in 'sceNp' module (0xfab970)
LDR: ! Imported function 'sceNpManagerGetNpId' in 'sceNp' module (0xfab990)
LDR: ! Imported function 'cellSysutilGetLicenseArea' in 'cellSysutilMisc' module (0xfab9b0)
LDR: ! Imported function 'sceNpCommerce2Init' in 'sceNpCommerce2' module (0xfab9d0)
LDR: ! Imported function 'sceNpCommerce2Term' in 'sceNpCommerce2' module (0xfab9f0)
LDR: ! Imported function 'sceNpCommerce2ExecuteStoreBrowse' in 'sceNpCommerce2' module (0xfaba10)
MEM: ! Thread Local Storage initialized (g_tls_start=0x4b67000, user_size=0x1f8)
*** TLS segment addr: 0x011d24dc
*** TLS segment size: 0x00000008
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b12170, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008e279c]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd007fc04)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b11f78, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b11700, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b11728, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b11750, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b11638, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b11660, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b11688, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b116b0, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b116d8, attr=*0x1016fc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b122c0, attr=*0x1203418)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b12280, attr=*0x1203428)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b2bce0, attr=*0xd007fac0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00727020]} sys_memory: sys_memory_allocate(size=0x300000, flags=0x400, alloc_addr=*0xd007f980)
HLE: W {PPU[0x1] Thread (main_thread)[0x0005bd78]} sys_mutex: sys_mutex_create(mutex_id=*0x392370c, attr=*0xd007f8f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0005bd78]} sys_mutex: sys_mutex_create(mutex_id=*0x39444a4, attr=*0xd007f8f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0005bd78]} sys_mutex: sys_mutex_create(mutex_id=*0x39653b4, attr=*0xd007f8f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x003a8710]} sys_mutex: sys_mutex_create(mutex_id=*0x36f1d58, attr=*0xd007faf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0008f058]} sys_mutex: sys_mutex_create(mutex_id=*0x31566cc, attr=*0xd007fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x31566d4, attr=*0xd007fa80, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x31566d8, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x16, equeue_id=0x15)
HLE: W {PPU[0x1] Thread (main_thread)[0x000514e8]} sys_mutex: sys_mutex_create(mutex_id=*0x3152280, attr=*0xd007fa50)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x31539ec, attr=*0xd007f910, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x31539f0, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x19, equeue_id=0x18)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x2f45ba4, attr=*0xd007faa0, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x2f45ba8, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x1b, equeue_id=0x1a)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x12ae980, attr=*0xd007fa50, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x12ae984, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x1d, equeue_id=0x1c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0003c5d4]} sys_mutex: sys_mutex_create(mutex_id=*0x12ae98c, attr=*0xd007fb00)
HLE: W {PPU[0x1] Thread (main_thread)[0x00016ab4]} sys_mutex: sys_mutex_create(mutex_id=*0x1220578, attr=*0xd007fb00)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x1220580, attr=*0xd007fa50, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x1220584, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x21, equeue_id=0x20)
HLE: W {PPU[0x1] Thread (main_thread)[0x00016ab4]} sys_mutex: sys_mutex_create(mutex_id=*0x122a9e0, attr=*0xd007fb00)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x122a9e8, attr=*0xd007fa50, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x122a9ec, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x24, equeue_id=0x23)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x121f4e0, attr=*0xd007fab0, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x121f4e4, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x26, equeue_id=0x25)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x121f4ec, attr=*0xd007fab0, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x121f4f0, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x28, equeue_id=0x27)
HLE: W {PPU[0x1] Thread (main_thread)[0x00710c0c]} sys_spu: sys_spu_initialize(max_usable_spu=6, max_raw_spu=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab210]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab210]} cellSysmodule: cellSysmoduleLoadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x008e1104]} sys_memory: sys_memory_allocate(size=0x200000, flags=0x400, alloc_addr=*0xd007f5e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa4058, attr=*0xd007f620)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa5268, attr=*0xd007f360)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8e4]} sys_mutex: sys_mutex_create(mutex_id=*0x4aa52e4, attr=*0xd007f3d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea918]} sys_cond: sys_cond_create(cond_id=*0x4aa52e0, mutex_id=0x2b, attr=*0xd007f3c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4aa5368, entry=0x11bffc8, arg=0x4aa5358, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4aa5368, param=*0xd007f2e8, arg=0x4aa5358, unk=0x0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x2d)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa53c0, attr=*0xd007f360)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8e4]} sys_mutex: sys_mutex_create(mutex_id=*0x4aa543c, attr=*0xd007f3d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea918]} sys_cond: sys_cond_create(cond_id=*0x4aa5438, mutex_id=0x2f, attr=*0xd007f3c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4aa54c0, entry=0x11bffc8, arg=0x4aa54b0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4aa54c0, param=*0xd007f2e8, arg=0x4aa54b0, unk=0x0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x31)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa5518, attr=*0xd007f360)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8e4]} sys_mutex: sys_mutex_create(mutex_id=*0x4aa5594, attr=*0xd007f3d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea918]} sys_cond: sys_cond_create(cond_id=*0x4aa5590, mutex_id=0x33, attr=*0xd007f3c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4aa5618, entry=0x11bffc8, arg=0x4aa5608, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4aa5618, param=*0xd007f2e8, arg=0x4aa5608, unk=0x0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x35)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa5670, attr=*0xd007f360)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8e4]} sys_mutex: sys_mutex_create(mutex_id=*0x4aa56ec, attr=*0xd007f3d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea918]} sys_cond: sys_cond_create(cond_id=*0x4aa56e8, mutex_id=0x37, attr=*0xd007f3c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4aa5770, entry=0x11bffc8, arg=0x4aa5760, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4aa5770, param=*0xd007f2e8, arg=0x4aa5760, unk=0x0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x39)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa57c8, attr=*0xd007f360)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8e4]} sys_mutex: sys_mutex_create(mutex_id=*0x4aa5844, attr=*0xd007f3d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea918]} sys_cond: sys_cond_create(cond_id=*0x4aa5840, mutex_id=0x3b, attr=*0xd007f3c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4aa58c8, entry=0x11bffc8, arg=0x4aa58b8, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4aa58c8, param=*0xd007f2e8, arg=0x4aa58b8, unk=0x0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x3d)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa5098, attr=*0xd007f380)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8e4]} sys_mutex: sys_mutex_create(mutex_id=*0x4aa5114, attr=*0xd007f3f8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea918]} sys_cond: sys_cond_create(cond_id=*0x4aa5110, mutex_id=0x3f, attr=*0xd007f3e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4aa5198, entry=0x11bffc8, arg=0x4aa5188, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4aa5198, param=*0xd007f308, arg=0x4aa5188, unk=0x0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x41)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20300068, attr=*0xd007f470)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x203003e8, attr=*0xd007f430)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20302ef0, attr=*0xd007f430)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa4df8, attr=*0xd007f4d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa4e40, attr=*0xd007f4d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa4e88, attr=*0xd007f4d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4aa4ed0, attr=*0xd007f4d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2030c110, attr=*0xd007f460)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2030e490, attr=*0xd007f450)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x203102d0, attr=*0xd007f490)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8e4]} sys_mutex: sys_mutex_create(mutex_id=*0x2031031c, attr=*0xd007f478)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea918]} sys_cond: sys_cond_create(cond_id=*0x20310318, mutex_id=0x4c, attr=*0xd007f460)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x203103a0, entry=0x11bffc8, arg=0x20310390, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x203103a0, param=*0xd007f388, arg=0x20310390, unk=0x0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104cd80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x4e)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20310410, attr=*0xd007f400)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab2f0]} cellGame: cellGameBootCheck(type=*0xd007f810, attributes=*0xd007f814, size=*0xd007f818, dirName=*0xd007f838)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab250]} cellGame: cellGameGetParamString(id=0, buf=*0xd007f858, bufsize=128)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab250]} cellGame: cellGameGetParamString(id=100, buf=*0xd007f828, bufsize=16)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab290]} cellGame: cellGameContentPermit(contentInfoPath=*0xd007f8d8, usrdirPath=*0xd007f958)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x31534a0, entry=0x11b89f8, arg=0x3153498, prio=1000, stacksize=0x10000, flags=0x0, threadname=*0x31534ac)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x31534a0, param=*0xd007f908, arg=0x3153498, unk=0x0, prio=1000, stacksize=0x10000, flags=0x0, threadname=*0x31534ac)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x50)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x3149be8, entry=0x11b89f8, arg=0x3149be0, prio=1000, stacksize=0x10000, flags=0x0, threadname=*0x3149bf4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x3149be8, param=*0xd007f998, arg=0x3149be0, unk=0x0, prio=1000, stacksize=0x10000, flags=0x0, threadname=*0x3149bf4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x51)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x2f45878, entry=0x11b89f8, arg=0x2f45870, prio=1000, stacksize=0x8000, flags=0x0, threadname=*0x2f45884)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x2f45878, param=*0xd007f8f8, arg=0x2f45870, unk=0x0, prio=1000, stacksize=0x8000, flags=0x0, threadname=*0x2f45884)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x52)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab2d0]} cellGame: cellGameDataCheck(type=3, dirName=*0x11ec038, size=*0xd007f5f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab2d0]} cellGame: cellGameDataCheck(): '/dev_hdd0/game/BLES00826DATA' directory not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab290]} cellGame: cellGameContentPermit(contentInfoPath=*0xd007f680, usrdirPath=*0xd007f600)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1a0, sb=*0xd007f0e0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1a0, sb=*0xd007f0e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE.SDAT'
HLE: ! {PPU[0x35] Thread (CriThread)[0x00faa8b0]} cellFs: cellFsSdataOpen(path=*0x20303058, flags=0, fd=*0x203000b0, arg=*0x0, size=0x0)
HLE: W {PPU[0x35] Thread (CriThread)[0x00faa8b0]} cellFs: cellFsOpen(path=*0x20303058, flags=0, fd=*0x203000b0, arg=*0xd00a77c8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x35] Thread (CriThread)[0x00faa8b0]} sys_fs: sys_fs_open(path=*0x20303058, flags=0, fd=*0x203000b0, mode=0, arg=*0xd00a77c8, size=0x8)
HLE: W {PPU[0x35] Thread (CriThread)[0x00faa8b0]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE.SDAT'
HLE: W {PPU[0x35] Thread (CriThread)[0x00faa910]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00a7850)
HLE: ! {PPU[0x35] Thread (CriThread)[0x00faa8b0]} cellFs: cellFsSdataOpen(path=*0x20303058, flags=0, fd=*0x203000b0, arg=*0x0, size=0x0)
HLE: W {PPU[0x35] Thread (CriThread)[0x00faa8b0]} cellFs: cellFsOpen(path=*0x20303058, flags=0, fd=*0x203000b0, arg=*0xd00a77c8, size=0x8) -> sys_fs_open()
HLE: W {PPU[0x35] Thread (CriThread)[0x00faa8b0]} sys_fs: sys_fs_open(path=*0x20303058, flags=0, fd=*0x203000b0, mode=0, arg=*0xd00a77c8, size=0x8)
HLE: W {PPU[0x35] Thread (CriThread)[0x00faa8b0]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE.SDAT'
HLE: W {PPU[0x35] Thread (CriThread)[0x00faa910]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00a7850)
HLE: W {PPU[0x1] Thread (main_thread)[0x00729e04]} sys_mutex: sys_mutex_create(mutex_id=*0x4a5e1f8, attr=*0xd007f950)
HLE: W {PPU[0x1] Thread (main_thread)[0x0073d0e4]} sys_mutex: sys_mutex_create(mutex_id=*0x4a64068, attr=*0xd007f950)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x4aa32d8, attr=*0xd007f8a0, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x4aa32dc, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x56, equeue_id=0x55)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x4aa32e4, attr=*0xd007f8a0, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x4aa32e8, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x58, equeue_id=0x57)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x4aa32f0, attr=*0xd007f8a0, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x4aa32f4, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x5a, equeue_id=0x59)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x4aa32fc, attr=*0xd007f8a0, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x4aa3300, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x5c, equeue_id=0x5b)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab210]} cellSysmodule: cellSysmoduleLoadModule(id=0x001f: CELL_SYSMODULE_RESC)
HLE: W {PPU[0x1] Thread (main_thread)[0x008e1104]} sys_memory: sys_memory_allocate(size=0x7600000, flags=0x400, alloc_addr=*0xd007f620)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa990]} cellGcmSys: _cellGcmInitBody(context=**0x4b0fa30, cmdSize=0x300000, ioSize=0x7400000, ioAddress=0x20500000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa990]} cellGcmSys: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa990]} cellGcmSys: cellGcmInit(): 256MB io address space used
RSX: ! {RSXThread} RSX thread started
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab450]} cellSysutil: cellVideoOutConfigure(videoOut=0, config=*0xd007f848, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa9f0]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab5d0]} cellSysutil: cellSysutilRegisterCallback(slot=0, func=*0x11b9528, userdata=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaa90]} cellGcmSys: cellGcmMapMainMemory(ea=0x20800000, size=0x700000, offset=*0xd007f740)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=1, location=0, offset=44367872, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=2, location=0, offset=40501248, size=3801088, pitch=5120, comp=10, base=0, bank=1)
HLE: E {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb70]} cellGcmSys: cellGcmBindZcull(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaeb0]} cellResc: cellRescInit(initConfig=*0xd007f610)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faae70]} cellResc: cellRescSetDisplayMode(displayMode=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faae70]} cellSysutil: cellVideoOutConfigure(videoOut=0, config=*0xd007f550, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faae70]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaed0]} cellResc: cellRescGetBufferSize(colorBuffers=*0xd007f5d8, vertexArray=*0xd007f5d4, fragmentShader=*0xd007f5d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=32571392, size=7864320, pitch=5120, comp=0, base=497, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaf10]} cellResc: cellRescSetBufferAddress(colorBuffers=*0xc1f10000, vertexArray=*0xc1f06780, fragmentShader=*0xc1f06400)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaf50]} cellResc: cellRescCreateInterlaceTable(ea_addr=0xc1f06180, srcH=720.000000, depth=639, length=1)
HLE: E {PPU[0x1] Thread (main_thread)[0x00faaf50]} cellResc: cellRescCreateInterlaceTable : CELL_RESC_ERROR_NOT_INITIALIZED
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4aa3488, entry=0x11b89f8, arg=0x4aa3480, prio=1000, stacksize=0x8000, flags=0x0, threadname=*0x4aa3494)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4aa3488, param=*0xd007f748, arg=0x4aa3480, unk=0x0, prio=1000, stacksize=0x8000, flags=0x0, threadname=*0x4aa3494)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x5d)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab210]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=3, location=0, offset=28704768, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=4, location=0, offset=24838144, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=5, location=0, offset=23265280, size=65536, pitch=512, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=5)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=6, location=0, offset=19005440, size=4194304, pitch=4096, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=6)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=7, location=0, offset=14745600, size=4194304, pitch=4096, comp=10, base=0, bank=1)
HLE: E {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb70]} cellGcmSys: cellGcmBindZcull(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=8, location=0, offset=13697024, size=983040, pitch=2560, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=9, location=0, offset=12648448, size=983040, pitch=2560, comp=10, base=0, bank=1)
HLE: E {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=9)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb70]} cellGcmSys: cellGcmBindZcull(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00742580]} sys_mutex: sys_mutex_create(mutex_id=*0x4aa1168, attr=*0xd007f940)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x4aa2dbc, attr=*0xd007f890, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x4aa2dc0, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x60, equeue_id=0x5f)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x4aa2dc8, attr=*0xd007f890, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x4aa2dcc, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x62, equeue_id=0x61)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f41dc]} sys_event: sys_event_queue_create(equeue_id=*0x4aa2dd4, attr=*0xd007f890, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f422c]} sys_event: sys_event_port_create(eport_id=*0x4aa2dd8, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x008f4274]} sys_event: sys_event_port_connect_local(eport_id=0x64, equeue_id=0x63)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4aa2d88, entry=0x11b89f8, arg=0x4aa2d80, prio=1000, stacksize=0x40000, flags=0x0, threadname=*0x4aa2d94)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4aa2d88, param=*0xd007f878, arg=0x4aa2d80, unk=0x0, prio=1000, stacksize=0x40000, flags=0x0, threadname=*0x4aa2d94)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x65)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4aa2f48, entry=0x11b89f8, arg=0x4aa2f40, prio=1500, stacksize=0x100000, flags=0x0, threadname=*0x4aa2f54)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4aa2f48, param=*0xd007f7d8, arg=0x4aa2f40, unk=0x0, prio=1500, stacksize=0x100000, flags=0x0, threadname=*0x4aa2f54)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x66)
HLE: W {PPU[0x66] Thread (cglu_render)[0x00faae10]} cellResc: cellRescSetWaitFlip()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x1220548, entry=0x11b89f8, arg=0x1220540, prio=1000, stacksize=0x40000, flags=0x0, threadname=*0x1220554)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x1220548, param=*0xd007fa38, arg=0x1220540, unk=0x0, prio=1000, stacksize=0x40000, flags=0x0, threadname=*0x1220554)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x67)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x122a9b0, entry=0x11b89f8, arg=0x122a9a8, prio=1000, stacksize=0x40000, flags=0x0, threadname=*0x122a9bc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x122a9b0, param=*0xd007fa38, arg=0x122a9a8, unk=0x0, prio=1000, stacksize=0x40000, flags=0x0, threadname=*0x122a9bc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x68)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab510]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd007fa90)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faab30]} sys_io: cellPadInit(max_connect=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab090]} cellSpurs: _cellSpursAttributeInitialize(attr=*0xd007f7b8, revision=2, sdkVersion=0x310000, nSpus=1, spuPriority=100, ppuPriority=1000, exitIfNoWork=2882560)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} cellSpurs: cellSpursInitializeWithAttribute(spurs=*0x1750f80, attr=*0xd007f7b8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0x1750f80, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_semaphore: sys_semaphore_create(sem_id=*0xd007f678, attr=*0xd007f658, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_spu: sys_spu_thread_group_create(id=*0xd007f638, num=1, prio=100, attr=*0xd007f5a8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_spu: sys_spu_thread_initialize(thread=*0xd007f580, group=0x7a, spu_num=0, img=*0x1751cf0, attr=*0xd007f570, arg=*0xd007f588)
HLE: E {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1751d30, attr=*0xd007f640)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sysPrxForUser: sys_lwcond_create(lwcond=*0x1751d48, lwmutex=*0x1751d30, attr=*0xd007f650)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_event: sys_event_queue_create(equeue_id=*0x1751cdc, attr=*0xd007f4d8, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x7a, eq=0x7e, req=0xffffffffffff0000, spup=*0x1751049)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_event: sys_event_port_create(eport_id=*0x1751ce0, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_event: sys_event_port_connect_local(eport_id=0x7f, equeue_id=0x7e)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0x1750f80, flag=1)
HLE: W {PPU[0x81] Thread (SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_start(id=0x7a)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab0d0]} sys_spu: sys_spu_thread_group_connect_event(id=0x7a, eq=0x7e, et=2)
SPU: S {PPU[0x81] Thread (SpursHdlr0)[0x00000000]} SPU Database initialized...
SPU: S {PPU[0x81] Thread (SpursHdlr0)[0x00000000]} SPU Recompiler (ASMJIT) created...
HLE: W {PPU[0x81] Thread (SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0x7a, cause=*0x0, status=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1752060, attr=*0xd007f320)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x17520b0, attr=*0xd007f320)
SPU: S {SPU[0x7b] Thread (CellSpursKernel0)[0x00818]} Function detected [0x00818-0x00820] (size=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea8e4]} sys_mutex: sys_mutex_create(mutex_id=*0x1775184, attr=*0xd007f188)
HLE: W {PPU[0x1] Thread (main_thread)[0x007ea918]} sys_cond: sys_cond_create(cond_id=*0x1775180, mutex_id=0x84, attr=*0xd007f170)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x1775210, entry=0x11bffc8, arg=0x1775200, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104add8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x1775210, param=*0xd007f098, arg=0x1775200, unk=0x0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104add8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x86)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x17752a0, entry=0x11bffc8, arg=0x1775290, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104adf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x17752a0, param=*0xd007f098, arg=0x1775290, unk=0x0, prio=800, stacksize=0x8000, flags=0x1, threadname=*0x104adf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x87)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faafd0]} cellSpurs: _cellSpursTasksetAttributeInitialize(attribute=*0xd007f130, revision=1, skd_version=0x310000, args=0x0, priority=*0x177d290, max_contention=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab030]} cellSpurs: cellSpursTasksetAttributeSetName(attr=*0xd007f130, name=*0x10493a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab110]} cellSpurs: cellSpursCreateTasksetWithAttribute(spurs=*0x1750f80, taskset=*0x1785980, attr=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab110]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd007eec0, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x1785980, priority=*0xd007f140, minCnt=0x8, maxCnt=0x1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab110]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd007eec0, nameClass=*0x0, nameInstance=*0x10493a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab110]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0x1750f80, wid=*0xd007eeb8, attr=*0xd007eec0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00faafb0]} cellSpurs: _cellSpursQueueInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x00fab170]} cellSpurs: cellSpursQueueAttachLv2EventQueue
HLE: E {PPU[0x1] Thread (main_thread)[0x00faafb0]} cellSpurs: _cellSpursQueueInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x00fab170]} cellSpurs: cellSpursQueueAttachLv2EventQueue
HLE: E {PPU[0x1] Thread (main_thread)[0x00fab0f0]} cellSpurs: _cellSpursTaskAttributeInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x00faaff0]} cellSpurs: cellSpursCreateTaskWithAttribute
HLE: E {PPU[0x1] Thread (main_thread)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2f45848, attr=*0xd007f650)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab630]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=0, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab630]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=1, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab630]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=6, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab6b0]} cellSysutil: cellAudioOutGetConfiguration(audioOut=0, config=*0xd007f590, option=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa730]} cellAudio: cellAudioInit()
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabc90]} sysPrxForUser: _sys_heap_create_heap(name=*0x105b800, arg2=0x20000, arg3=0x110000, arg4=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabc10]} sysPrxForUser: _sys_heap_memalign(heap=0x89, align=0x10, size=0x1080)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4e00640, attr=*0x4e00658)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabc10]} sysPrxForUser: _sys_heap_memalign(heap=0x89, align=0x10, size=0x8280)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a0278]} sys_mutex: sys_mutex_create(mutex_id=*0x4e003e0, attr=*0x4e003e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a029c]} sys_cond: sys_cond_create(cond_id=*0x4e003c0, mutex_id=0x8b, attr=*0x4e003c8)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a0328]} sys_mutex: sys_mutex_create(mutex_id=*0x4e00430, attr=*0x4e00438)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a034c]} sys_cond: sys_cond_create(cond_id=*0x4e00414, mutex_id=0x8d, attr=*0x4e00418)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a03d0]} sys_mutex: sys_mutex_create(mutex_id=*0x4e00688, attr=*0x4e00690)
HLE: W {PPU[0x1] Thread (main_thread)[0x008a03f4]} sys_cond: sys_cond_create(cond_id=*0x4e00668, mutex_id=0x8f, attr=*0x4e00670)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4e003b0, entry=0x11c8a88, arg=0x4b0ff50, prio=402, stacksize=0x4000, flags=0x0, threadname=*0x105b7e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4e003b0, param=*0xd007f468, arg=0x4b0ff50, unk=0x0, prio=402, stacksize=0x4000, flags=0x0, threadname=*0x105b7e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x91)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b0ff88, attr=*0x4b0ffa8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b0ff60, attr=*0x4b0ffb8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x4b0ffc8, entry=0x11c8b48, arg=0x0, prio=400, stacksize=0x8000, flags=0x0, threadname=*0x105b820)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x4b0ffc8, param=*0xd007f528, arg=0x0, unk=0x0, prio=400, stacksize=0x8000, flags=0x0, threadname=*0x105b820)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x94)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac70]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x4b0fab0, attr=*0x4b0ffd4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabaf0]} cellAudio: cellAudioPortOpen(audioParam=*0x4b0ffe8, portNum=*0x4b0ff58)
HLE: W {PPU[0x94] Thread (_cellsurMixerMain)[0x008a263c]} sys_event: sys_event_queue_create(equeue_id=*0x4b0ffa4, attr=*0x4b11050, event_queue_key=0x8000cafe02460300, size=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabaf0]} cellAudio: *** audio port opened(nChannel=8, nBlock=8, attr=0x0, level=1.000000): port = 0
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabab0]} cellAudio: cellAudioGetPortConfig(portNum=0, portConfig=*0x4b10008)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabad0]} cellAudio: cellAudioPortStart(portNum=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faba30]} cellAudio: cellAudioSetNotifyEventQueue(key=0x8000cafe02460300)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab630]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=0, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab630]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=1, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab630]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=6, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab5f0]} cellSysutil: cellSysutilEnableBgmPlaybackEx(param=*0xd007f6f4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x12a48a8, entry=0x11b89f8, arg=0x12a48a0, prio=1000, stacksize=0x8000, flags=0x0, threadname=*0x12a48b4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x12a48a8, param=*0xd007f608, arg=0x12a48a0, unk=0x0, prio=1000, stacksize=0x8000, flags=0x0, threadname=*0x12a48b4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x97)
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab070]} cellSpurs: cellSpursQueuePushBody
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/FONT/FONT_MAIN.PS3.BIN'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/FONT/FONT_MAIN.PS3.BIN') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/FONT/FONT_MAIN.PS3.BIN'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/FONT/FONT_MAIN.PS3.BIN') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/FONT/FONT_MAIN.PS3.BIN'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/FONT/FONT_MAIN.PS3.BIN') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab070]} cellSpurs: cellSpursQueuePushBody
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/FONT/FONT_MAIN.PS3.BIN'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/FONT/FONT_MAIN.PS3.BIN') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=10, location=0, offset=8257536, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=11, location=0, offset=4390912, size=3801088, pitch=5120, comp=0, base=0, bank=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=11)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb70]} cellGcmSys: cellGcmBindZcull(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=12, location=0, offset=3342336, size=983040, pitch=2560, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=12)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo(index=13, location=0, offset=2293760, size=983040, pitch=2560, comp=10, base=0, bank=1)
HLE: E {PPU[0x1] Thread (main_thread)[0x00faaad0]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb50]} cellGcmSys: cellGcmBindTile(index=13)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fabb70]} cellGcmSys: cellGcmBindZcull(index=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007efd0, sb=*0xd007ef10) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007efd0, sb=*0xd007ef10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/TEXT/NIER_TEXT.TXD'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/TEXT/NIER_TEXT.TXD') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007efd0, sb=*0xd007ef10) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007efd0, sb=*0xd007ef10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/TEXT/NIER_TEXT.TXD'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/TEXT/NIER_TEXT.TXD') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007d280, sb=*0xd007d1c0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007d280, sb=*0xd007d1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/TEXT/TALK_TEXT/TALKER_NAME.PS3.TND'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/TEXT/TALK_TEXT/TALKER_NAME.PS3.TND') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007d280, sb=*0xd007d1c0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007d280, sb=*0xd007d1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/TEXT/TALK_TEXT/TALKER_NAME.PS3.TND'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/TEXT/TALK_TEXT/TALKER_NAME.PS3.TND') failed: not found
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab070]} cellSpurs: cellSpursQueuePushBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab070]} cellSpurs: cellSpursQueuePushBody
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_2000_A0142_NIER030.FR.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_2000_A0142_NIER030.FR.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_2000_A0142_NIER030.FR.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_2000_A0142_NIER030.FR.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_2000_A0142_NIER030.FR.PS3.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_2000_A0142_NIER030.FR.PS3.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_2000_A0142_NIER030.FR.PS3.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_2000_A0142_NIER030.FR.PS3.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_4430_A0090_NIER030.FR.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_4430_A0090_NIER030.FR.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_4430_A0090_NIER030.FR.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_4430_A0090_NIER030.FR.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_4430_A0090_NIER030.FR.PS3.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_4430_A0090_NIER030.FR.PS3.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_4430_A0090_NIER030.FR.PS3.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_4430_A0090_NIER030.FR.PS3.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_6000_A0130_NIER030.FR.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_6000_A0130_NIER030.FR.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_6000_A0130_NIER030.FR.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_6000_A0130_NIER030.FR.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_6000_A0130_NIER030.FR.PS3.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/EID_6000_A0130_NIER030.FR.PS3.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_6000_A0130_NIER030.FR.PS3.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/EID_6000_A0130_NIER030.FR.PS3.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/TITLE_NIER_ALL.FR.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/TITLE_NIER_ALL.FR.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/TITLE_NIER_ALL.FR.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/TITLE_NIER_ALL.FR.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/TITLE_NIER_ALL.FR.PS3.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/EVENT/CAPTION/TITLE_NIER_ALL.FR.PS3.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007adf0, sb=*0xd007ad30) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007adf0, sb=*0xd007ad30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/TITLE_NIER_ALL.FR.PS3.CAP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/EVENT/CAPTION/TITLE_NIER_ALL.FR.PS3.CAP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007c5e0, sb=*0xd007c520) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007c5e0, sb=*0xd007c520)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/2D/SYSTEM_FR.2DP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/2D/SYSTEM_FR.2DP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007c5e0, sb=*0xd007c520) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007c5e0, sb=*0xd007c520)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/2D/SYSTEM_FR.2DP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/2D/SYSTEM_FR.2DP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007c5e0, sb=*0xd007c520) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007c5e0, sb=*0xd007c520)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/2D/SYSTEM_FR.2DV'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/2D/SYSTEM_FR.2DV') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007c5e0, sb=*0xd007c520) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007c5e0, sb=*0xd007c520)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/2D/SYSTEM_FR.2DV'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/2D/SYSTEM_FR.2DV') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007c5e0, sb=*0xd007c520) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007c5e0, sb=*0xd007c520)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/2D/SYSTEM.2DP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/2D/SYSTEM.2DP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007c5e0, sb=*0xd007c520) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007c5e0, sb=*0xd007c520)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/2D/SYSTEM.2DP'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/2D/SYSTEM.2DP') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007c5e0, sb=*0xd007c520) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007c5e0, sb=*0xd007c520)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/2D/SYSTEM.2DV'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/2D/SYSTEM.2DV') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007c5e0, sb=*0xd007c520) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007c5e0, sb=*0xd007c520)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/2D/SYSTEM.2DV'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/2D/SYSTEM.2DV') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab5d0]} cellSysutil: cellSysutilRegisterCallback(slot=1, func=*0x11534e8, userdata=*0x3308c80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab230]} cellSysmodule: cellSysmoduleIsLoaded(id=0x0009: CELL_SYSMODULE_RTC)
HLE: E {PPU[0x1] Thread (main_thread)[0x00fab230]} cellSysmodule: cellSysmoduleIsLoaded() failed: module not loaded (id=0x0009)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab210]} cellSysmodule: cellSysmoduleLoadModule(id=0x0009: CELL_SYSMODULE_RTC)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab210]} cellSysmodule: cellSysmoduleLoadModule(id=0x0016: CELL_SYSMODULE_SYSUTIL_NP)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab8b0]} sceNp: sceNpInit(poolsize=0x20000, poolptr=*0x32e8620)
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x1] Thread (main_thread)[0x00fab930]} sceNp: sceNpManagerRegisterCallback
HLE: E {PPU[0x1] Thread (main_thread)[0x00fab890]} sceNp: sceNpBasicRegisterHandler
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab830]} sceNp: sceNpManagerGetStatus(status=*0xd007f9f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x31567e8, entry=0x11b89f8, arg=0x31567e0, prio=1000, stacksize=0x8000, flags=0x0, threadname=*0x31567f4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x31567e8, param=*0xd007f848, arg=0x31567e0, unk=0x0, prio=1000, stacksize=0x8000, flags=0x0, threadname=*0x31567f4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x98)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab210]} cellSysmodule: cellSysmoduleLoadModule(id=0xf035: CELL_SYSMODULE_SYSUTIL_NP_TROPHY)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab390]} sceNpTrophy: sceNpTrophyInit(pool=*0x0, poolSize=0x0, containerId=0xffffffff, options=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab410]} sceNpTrophy: sceNpTrophyCreateContext(context=*0x3156378, commId=*0xfc0630, commSign=*0xfc063c, options=0x0)
HLE: W {PPU[0x98] Thread (CSaveDataLib)[0x00fab490]} cellSysutil: cellSaveDataListLoad2(version=0, setList=*0xd02efce0, setBuf=*0xd02efcf0, funcList=*0x1151560, funcStat=*0x0, funcFile=*0x0, container=0xffffffff, userdata=*0x3156778)
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: W {PPU[0x50] Thread (CtDev)[0x00fab2d0]} cellGame: cellGameDataCheck(type=3, dirName=*0x11ec028, size=*0xd00d78b0)
HLE: W {PPU[0x50] Thread (CtDev)[0x00fab2d0]} cellGame: cellGameDataCheck(): '/dev_hdd0/game/BLES00826' directory not found
HLE: W {PPU[0x50] Thread (CtDev)[0x00fab290]} cellGame: cellGameContentPermit(contentInfoPath=*0xd00d7998, usrdirPath=*0xd00d7918)
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab330]} sceNpTrophy: sceNpTrophyCreateHandle(handle=*0x315637c)
HLE: E {PPU[0x1] Thread (main_thread)[0x00fab350]} sceNpTrophy TODO: sceNpTrophyGetRequiredDiskSpace(context=0x99, handle=0x9a, reqspace=*0xd007f950, options=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f240, sb=*0xd007f180) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f240, sb=*0xd007f180)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/ICON0.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/ICON0.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f240, sb=*0xd007f180) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f240, sb=*0xd007f180)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/ICON0.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/ICON0.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f240, sb=*0xd007f180) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f240, sb=*0xd007f180)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/PIC1.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/PIC1.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f240, sb=*0xd007f180) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f240, sb=*0xd007f180)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/PIC1.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/PIC1.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f240, sb=*0xd007f180) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f240, sb=*0xd007f180)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/ICON0.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/ICON0.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f240, sb=*0xd007f180) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f240, sb=*0xd007f180)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/ICON0.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/ICON0.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f240, sb=*0xd007f180) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f240, sb=*0xd007f180)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/PIC1.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/PIC1.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f240, sb=*0xd007f180) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f240, sb=*0xd007f180)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/PIC1.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/PIC1.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x3156340, entry=0x11b89f8, arg=0x3156338, prio=1000, stacksize=0x2000, flags=0x0, threadname=*0x315634c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x3156340, param=*0xd007f918, arg=0x3156338, unk=0x0, prio=1000, stacksize=0x2000, flags=0x0, threadname=*0x315634c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x9b)
HLE: E {PPU[0x9b] Thread (CAchieveMan)[0x00fab310]} sceNpTrophy: sceNpTrophyRegisterContext(context=0x99, handle=0x9a, statusCb=*0x1151118, arg=*0x3156370, options=0x1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/NIER_BGM.CPK'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/NIER_BGM.CPK') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/NIER_BGM.CPK'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/NIER_BGM.CPK') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/NIER_VOICE_ENG.CPK'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/NIER_VOICE_ENG.CPK') failed: not found
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/NIER_VOICE_ENG.CPK'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/NIER_VOICE_ENG.CPK') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/NIER_MA_ENG.CPK'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/NIER_MA_ENG.CPK') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/NIER_MA_ENG.CPK'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/NIER_MA_ENG.CPK') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/SE/NIER_SE_SYS.CSB'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/SE/NIER_SE_SYS.CSB') failed: not found
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/SE/NIER_SE_SYS.CSB'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/SE/NIER_SE_SYS.CSB') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/SE/NIER_SE_PC.CSB'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/AUDIO/SE/NIER_SE_PC.CSB') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f1f0, sb=*0xd007f130) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f1f0, sb=*0xd007f130)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/SE/NIER_SE_PC.CSB'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/AUDIO/SE/NIER_SE_PC.CSB') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/ICON0.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/ICON0.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/ICON0.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/ICON0.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/PIC1.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/PIC1.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/PIC1.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/PIC1.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/ICON0.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/ICON0.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/ICON0.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/ICON0.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/PIC1.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/ICON/SAVE/PIC1.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd007f360, sb=*0xd007f2a0) -> sys_fs_stat()
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd007f360, sb=*0xd007f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/PIC1.PNG'
HLE: E {PPU[0x1] Thread (main_thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/ICON/SAVE/PIC1.PNG') failed: not found
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x121f4b0, entry=0x11b89f8, arg=0x121f4a8, prio=399, stacksize=0x80000, flags=0x0, threadname=*0x121f4bc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x121f4b0, param=*0xd007fad8, arg=0x121f4a8, unk=0x0, prio=399, stacksize=0x80000, flags=0x0, threadname=*0x121f4bc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00faac30]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x9c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab550]} cellSysutil: cellVideoOutGetNumberOfDevice(videoOut=0)
HLE: W {PPU[0x66] Thread (cglu_render)[0x00faae10]} cellResc: cellRescSetWaitFlip()
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: W {PPU[0x9c] Thread (Main Task)[0x008dd030]} sys_fs: sys_fs_open(path=*0xd036b7f0, flags=0, fd=*0xd036b3a0, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x9c] Thread (Main Task)[0x008dd030]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/MYSETTING/STAGE_SELECT.INI'
G: W {PPU[0x9c] Thread (Main Task)[0x008dd030]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00826-[Nier]/PS3_GAME/USRDIR/MEDIA/MYSETTING/STAGE_SELECT.INI', 0x1) failed: error 0x3
HLE: E {PPU[0x9c] Thread (Main Task)[0x008dd030]} sys_fs: sys_fs_open('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/MYSETTING/STAGE_SELECT.INI'): failed to open file (flags=0, mode=0)
HLE: W {PPU[0x9c] Thread (Main Task)[0x008dd030]} sys_fs: sys_fs_open(path=*0xd036b7f0, flags=0, fd=*0xd036b3a0, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x9c] Thread (Main Task)[0x008dd030]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/MYSETTING/STAGE_SELECT.INI'
G: W {PPU[0x9c] Thread (Main Task)[0x008dd030]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00826-[Nier]/PS3_GAME/USRDIR/MEDIA/STABLE/MYSETTING/STAGE_SELECT.INI', 0x1) failed: error 0x3
HLE: E {PPU[0x9c] Thread (Main Task)[0x008dd030]} sys_fs: sys_fs_open('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/MYSETTING/STAGE_SELECT.INI'): failed to open file (flags=0, mode=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab550]} cellSysutil: cellVideoOutGetNumberOfDevice(videoOut=0)
HLE: W {PPU[0x66] Thread (cglu_render)[0x00faae10]} cellResc: cellRescSetWaitFlip()
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x5
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: W {PPU[0x1] Thread (main_thread)[0x00fab550]} cellSysutil: cellVideoOutGetNumberOfDevice(videoOut=0)
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: W {PPU[0x67] Thread (Func Thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd0277320, sb=*0xd0277260) -> sys_fs_stat()
HLE: W {PPU[0x67] Thread (Func Thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd0277320, sb=*0xd0277260)
HLE: W {PPU[0x67] Thread (Func Thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/SCRIPT/__ROOT__.PAK'
HLE: E {PPU[0x67] Thread (Func Thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/SCRIPT/__ROOT__.PAK') failed: not found
HLE: W {PPU[0x67] Thread (Func Thread)[0x00faa830]} cellFs: cellFsStat(path=*0xd0277320, sb=*0xd0277260) -> sys_fs_stat()
HLE: W {PPU[0x67] Thread (Func Thread)[0x00faa830]} sys_fs: sys_fs_stat(path=*0xd0277320, sb=*0xd0277260)
HLE: W {PPU[0x67] Thread (Func Thread)[0x00faa830]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/SCRIPT/__ROOT__.PAK'
HLE: E {PPU[0x67] Thread (Func Thread)[0x00faa830]} sys_fs: sys_fs_stat('/dev_bdvd/PS3_GAME/USRDIR/MEDIA/STABLE/SCRIPT/__ROOT__.PAK') failed: not found
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
RSX: E {RSXThread} TODO: NV4097_SET_CONTROL0(0x100000)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: E {RSXThread} TODO: NV4097_SET_CONTROL0(0x100000)
RSX: W {RSXThread} Creating RTT
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=1024, h=720, pitch=5120, offset=0x7e0000, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=256, h=720, pitch=5120, offset=0x7e1000, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: E {RSXThread} TODO: NV4097_SET_CONTROL0(0x100000)
RSX: W {RSXThread} Creating RTT
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x7
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4025
RSX: W {RSXThread} TODO: NV4097_SET_TEX_COORD_CONTROL(texMask2D=0, texMaskCentroid=0)
RSX: W {RSXThread} TODO: NV4097_INLINE_ARRAY: 0xbf800000
RSX: W {RSXThread} VP not found in buffer!
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
RSX: W {RSXThread} FP not found in buffer!
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
RSX: W {RSXThread} Add program :
RSX: W {RSXThread} *** vp id = 0
RSX: W {RSXThread} *** fp id = 1
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
HLE: E {PPU[0x94] Thread (_cellsurMixerMain)[0x00fab050]} cellSpurs: cellSpursQueuePopBody
