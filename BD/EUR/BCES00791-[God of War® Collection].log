LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 v0.0.0.6-3827-a6beb0e
G: ! 
LDR: ! Loading 'D:\Emulateurs\Rpcs3\dev_hdd0\game\BCES00791-[God of War速 Collection]\PS3_GAME\USRDIR\BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BCES00791-[God of War速 Collection]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BCES00791-[God of War速 Collection]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! 
LDR: ! Title: God of War速 Collection
LDR: ! Serial: BCES00791
LDR: ! Used configuration: 'rpcs3.new.ini'
LDR: ! 
LDR: ! [gui]
MainFrameAui=layout2|name~Pane_0;caption~Game List;state~4196348;dir~5;layer~0;row~0;pos~0;prop~100000;bestw~283;besth~279;minw~-1;minh~-1;maxw~-1;maxh~-1;floatx~-1;floaty~-1;floatw~-1;floath~-1|name~Pane_1;caption~Log;state~4196348;dir~4;layer~0;row~1;pos~1;prop~99647;bestw~600;besth~300;minw~-1;minh~-1;maxw~-1;maxh~-1;floatx~52;floaty~489;floatw~616;floath~339|name~Pane_2;caption~Debugger;state~4196348;dir~4;layer~0;row~1;pos~0;prop~100353;bestw~400;besth~300;minw~-1;minh~-1;maxw~-1;maxh~-1;floatx~47;floaty~117;floatw~416;floath~339|dock_size(5,0,0)~265|dock_size(4,0,1)~400|

[system]
Emulation dir path=
Language=2
Use path below as EmulationDir=false

[rsx/opengl]
Write Color Buffers=false
Write Depth Buffer=false
Read Color Buffers=false
Read Depth Buffer=false

[gui/size]
width=988
height=629

[gui/position]
horizontal=5
vertical=397

[core]
PPU Decoder=interpreter2
Load liblv2.sprx=false
Hook static functions=false
SPU Decoder=recompiler_asmjit

[rsx]
VSync=true
Aspect ratio=16x9
Renderer=DX12
Resolution=1280x720
Frame limit=Auto
Log shader programs=false
3D Monitor=false

[core/llvm]
Compiled blocks exclusion=false
Excluded block range min=200
Excluded block range max=250
Compilation threshold=1000

[audio]
Audio Out=XAudio2
Dump to file=false
Convert to 16 bit=false

[io]
Pad Handler=windows
Camera=connected
Camera type=PlayStationEye
Mouse Handler=null
Keyboard Handler=null

[rsx/d3d12]
D3D Adaptater=0
Debug Output=false
Debug overlay=true

[io/pad]
Circle=76
Left Analog Stick Left=314
Left Analog Stick Down=317
Left Analog Stick Right=316
R2=69
Right=68
Triangle=73
Right Analog Stick Right=312
Down=83
Right Analog Stick Down=367
Left Analog Stick Up=315
Up=90
Right Analog Stick Up=366
Left=81
Right Analog Stick Left=313
Start=13
Select=32
Square=74
Cross=75
R1=51
R3=67
L1=49
L2=65
L3=87

[misc]
Exit RPCS3 when process finishes=false
Always start after boot=true
Use default configuration=true

[misc/log]
RSX Logging=false
Log Level=Errors
Log everything=false
Save TTY output to file=false

[misc/net]
Connection status=Connecting
Network adapter=0

[misc/debug]
Auto Pause at System Call=false
Auto Pause at Function Call=false


LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x300001
LDR: ! *** primary prio: 1001
LDR: ! *** primary stacksize: 0x10000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0x1a7898)
LDR: ! Imported function '_cellGcmSetFlipCommand' in 'cellGcmSys' module (0x1a78b8)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0x1a78d8)
LDR: ! Imported function 'cellGcmIoOffsetToAddress' in 'cellGcmSys' module (0x1a78f8)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0x1a7918)
LDR: ! Imported function 'cellGcmBindTile' in 'cellGcmSys' module (0x1a7938)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0x1a7958)
LDR: ! Imported function 'cellGcmSetDebugOutputLevel' in 'cellGcmSys' module (0x1a7978)
LDR: ! Imported function 'cellGcmGetDefaultCommandWordSize' in 'cellGcmSys' module (0x1a7998)
LDR: ! Imported function 'cellGcmGetLastFlipTime' in 'cellGcmSys' module (0x1a79b8)
LDR: ! Imported function 'cellGcmMapEaIoAddress' in 'cellGcmSys' module (0x1a79d8)
LDR: ! Imported function 'cellGcmGetFlipStatus' in 'cellGcmSys' module (0x1a79f8)
LDR: ! Imported function 'cellGcmGetDefaultSegmentWordSize' in 'cellGcmSys' module (0x1a7a18)
LDR: ! Imported function 'cellGcmGetReport' in 'cellGcmSys' module (0x1a7a38)
LDR: ! Imported function 'cellGcmSetDefaultFifoSize' in 'cellGcmSys' module (0x1a7a58)
LDR: ! Imported function 'cellGcmBindZcull' in 'cellGcmSys' module (0x1a7a78)
LDR: ! Imported function 'cellGcmMapMainMemory' in 'cellGcmSys' module (0x1a7a98)
LDR: ! Imported function 'cellGcmSetFlipHandler' in 'cellGcmSys' module (0x1a7ab8)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0x1a7ad8)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0x1a7af8)
LDR: ! Imported function 'cellGcmGetReportDataLocation' in 'cellGcmSys' module (0x1a7b18)
LDR: ! Imported function 'cellGcmUnbindZcull' in 'cellGcmSys' module (0x1a7b38)
LDR: ! Imported function 'cellGcmSetVBlankHandler' in 'cellGcmSys' module (0x1a7b58)
LDR: ! Imported function 'cellGcmResetFlipStatus' in 'cellGcmSys' module (0x1a7b78)
LDR: ! Imported function 'cellGcmSetTileInfo' in 'cellGcmSys' module (0x1a7b98)
LDR: ! Imported function 'cellGcmSetGraphicsHandler' in 'cellGcmSys' module (0x1a7bb8)
LDR: ! Imported function '_cellGcmSetFlipCommandWithWaitLabel' in 'cellGcmSys' module (0x1a7bd8)
LDR: ! Imported function 'cellGcmUnbindTile' in 'cellGcmSys' module (0x1a7bf8)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0x1a7c18)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0x1a7c38)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0x1a7c58)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0x1a7c78)
LDR: ! Imported function 'cellSysmoduleIsLoaded' in 'cellSysmodule' module (0x1a7c98)
LDR: ! Imported function 'cellSysmoduleInitialize' in 'cellSysmodule' module (0x1a8738)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0x1a7cb8)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0x1a7cd8)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0x1a7cf8)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0x1a7d18)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0x1a7d38)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0x1a7d58)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0x1a7d78)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0x1a7d98)
LDR: ! Imported function 'cellKbClearBuf' in 'sys_io' module (0x1a7db8)
LDR: ! Imported function 'cellKbGetInfo' in 'sys_io' module (0x1a7dd8)
LDR: ! Imported function 'cellMouseGetData' in 'sys_io' module (0x1a7df8)
LDR: ! Imported function 'cellKbInit' in 'sys_io' module (0x1a7e18)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0x1a7e38)
LDR: ! Imported function 'cellPadSetPortSetting' in 'sys_io' module (0x1a7e58)
LDR: ! Imported function 'cellMouseGetInfo' in 'sys_io' module (0x1a7e78)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0x1a7e98)
LDR: ! Imported function 'cellKbSetCodeType' in 'sys_io' module (0x1a7eb8)
LDR: ! Imported function 'cellPadGetInfo2' in 'sys_io' module (0x1a7ed8)
LDR: ! Imported function 'cellKbEnd' in 'sys_io' module (0x1a7ef8)
LDR: ! Imported function 'cellMouseInit' in 'sys_io' module (0x1a7f18)
LDR: ! Imported function 'cellMouseEnd' in 'sys_io' module (0x1a7f38)
LDR: ! Imported function 'cellKbRead' in 'sys_io' module (0x1a7f58)
LDR: ! Imported function 'cellRescGetNumColorBuffers' in 'cellResc' module (0x1a7f78)
LDR: ! Imported function 'cellRescSetWaitFlip' in 'cellResc' module (0x1a7f98)
LDR: ! Imported function 'cellRescSetDsts' in 'cellResc' module (0x1a7fb8)
LDR: ! Imported function 'cellRescAdjustAspectRatio' in 'cellResc' module (0x1a7fd8)
LDR: ! Imported function 'cellRescSetDisplayMode' in 'cellResc' module (0x1a7ff8)
LDR: ! Imported function 'cellRescSetConvertAndFlip' in 'cellResc' module (0x1a8018)
LDR: ! Imported function 'cellRescExit' in 'cellResc' module (0x1a8038)
LDR: ! Imported function 'cellRescSetFlipHandler' in 'cellResc' module (0x1a8058)
LDR: ! Imported function 'cellRescInit' in 'cellResc' module (0x1a8078)
LDR: ! Imported function 'cellRescGetBufferSize' in 'cellResc' module (0x1a8098)
LDR: ! Imported function 'cellRescSetSrc' in 'cellResc' module (0x1a80b8)
LDR: ! Imported function 'cellRescSetBufferAddress' in 'cellResc' module (0x1a80d8)
LDR: ! Imported function 'cellRescSetVBlankHandler' in 'cellResc' module (0x1a80f8)
LDR: ! Imported function 'cellRescCreateInterlaceTable' in 'cellResc' module (0x1a8118)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0x1a8138)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0x1a8158)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0x1a8178)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0x1a8198)
LDR: ! Imported function 'cellFsAioCancel' in 'sys_fs' module (0x1a81b8)
LDR: ! Imported function 'cellFsAioFinish' in 'sys_fs' module (0x1a81d8)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0x1a81f8)
LDR: ! Imported function 'cellFsAioRead' in 'sys_fs' module (0x1a8218)
LDR: ! Imported function 'cellFsAioInit' in 'sys_fs' module (0x1a8238)
LDR: ! Imported function 'cellFsRmdir' in 'sys_fs' module (0x1a8758)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module (0x1a8778)
LDR: ! Imported function 'cellFsReaddir' in 'sys_fs' module (0x1a8798)
LDR: ! Imported function 'cellFsSdataOpenByFd' in 'sys_fs' module (0x1a87b8)
LDR: ! Imported function 'cellFsUnlink' in 'sys_fs' module (0x1a87d8)
LDR: ! Imported function 'cellFsFsync' in 'sys_fs' module (0x1a87f8)
LDR: ! Imported function 'cellFsGetFreeSize' in 'sys_fs' module (0x1a8818)
LDR: ! Imported function 'cellFsSdataOpen' in 'sys_fs' module (0x1a8838)
LDR: ! Imported function 'cellFsMkdir' in 'sys_fs' module (0x1a8858)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0x1a8878)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0x1a8898)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module (0x1a88b8)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0x1a8258)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0x1a88d8)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0x1a88f8)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0x1a8918)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0x1a8938)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0x1a8958)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0x1a8978)
LDR: ! Imported function 'cellVdecOpenEx' in 'libvdec' module (0x1a8278)
LDR: ! Imported function 'cellVdecClose' in 'libvdec' module (0x1a8298)
LDR: ! Imported function 'cellVdecGetPicItem' in 'libvdec' module (0x1a82b8)
LDR: ! Imported function 'cellVdecDecodeAu' in 'libvdec' module (0x1a82d8)
LDR: ! Imported function 'cellVdecGetPicture' in 'libvdec' module (0x1a82f8)
LDR: ! Imported function 'cellVdecEndSeq' in 'libvdec' module (0x1a8318)
LDR: ! Imported function 'cellVdecStartSeq' in 'libvdec' module (0x1a8338)
LDR: ! Imported function 'cellVdecQueryAttrEx' in 'libvdec' module (0x1a8358)
LDR: ! Imported function '_cellSpursTasksetAttributeInitialize' in 'cellSpurs' module (0x1a8378)
LDR: ! Imported function 'cellSpursRequestIdleSpu' in 'cellSpurs' module (0x1a8398)
LDR: ! Imported function 'cellSpursGetInfo' in 'cellSpurs' module (0x1a83b8)
LDR: ! Imported function 'cellSpursEventFlagDetachLv2EventQueue' in 'cellSpurs' module (0x1a83d8)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module (0x1a83f8)
LDR: ! Imported function 'cellSpursWorkloadAttributeSetName' in 'cellSpurs' module (0x1a8418)
LDR: ! Imported function 'cellSpursEventFlagClear' in 'cellSpurs' module (0x1a8438)
LDR: ! Imported function 'cellSpursGetWorkloadInfo' in 'cellSpurs' module (0x1a8458)
LDR: ! Imported function 'cellSpursRemoveWorkload' in 'cellSpurs' module (0x1a8478)
LDR: ! Imported function '_cellSpursEventFlagInitialize' in 'cellSpurs' module (0x1a8498)
LDR: ! Imported function 'cellSpursWaitForWorkloadShutdown' in 'cellSpurs' module (0x1a84b8)
LDR: ! Imported function 'cellSpursTasksetAttributeSetName' in 'cellSpurs' module (0x1a84d8)
LDR: ! Imported function 'cellSpursSetPriorities' in 'cellSpurs' module (0x1a84f8)
LDR: ! Imported function 'cellSpursEventFlagAttachLv2EventQueue' in 'cellSpurs' module (0x1a8518)
LDR: ! Imported function 'cellSpursShutdownWorkload' in 'cellSpurs' module (0x1a8538)
LDR: ! Imported function 'cellSpursJoinTaskset' in 'cellSpurs' module (0x1a8558)
LDR: ! Imported function 'cellSpursShutdownTaskset' in 'cellSpurs' module (0x1a8578)
LDR: ! Imported function 'cellSpursInitialize' in 'cellSpurs' module (0x1a8598)
LDR: ! Imported function 'cellSpursAddWorkloadWithAttribute' in 'cellSpurs' module (0x1a85b8)
LDR: ! Imported function 'cellSpursCreateTasksetWithAttribute' in 'cellSpurs' module (0x1a85d8)
LDR: ! Imported function 'cellSpursSetExceptionEventHandler' in 'cellSpurs' module (0x1a85f8)
LDR: ! Imported function '_cellSpursWorkloadAttributeInitialize' in 'cellSpurs' module (0x1a8618)
LDR: ! Imported function 'cellSpursReadyCountStore' in 'cellSpurs' module (0x1a8638)
LDR: ! Imported function '_cellSpursLFQueueInitialize' in 'cellSpurs' module (0x1a8998)
LDR: ! Imported function 'cellSpursLFQueueAttachLv2EventQueue' in 'cellSpurs' module (0x1a89b8)
LDR: ! Imported function 'cellSpursLFQueueDetachLv2EventQueue' in 'cellSpurs' module (0x1a89d8)
LDR: ! Imported function '_cellSpursLFQueuePushBody' in 'cellSpurs' module (0x1a89f8)
LDR: ! Imported function 'cellSpursCreateTask' in 'cellSpurs' module (0x1a8a18)
LDR: ! Imported function 'sceNpInit' in 'sceNp' module (0x1a8658)
LDR: ! Imported function 'sceNpDrmProcessExitSpawn2' in 'sceNp' module (0x1a8678)
LDR: ! Imported function 'sceNpDrmIsAvailable2' in 'sceNp' module (0x1a8698)
LDR: ! Imported function 'cellGameGetParamString' in 'cellGame' module (0x1a86b8)
LDR: ! Imported function 'cellGameContentPermit' in 'cellGame' module (0x1a86d8)
LDR: ! Imported function 'cellGamePatchCheck' in 'cellGame' module (0x1a86f8)
LDR: ! Imported function 'cellGameBootCheck' in 'cellGame' module (0x1a8718)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0x1a8a38)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0x1a8a58)
LDR: ! Imported function 'sys_lwcond_destroy' in 'sysPrxForUser' module (0x1a8a78)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0x1a8a98)
LDR: ! Imported function 'sys_prx_load_module' in 'sysPrxForUser' module (0x1a8ab8)
LDR: ! Imported function 'sys_lwcond_wait' in 'sysPrxForUser' module (0x1a8ad8)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0x1a8af8)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0x1a8b18)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0x1a8b38)
LDR: ! Imported function 'sys_prx_register_library' in 'sysPrxForUser' module (0x1a8b58)
LDR: ! Imported function 'sys_process_is_stack' in 'sysPrxForUser' module (0x1a8b78)
LDR: ! Imported function 'sys_game_process_exitspawn2' in 'sysPrxForUser' module (0x1a8b98)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0x1a8bb8)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0x1a8bd8)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module (0x1a8bf8)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0x1a8c18)
LDR: ! Imported function 'sys_prx_load_module_on_memcontainer_by_fd' in 'sysPrxForUser' module (0x1a8c38)
LDR: ! Imported function 'sys_prx_load_module_on_memcontainer' in 'sysPrxForUser' module (0x1a8c58)
LDR: ! Imported function 'sys_lwmutex_trylock' in 'sysPrxForUser' module (0x1a8c78)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0x1a8c98)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0x1a8cb8)
LDR: ! Imported function 'sys_lwcond_create' in 'sysPrxForUser' module (0x1a8cd8)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0x1a8cf8)
LDR: ! Imported function 'sys_lwcond_signal_all' in 'sysPrxForUser' module (0x1a8d18)
LDR: ! Imported function 'sys_prx_load_module_by_fd' in 'sysPrxForUser' module (0x1a8d38)
LDR: ! Imported function 'sys_lwcond_signal' in 'sysPrxForUser' module (0x1a8d58)
MEM: ! Thread Local Storage initialized (g_tls_start=0x2690000, user_size=0x168)
*** TLS segment addr: 0x001f0520
*** TLS segment size: 0x00000000
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x25578a0, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00129634]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd000fc04)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x25576a8, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2556e30, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2556e58, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2556e80, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2556d68, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2556d90, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2556db8, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2556de0, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2556e08, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2557e88, attr=*0x1aa8a98)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2557e48, attr=*0x1aa8aa8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00127f9c]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd000f770)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000020, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200000a0, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000130, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000190, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200001d0, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000210, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200002d0, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000300, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000330, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000360, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000390, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200003c0, attr=*0x1aaef0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0011b848]} sys_time: sys_time_get_timezone(timezone=*0xd000fb20, summertime=*0xd000fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x0011d2b8]} sys_time: sys_time_get_timezone(timezone=*0xd000fb20, summertime=*0xd000fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x0011b7f4]} sys_time: sys_time_get_timezone(timezone=*0xd000fb20, summertime=*0xd000fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x0011d2b8]} sys_time: sys_time_get_timezone(timezone=*0xd000fb20, summertime=*0xd000fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2556c10, attr=*0xd000fb50)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x0000: CELL_SYSMODULE_NET)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x001c: CELL_SYSMODULE_USBD)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x001f: CELL_SYSMODULE_RESC)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x0011: CELL_SYSMODULE_AUDIO)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x0024: CELL_SYSMODULE_VDEC_MPEG2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x0016: CELL_SYSMODULE_SYSUTIL_NP)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x0016: CELL_SYSMODULE_SYSUTIL_NP)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8658]} sceNp: sceNpInit(poolsize=0x20000, poolptr=*0x200003e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8718]} cellGame: cellGameBootCheck(type=*0xd000f9e0, attributes=*0xd000f9e4, size=*0xd000f9f0, dirName=*0xd000fa00)
TTY: cellGameBootCheck - type: 1 - attribs: 0x00000000 - hddDir: \n
HLE: W {PPU[0x1] Thread (main_thread)[0x001a86b8]} cellGame: cellGameGetParamString(id=100, buf=*0xd000fa00, bufsize=10)
TTY: Title Id BCES00791\n
HLE: W {PPU[0x1] Thread (main_thread)[0x001a86d8]} cellGame: cellGameContentPermit(contentInfoPath=*0xd000fa8c, usrdirPath=*0xd000fb0c)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c58]} cellSysmodule: cellSysmoduleUnloadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x0001b0dc]} sys_spu: sys_spu_initialize(max_usable_spu=6, max_raw_spu=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x000a: CELL_SYSMODULE_SPURS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} cellSpurs: cellSpursInitialize(spurs=*0x2541b00, nSpus=3, spuPriority=128, ppuPriority=1000, exitIfNoWork=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0x2541b00, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_semaphore: sys_semaphore_create(sem_id=*0xd000f968, attr=*0xd000f940, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_spu: sys_spu_thread_group_create(id=*0x2542830, num=3, prio=128, attr=*0xd000f8a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_spu: sys_spu_thread_initialize(thread=*0x2542834, group=0x2d, spu_num=0, img=*0x2542870, attr=*0xd000f868, arg=*0xd000f878)
HLE: E {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_spu: sys_spu_thread_initialize(thread=*0x2542838, group=0x2d, spu_num=1, img=*0x2542870, attr=*0xd000f868, arg=*0xd000f878)
HLE: E {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_spu: sys_spu_thread_initialize(thread=*0x254283c, group=0x2d, spu_num=2, img=*0x2542870, attr=*0xd000f868, arg=*0xd000f878)
HLE: E {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x25428b0, attr=*0xd000f7c8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sysPrxForUser: sys_lwcond_create(lwcond=*0x25428c8, lwmutex=*0x25428b0, attr=*0xd000f7d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_event: sys_event_queue_create(equeue_id=*0x254285c, attr=*0xd000f7c8, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x2d, eq=0x33, req=0xffffffffffff0000, spup=*0x2541bc9)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_event: sys_event_port_create(eport_id=*0x2542860, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_event: sys_event_port_connect_local(eport_id=0x34, equeue_id=0x33)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0x2541b00, flag=1)
HLE: W {PPU[0x36] Thread (SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_start(id=0x2d)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8598]} sys_spu: sys_spu_thread_group_connect_event(id=0x2d, eq=0x33, et=2)
SPU: S {PPU[0x36] Thread (SpursHdlr0)[0x00000000]} SPU Database initialized...
SPU: S {PPU[0x36] Thread (SpursHdlr0)[0x00000000]} SPU Recompiler (ASMJIT) created...
HLE: W {PPU[0x36] Thread (SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0x2d, cause=*0x0, status=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00123ee8]} sys_fs: sys_fs_open(path=*0xd000f760, flags=0, fd=*0xd000f510, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00123ee8]} sys_fs: *** path = '/app_home/fwArgs.txt'
G: W {PPU[0x1] Thread (main_thread)[0x00123ee8]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BCES00791-[God of War速 Collection]/PS3_GAME/USRDIR/fwArgs.txt', 0x1) failed: error 0x2
HLE: E {PPU[0x1] Thread (main_thread)[0x00123ee8]} sys_fs: sys_fs_open('/app_home/fwArgs.txt'): failed to open file (flags=0, mode=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x001f: CELL_SYSMODULE_RESC)
HLE: W {PPU[0x1] Thread (main_thread)[0x00043438]} sys_spu: sys_raw_spu_create(id=*0x2542ee4, attr=*0xd000f740)
SPU: S {RawSPU[0] Thread (0x37)[0x000e0]} Function detected [0x000e0-0x00138] (size=0x58)
SPU: S {RawSPU[0] Thread (0x37)[0x00090]} Function detected [0x00090-0x000c0] (size=0x30)
SPU: S {RawSPU[0] Thread (0x37)[0x00138]} Function detected [0x00138-0x00634] (size=0x4fc)
HLE: W {PPU[0x1] Thread (main_thread)[0x00127f9c]} sys_memory: sys_memory_allocate(size=0x300000, flags=0x400, alloc_addr=*0xd000f450)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7898]} cellGcmSys: _cellGcmInitBody(context=**0x2543e84, cmdSize=0x10000, ioSize=0x100000, ioAddress=0x20100000)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7898]} cellGcmSys: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7898]} cellGcmSys: cellGcmInit(): 256MB io address space used
RSX: ! {rsx::thread} RSX thread started
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7978]} cellGcmSys: cellGcmSetDebugOutputLevel(level=2)
HLE: E {PPU[0x1] Thread (main_thread)[0x001a7bb8]} cellGcmSys: cellGcmSetGraphicsHandler
HLE: W {PPU[0x1] Thread (main_thread)[0x00044aec]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0x2543204)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a79d8]} cellGcmSys: cellGcmMapEaIoAddress(ea=0x20400000, io=0xe000000, size=0x100000)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=5)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=6)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=9)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=10)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=11)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=12)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=13)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7bf8]} cellGcmSys: cellGcmUnbindTile(index=14)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7b98]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=246022144, size=15073280, pitch=10240, comp=8, base=1, bank=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x001a7b98]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7938]} cellGcmSys: cellGcmBindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7b98]} cellGcmSys: cellGcmSetTileInfo(index=1, location=0, offset=230948864, size=15073280, pitch=10240, comp=8, base=231, bank=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x001a7b98]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7938]} cellGcmSys: cellGcmBindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7b98]} cellGcmSys: cellGcmSetTileInfo(index=2, location=0, offset=227016704, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7938]} cellGcmSys: cellGcmBindTile(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7b98]} cellGcmSys: cellGcmSetTileInfo(index=2, location=0, offset=223084544, size=7864320, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7938]} cellGcmSys: cellGcmBindTile(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7b98]} cellGcmSys: cellGcmSetTileInfo(index=3, location=0, offset=208011264, size=15073280, pitch=10240, comp=10, base=461, bank=3)
HLE: E {PPU[0x1] Thread (main_thread)[0x001a7b98]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7938]} cellGcmSys: cellGcmBindTile(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7a78]} cellGcmSys: cellGcmBindZcull(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x000a0bb0]} sys_semaphore: sys_semaphore_create(sem_id=*0x25435a8, attr=*0xd000f5c0, initial_val=1, max_val=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7ab8]} cellGcmSys: cellGcmSetFlipHandler(handler=*0x1e5cd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7cb8]} cellSysutil: cellVideoOutConfigure(videoOut=0, config=*0xd000f590, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7958]} cellGcmSys: cellGcmSetFlipMode(mode=1)
RSX: W {rsx::thread} Creating RTT
RSX: W {rsx::thread} Creating RTT
HLE: W {PPU[0x1] Thread (main_thread)[0x00042ba4]} sys_mutex: sys_mutex_create(mutex_id=*0x200357d0, attr=*0xd000f490)
HLE: W {PPU[0x1] Thread (main_thread)[0x00042d4c]} sys_cond: sys_cond_create(cond_id=*0x200357e0, mutex_id=0x39, attr=*0xd000f4a0)
TTY: Display resolution: 1280x720 (16:9)\n
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7d98]} sys_io: cellPadInit(max_connect=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7e18]} sys_io: cellKbInit(max_connect=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7f18]} sys_io: cellMouseInit(max_connect=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8238]} cellFs: cellFsAioInit(mount_point=*0x1ab450)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8238]} cellFs: *** mount_point = '/dev_bdvd/PS3_GAME/USRDIR'
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7cf8]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd000f4d0)
RSX: E {rsx::thread} NV3089_IMAGE_IN_SIZE: src = 0x4080, dst = 0x4000
RSX: W {rsx::thread} NV3089_IMAGE_IN_SIZE: SIZE=0x00010020, pitch=0x40, offset=0x4080, scaleX=1.000000, scaleY=1.000000, CLIP_SIZE=0x00010020, OUT_SIZE=0x00010020
RSX: E {rsx::thread} NV3089_IMAGE_IN_SIZE: src = 0x40c0, dst = 0x4000
RSX: W {rsx::thread} NV3089_IMAGE_IN_SIZE: SIZE=0x00010010, pitch=0x40, offset=0x40c0, scaleX=1.000000, scaleY=1.000000, CLIP_SIZE=0x00010010, OUT_SIZE=0x00010010
RSX: E {rsx::thread} NV3089_IMAGE_IN_SIZE: src = 0x4180, dst = 0x4100
RSX: W {rsx::thread} NV3089_IMAGE_IN_SIZE: SIZE=0x00010010, pitch=0x40, offset=0x4180, scaleX=1.000000, scaleY=1.000000, CLIP_SIZE=0x00010010, OUT_SIZE=0x00010010
RSX: E {rsx::thread} NV3089_IMAGE_IN_SIZE: src = 0x4280, dst = 0x4200
RSX: W {rsx::thread} NV3089_IMAGE_IN_SIZE: SIZE=0x00010020, pitch=0x40, offset=0x4280, scaleX=1.000000, scaleY=1.000000, CLIP_SIZE=0x00010020, OUT_SIZE=0x00010020
RSX: E {rsx::thread} NV3089_IMAGE_IN_SIZE: src = 0x42c0, dst = 0x4200
RSX: W {rsx::thread} NV3089_IMAGE_IN_SIZE: SIZE=0x00010010, pitch=0x40, offset=0x42c0, scaleX=1.000000, scaleY=1.000000, CLIP_SIZE=0x00010010, OUT_SIZE=0x00010010
RSX: E {rsx::thread} NV3089_IMAGE_IN_SIZE: src = 0x4380, dst = 0x4300
RSX: W {rsx::thread} NV3089_IMAGE_IN_SIZE: SIZE=0x00010010, pitch=0x40, offset=0x4380, scaleX=1.000000, scaleY=1.000000, CLIP_SIZE=0x00010010, OUT_SIZE=0x00010010
RSX: E {rsx::thread} NV3089_IMAGE_IN_SIZE: src = 0x4400, dst = 0x4300
RSX: W {rsx::thread} NV3089_IMAGE_IN_SIZE: SIZE=0x00010010, pitch=0x40, offset=0x4400, scaleX=1.000000, scaleY=1.000000, CLIP_SIZE=0x00010010, OUT_SIZE=0x00010010
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8738]} cellSysmodule: cellSysmoduleInitialize()
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7c78]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007b2c0, attr=*0xd000efc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8cd8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2007b2f0, lwmutex=*0x2007b2c0, attr=*0xd000efb0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007b310, attr=*0xd000ef50)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007b350, attr=*0xd000efd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007b3d8, attr=*0xd000f070)
HLE: W {PPU[0x1] Thread (main_thread)[0x0010f4b8]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x2007b40c, attr=*0xd000f060)
HLE: W {PPU[0x1] Thread (main_thread)[0x0010f4b8]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x2007b77c, attr=*0xd000f060)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8378]} cellSpurs: _cellSpursTasksetAttributeInitialize(attribute=*0xd000f208, revision=1, skd_version=0x300000, args=0x0, priority=*0xd000f1c0, max_contention=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a84d8]} cellSpurs: cellSpursTasksetAttributeSetName(attr=*0xd000f208, name=*0x1ab600)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a85d8]} cellSpurs: cellSpursCreateTasksetWithAttribute(spurs=*0x2541b00, taskset=*0x2007c880, attr=*0xd000f208)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a85d8]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd000ef48, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x2007c880, priority=*0xd000f218, minCnt=0x8, maxCnt=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a85d8]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd000ef48, nameClass=*0x0, nameInstance=*0x1ab600)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a85d8]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0x2541b00, wid=*0xd000ef40, attr=*0xd000ef48)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8498]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x2541b00, taskset=*0x0, eventFlag=*0x2007e180, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8518]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0x2007e180)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8518]} sys_event: sys_event_queue_create(equeue_id=*0xd000f148, attr=*0xd000f128, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8518]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x2d, eq=0x42, req=0xffffffffffff0000, spup=*0xd000f140)
HLE: E {PPU[0x1] Thread (main_thread)[0x001a8998]} cellSpurs TODO: _cellSpursLFQueueInitialize(pTasksetOrSpurs=*0x2541b01, pQueue=*0x2007e200, buffer=*0x2007e280, size=0x20, depth=0xc, direction=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8998]} cellSync: cellSyncLFQueueInitialize(queue=*0x2007e200, buffer=*0x2007e280, size=0x20, depth=0xc, direction=3, eaSignal=*0x2541b01)
HLE: E {PPU[0x1] Thread (main_thread)[0x001a89b8]} cellSpurs: cellSpursLFQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a18]} cellSpurs: cellSpursCreateTask(taskset=*0x2007c880, taskID=*0xd000f0c0, elf=*0x1c9b80, context=*0x2007b880, size=0xc00, lsPattern=*0x1b88f8, argument=*0xd000f0c8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a18]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0x2541b00, wid=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a18]} cellSpurs: cellSpursWakeUp(spurs=*0x2541b00)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007e730, attr=*0xd000ef30)
HLE: W {PPU[0x1] Thread (main_thread)[0x0010f4b8]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x2007e7b4, attr=*0xd000f050)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007e7d0, attr=*0xd000f060)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007e868, attr=*0xd000f060)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8cd8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2007e890, lwmutex=*0x2007e868, attr=*0xd000f050)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007e938, attr=*0xd000f060)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007f310, attr=*0xd000ef70)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007f338, attr=*0xd000ef70)
HLE: W {PPU[0x1] Thread (main_thread)[0x0010f4b8]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x2007f35c, attr=*0xd000ef60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007f378, attr=*0xd000ef70)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007f3c8, attr=*0xd000ef70)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8cd8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2007f3f0, lwmutex=*0x2007f3c8, attr=*0xd000ef60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8cd8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2007f408, lwmutex=*0x2007f3c8, attr=*0xd000ef60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007f420, attr=*0xd000ef70)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8b18]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2007f470, attr=*0xd000ef70)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8cd8]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2007f498, lwmutex=*0x2007f470, attr=*0xd000ef60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20093d24, entry=0x1ea778, arg=0x20093d04, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x1b72e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20093d24, param=*0xd000ef10, arg=0x20093d04, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x1b72e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x53)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20093d4c, entry=0x1ea778, arg=0x20093d2c, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x1b72e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20093d4c, param=*0xd000ef10, arg=0x20093d2c, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x1b72e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x54)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20093d74, entry=0x1ea778, arg=0x20093d54, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x1b72e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20093d74, param=*0xd000ef10, arg=0x20093d54, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x1b72e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x55)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x2007f3b0, entry=0x1ea778, arg=0x2007f390, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x1b7240)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x2007f3b0, param=*0xd000ef10, arg=0x2007f390, unk=0x0, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x1b7240)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a8a98]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x56)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x001a8178]} cellFs: cellFsOpen(path=*0xd0033398, flags=0, fd=*0xd0033254, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x53] Thread (fios mediathread)[0x001a8178]} sys_fs: sys_fs_open(path=*0xd0033398, flags=0, fd=*0xd0033254, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x001a8178]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/bootloader.psarc'
HLE: W {PPU[0x53] Thread (fios mediathread)[0x001a8898]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd0033314)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x001a8198]} cellFs: cellFsStat(path=*0xd0033388, sb=*0xd0033304) -> sys_fs_stat()
HLE: W {PPU[0x53] Thread (fios mediathread)[0x001a8198]} sys_fs: sys_fs_stat(path=*0xd0033388, sb=*0xd0033304)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x001a8198]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/bootloader.psarc'
HLE: W {PPU[0x53] Thread (fios mediathread)[0x0011b7f4]} sys_time: sys_time_get_timezone(timezone=*0xd00331a0, summertime=*0xd00331a4)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x0011d2b8]} sys_time: sys_time_get_timezone(timezone=*0xd00330f0, summertime=*0xd00330f4)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x0011b7f4]} sys_time: sys_time_get_timezone(timezone=*0xd00331a0, summertime=*0xd00331a4)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x0011d2b8]} sys_time: sys_time_get_timezone(timezone=*0xd00330f0, summertime=*0xd00330f4)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x0011b7f4]} sys_time: sys_time_get_timezone(timezone=*0xd00331a0, summertime=*0xd00331a4)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x0011d2b8]} sys_time: sys_time_get_timezone(timezone=*0xd00330f0, summertime=*0xd00330f4)
HLE: W {PPU[0x1] Thread (main_thread)[0x001a7cf8]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd000f4d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00127f9c]} sys_memory: sys_memory_allocate(size=0x400000, flags=0x400, alloc_addr=*0xd000eff0)
HLE: W {PPU[0x53] Thread (fios mediathread)[0x001a8438]} cellSpurs: cellSpursEventFlagClear(eventFlag=*0x2007e180, bits=0x1)
HLE: E {PPU[0x53] Thread (fios mediathread)[0x001a89f8]} cellSpurs: _cellSpursLFQueuePushBody
HLE: W {PPU[0x53] Thread (fios mediathread)[0x001a83f8]} cellSpurs: cellSpursEventFlagWait(eventFlag=*0x2007e180, mask=*0xd0033800, mode=1)
G: ! Stopping emulator...
G: ! All threads signaled...
G: ! {SPU[0x30] Thread (CellSpursKernel2)[0x00818]} Thread aborted
HLE: S {PPU[0x1] Thread (main_thread)[0x001a8ad8]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {SPU[0x2e] Thread (CellSpursKernel0)[0x00818]} Thread aborted
G: ! {SPU[0x2f] Thread (CellSpursKernel1)[0x00818]} Thread aborted
G: ! {PPU[0x2] Thread (Callback Thread)[0x00000000]} Thread aborted
G: ! {PPU[0x1] Thread (main_thread)[0x001a8ad8]} Thread aborted
HLE: S {PPU[0x53] Thread (fios mediathread)[0x001a83f8]} Last function: cellSpursEventFlagWait (0x373523d4)
G: ! {PPU[0x35] Thread (SpursHdlr1)[0x00000000]} Thread aborted
HLE: S {PPU[0x54] Thread (fios mediathread)[0x001a8ad8]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {VBlank Thread} Thread aborted
HLE: S {PPU[0x55] Thread (fios mediathread)[0x001a8ad8]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0x53] Thread (fios mediathread)[0x001a83f8]} Thread aborted
G: ! {PPU[0x54] Thread (fios mediathread)[0x001a8ad8]} Thread aborted
HLE: S {PPU[0x56] Thread (fios scheduler)[0x001a8ad8]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0x55] Thread (fios mediathread)[0x001a8ad8]} Thread aborted
G: ! {PPU[0x56] Thread (fios scheduler)[0x001a8ad8]} Thread aborted
G: ! {PPU[0x36] Thread (SpursHdlr0)[0x00000000]} Thread aborted
RSX: W {rsx::thread} RSX thread aborted
RSX: ! {rsx::thread} RSX thread ended
G: ! {RawSPU[0] Thread (0x37)[0x00258]} Thread aborted
G: ! All threads stopped...
G: ! Objects cleared...
G: ! Stopping emulator...
