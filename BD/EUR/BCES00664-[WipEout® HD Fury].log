LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 v0.0.0.6-3827-a6beb0e
G: ! 
LDR: ! Decrypting 'D:\Emulateurs\Rpcs3\dev_hdd0\game\BCES00664-[WipEout® HD Fury]\PS3_GAME\USRDIR\EBOOT.BIN'...
LDR: ! Loading 'D:\Emulateurs\Rpcs3\dev_hdd0\game\BCES00664-[WipEout® HD Fury]\PS3_GAME\USRDIR\BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BCES00664-[WipEout® HD Fury]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BCES00664-[WipEout® HD Fury]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! 
LDR: ! Title: WipEout® HD Fury
LDR: ! Serial: BCES00664
LDR: ! Used configuration: 'rpcs3.new.ini'
LDR: ! 
LDR: ! [gui]
MainFrameAui=layout2|name~Pane_0;caption~Game List;state~4196348;dir~5;layer~0;row~0;pos~0;prop~100000;bestw~283;besth~279;minw~-1;minh~-1;maxw~-1;maxh~-1;floatx~-1;floaty~-1;floatw~-1;floath~-1|name~Pane_1;caption~Log;state~4196348;dir~4;layer~0;row~1;pos~1;prop~99647;bestw~600;besth~300;minw~-1;minh~-1;maxw~-1;maxh~-1;floatx~52;floaty~489;floatw~616;floath~339|name~Pane_2;caption~Debugger;state~4196348;dir~4;layer~0;row~1;pos~0;prop~100353;bestw~400;besth~300;minw~-1;minh~-1;maxw~-1;maxh~-1;floatx~47;floaty~117;floatw~416;floath~339|dock_size(5,0,0)~265|dock_size(4,0,1)~400|

[system]
Emulation dir path=
Language=2
Use path below as EmulationDir=false

[rsx/opengl]
Write Color Buffers=false
Write Depth Buffer=false
Read Color Buffers=false
Read Depth Buffer=false

[gui/size]
width=963
height=626

[gui/position]
horizontal=-5
vertical=145

[core]
PPU Decoder=interpreter2
Load liblv2.sprx=false
Hook static functions=false
SPU Decoder=recompiler_asmjit

[rsx]
VSync=true
Aspect ratio=16x9
Renderer=DX12
Resolution=1280x720
Frame limit=Auto
Log shader programs=false
3D Monitor=false

[core/llvm]
Compiled blocks exclusion=false
Excluded block range min=200
Excluded block range max=250
Compilation threshold=1000

[audio]
Audio Out=XAudio2
Dump to file=false
Convert to 16 bit=false

[io]
Pad Handler=windows
Camera=connected
Camera type=PlayStationEye
Mouse Handler=null
Keyboard Handler=null

[rsx/d3d12]
D3D Adaptater=0
Debug Output=false
Debug overlay=true

[io/pad]
Circle=76
Left Analog Stick Left=314
Left Analog Stick Down=317
Left Analog Stick Right=316
R2=69
Right=68
Triangle=73
Right Analog Stick Right=312
Down=83
Right Analog Stick Down=367
Left Analog Stick Up=315
Up=90
Right Analog Stick Up=366
Left=81
Right Analog Stick Left=313
Start=13
Select=32
Square=74
Cross=75
R1=51
R3=67
L1=49
L2=65
L3=87

[misc]
Exit RPCS3 when process finishes=false
Always start after boot=true
Use default configuration=true

[misc/log]
RSX Logging=false
Log Level=Errors
Log everything=false
Save TTY output to file=false

[misc/net]
Connection status=Connecting
Network adapter=0

[misc/debug]
Auto Pause at System Call=false
Auto Pause at Function Call=false


LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x250001
LDR: ! *** primary prio: 1001
LDR: ! *** primary stacksize: 0x40000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0x756d7c)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module (0x756d9c)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0x756dbc)
LDR: ! Imported function 'cellFsReaddir' in 'sys_fs' module (0x756ddc)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0x756dfc)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0x756e1c)
LDR: ! Imported function 'cellFsUnlink' in 'sys_fs' module (0x756e3c)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0x756e5c)
LDR: ! Imported function 'cellFsGetFreeSize' in 'sys_fs' module (0x756e7c)
LDR: ! Imported function 'cellFsMkdir' in 'sys_fs' module (0x756e9c)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0x756ebc)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0x756edc)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module (0x756efc)
LDR: ! Imported function 'cellFsRmdir' in 'sys_fs' module (0x7584dc)
LDR: ! Imported function 'cellFsFsync' in 'sys_fs' module (0x7584fc)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0x756f1c)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0x756f3c)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0x756f5c)
LDR: ! Imported function 'sys_prx_load_module' in 'sysPrxForUser' module (0x756f7c)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0x756f9c)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0x756fbc)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0x756fdc)
LDR: ! Imported function 'sys_mmapper_free_memory' in 'sysPrxForUser' module (0x756ffc)
LDR: ! Imported function 'sys_prx_register_library' in 'sysPrxForUser' module (0x75701c)
LDR: ! Imported function 'sys_mmapper_unmap_memory' in 'sysPrxForUser' module (0x75703c)
LDR: ! Imported function 'sys_mmapper_allocate_memory_from_container' in 'sysPrxForUser' module (0x75705c)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0x75707c)
LDR: ! Imported function 'sys_prx_stop_module' in 'sysPrxForUser' module (0x75709c)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0x7570bc)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module (0x7570dc)
LDR: ! Imported function 'sys_prx_start_module' in 'sysPrxForUser' module (0x7570fc)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0x75711c)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0x75713c)
LDR: ! Imported function 'sys_mmapper_allocate_memory' in 'sysPrxForUser' module (0x75715c)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0x75717c)
LDR: ! Imported function 'sys_prx_unregister_library' in 'sysPrxForUser' module (0x75719c)
LDR: ! Imported function 'sys_mmapper_map_memory' in 'sysPrxForUser' module (0x7571bc)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0x7571dc)
LDR: ! Imported function 'sys_prx_unload_module' in 'sysPrxForUser' module (0x7571fc)
LDR: ! Imported function 'sys_lwcond_destroy' in 'sysPrxForUser' module (0x75835c)
LDR: ! Imported function 'sys_lwcond_wait' in 'sysPrxForUser' module (0x75837c)
LDR: ! Imported function '_sys_spu_printf_initialize' in 'sysPrxForUser' module (0x75839c)
LDR: ! Imported function 'sys_process_is_stack' in 'sysPrxForUser' module (0x7583bc)
LDR: ! Imported function 'sys_game_process_exitspawn2' in 'sysPrxForUser' module (0x7583dc)
LDR: ! Imported function 'sys_ppu_thread_once' in 'sysPrxForUser' module (0x7583fc)
LDR: ! Imported function 'sys_lwmutex_trylock' in 'sysPrxForUser' module (0x75841c)
LDR: ! Imported function 'sys_lwcond_create' in 'sysPrxForUser' module (0x75843c)
LDR: ! Imported function '_sys_spu_printf_finalize' in 'sysPrxForUser' module (0x75845c)
LDR: ! Imported function 'sys_spu_image_close' in 'sysPrxForUser' module (0x75847c)
LDR: ! Imported function 'sys_lwcond_signal_all' in 'sysPrxForUser' module (0x75849c)
LDR: ! Imported function 'sys_lwcond_signal' in 'sysPrxForUser' module (0x7584bc)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0x75721c)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0x75723c)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0x75725c)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0x75727c)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0x75729c)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0x7572bc)
LDR: ! Imported function 'cellAudioSetNotifyEventQueue' in 'cellAudio' module (0x75879c)
LDR: ! Imported function 'cellAudioSetPortLevel' in 'cellAudio' module (0x7587bc)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0x7587dc)
LDR: ! Imported function 'cellAudioRemoveNotifyEventQueue' in 'cellAudio' module (0x7587fc)
LDR: ! Imported function 'cellAdecDecodeAu' in 'cellAdec' module (0x7572dc)
LDR: ! Imported function 'cellAdecStartSeq' in 'cellAdec' module (0x7572fc)
LDR: ! Imported function 'cellAdecQueryAttr' in 'cellAdec' module (0x75731c)
LDR: ! Imported function 'cellAdecClose' in 'cellAdec' module (0x75733c)
LDR: ! Imported function 'cellAdecOpenEx' in 'cellAdec' module (0x75735c)
LDR: ! Imported function 'cellAdecGetPcm' in 'cellAdec' module (0x75737c)
LDR: ! Imported function 'cellAdecGetPcmItem' in 'cellAdec' module (0x75739c)
LDR: ! Imported function 'cellSpursAttributeSetNamePrefix' in 'cellSpurs' module (0x7573bc)
LDR: ! Imported function '_cellSpursTasksetAttributeInitialize' in 'cellSpurs' module (0x7573dc)
LDR: ! Imported function 'cellSpursEventFlagDetachLv2EventQueue' in 'cellSpurs' module (0x7573fc)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module (0x75741c)
LDR: ! Imported function 'cellSpursEventFlagClear' in 'cellSpurs' module (0x75743c)
LDR: ! Imported function '_cellSpursEventFlagInitialize' in 'cellSpurs' module (0x75745c)
LDR: ! Imported function 'cellSpursTasksetAttributeSetName' in 'cellSpurs' module (0x75747c)
LDR: ! Imported function 'cellSpursEventFlagAttachLv2EventQueue' in 'cellSpurs' module (0x75749c)
LDR: ! Imported function '_cellSpursAttributeInitialize' in 'cellSpurs' module (0x7574bc)
LDR: ! Imported function 'cellSpursJoinTaskset' in 'cellSpurs' module (0x7574dc)
LDR: ! Imported function 'cellSpursShutdownTaskset' in 'cellSpurs' module (0x7574fc)
LDR: ! Imported function 'cellSpursAttributeSetSpuThreadGroupType' in 'cellSpurs' module (0x75751c)
LDR: ! Imported function 'cellSpursInitializeWithAttribute' in 'cellSpurs' module (0x75753c)
LDR: ! Imported function 'cellSpursCreateTasksetWithAttribute' in 'cellSpurs' module (0x75755c)
LDR: ! Imported function 'cellSpursFinalize' in 'cellSpurs' module (0x75757c)
LDR: ! Imported function '_cellSpursLFQueueInitialize' in 'cellSpurs' module (0x75881c)
LDR: ! Imported function 'cellSpursLFQueueAttachLv2EventQueue' in 'cellSpurs' module (0x75883c)
LDR: ! Imported function 'cellSpursRequestIdleSpu' in 'cellSpurs' module (0x75885c)
LDR: ! Imported function 'cellSpursGetInfo' in 'cellSpurs' module (0x75887c)
LDR: ! Imported function 'cellSpursWorkloadAttributeSetName' in 'cellSpurs' module (0x75889c)
LDR: ! Imported function 'cellSpursGetWorkloadInfo' in 'cellSpurs' module (0x7588bc)
LDR: ! Imported function 'cellSpursDetachLv2EventQueue' in 'cellSpurs' module (0x7588dc)
LDR: ! Imported function 'cellSpursCreateTaskset' in 'cellSpurs' module (0x7588fc)
LDR: ! Imported function 'cellSpursRemoveWorkload' in 'cellSpurs' module (0x75891c)
LDR: ! Imported function 'cellSpursWaitForWorkloadShutdown' in 'cellSpurs' module (0x75893c)
LDR: ! Imported function 'cellSpursLFQueueDetachLv2EventQueue' in 'cellSpurs' module (0x75895c)
LDR: ! Imported function 'cellSpursSetPriorities' in 'cellSpurs' module (0x75897c)
LDR: ! Imported function '_cellSpursLFQueuePushBody' in 'cellSpurs' module (0x75899c)
LDR: ! Imported function 'cellSpursShutdownWorkload' in 'cellSpurs' module (0x7589bc)
LDR: ! Imported function 'cellSpursInitialize' in 'cellSpurs' module (0x7589dc)
LDR: ! Imported function 'cellSpursAttachLv2EventQueue' in 'cellSpurs' module (0x7589fc)
LDR: ! Imported function 'cellSpursCreateTask' in 'cellSpurs' module (0x758a1c)
LDR: ! Imported function 'cellSpursAddWorkloadWithAttribute' in 'cellSpurs' module (0x758a3c)
LDR: ! Imported function 'cellSpursSetExceptionEventHandler' in 'cellSpurs' module (0x758a5c)
LDR: ! Imported function '_cellSpursSendSignal' in 'cellSpurs' module (0x758a7c)
LDR: ! Imported function '_cellSpursWorkloadAttributeInitialize' in 'cellSpurs' module (0x758a9c)
LDR: ! Imported function 'cellSpursReadyCountStore' in 'cellSpurs' module (0x758abc)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0x75759c)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0x7575bc)
LDR: ! Imported function 'cellSysmoduleIsLoaded' in 'cellSysmodule' module (0x7575dc)
LDR: ! Imported function 'cellSysmoduleInitialize' in 'cellSysmodule' module (0x7575fc)
LDR: ! Imported function 'cellPhotoExportInitialize2' in 'cellPhotoUtility' module (0x75761c)
LDR: ! Imported function 'cellPhotoExportFromFile' in 'cellPhotoUtility' module (0x75763c)
LDR: ! Imported function 'cellPhotoExportFinalize' in 'cellPhotoUtility' module (0x75765c)
LDR: ! Imported function 'cellSysutilUnregisterCallback' in 'cellSysutil' module (0x75767c)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0x75769c)
LDR: ! Imported function 'cellSysCacheMount' in 'cellSysutil' module (0x7576bc)
LDR: ! Imported function 'cellMsgDialogClose' in 'cellSysutil' module (0x7576dc)
LDR: ! Imported function 'cellMsgDialogOpenErrorCode' in 'cellSysutil' module (0x7576fc)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0x75771c)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0x75773c)
LDR: ! Imported function 'cellSysCacheClear' in 'cellSysutil' module (0x75775c)
LDR: ! Imported function 'cellMsgDialogOpen2' in 'cellSysutil' module (0x75777c)
LDR: ! Imported function 'cellSaveDataAutoSave2' in 'cellSysutil' module (0x75779c)
LDR: ! Imported function 'cellMsgDialogProgressBarInc' in 'cellSysutil' module (0x7577bc)
LDR: ! Imported function 'cellMsgDialogProgressBarSetMsg' in 'cellSysutil' module (0x7577dc)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0x7577fc)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0x75781c)
LDR: ! Imported function 'cellAudioOutSetCopyControl' in 'cellSysutil' module (0x75783c)
LDR: ! Imported function 'cellSysutilDisableBgmPlayback' in 'cellSysutil' module (0x75785c)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module (0x75787c)
LDR: ! Imported function 'cellSaveDataAutoLoad2' in 'cellSysutil' module (0x75789c)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0x758e9c)
LDR: ! Imported function 'cellOskDialogGetSize' in 'cellSysutil' module (0x758ebc)
LDR: ! Imported function 'cellOskDialogUnloadAsync' in 'cellSysutil' module (0x758edc)
LDR: ! Imported function 'cellAudioOutGetDeviceInfo' in 'cellSysutil' module (0x758efc)
LDR: ! Imported function 'cellOskDialogAddSupportLanguage' in 'cellSysutil' module (0x758f1c)
LDR: ! Imported function 'cellOskDialogLoadAsync' in 'cellSysutil' module (0x758f3c)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0x758f5c)
LDR: ! Imported function 'cellVideoOutGetResolutionAvailability' in 'cellSysutil' module (0x758f7c)
LDR: ! Imported function 'cellOskDialogSetKeyLayoutOption' in 'cellSysutil' module (0x758f9c)
LDR: ! Imported function 'cellOskDialogAbort' in 'cellSysutil' module (0x758fbc)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0x758fdc)
LDR: ! Imported function 'cellAudioOutGetNumberOfDevice' in 'cellSysutil' module (0x758ffc)
LDR: ! Imported function 'cellAudioOutGetConfiguration' in 'cellSysutil' module (0x75901c)
LDR: ! Imported function 'cellOskDialogSetLayoutMode' in 'cellSysutil' module (0x75903c)
LDR: ! Imported function 'sys_net_initialize_network_ex' in 'sys_net' module (0x7578bc)
LDR: ! Imported function 'sys_net_if_ctl' in 'sys_net' module (0x7578dc)
LDR: ! Imported function 'sys_net_finalize_network' in 'sys_net' module (0x7578fc)
LDR: ! Imported function 'sys_net_free_thread_context' in 'sys_net' module (0x75791c)
LDR: ! Imported function 'socketpoll' in 'sys_net' module (0x75905c)
LDR: ! Imported function 'getsockname' in 'sys_net' module (0x75907c)
LDR: ! Imported function 'recvfrom' in 'sys_net' module (0x75909c)
LDR: ! Imported function 'listen' in 'sys_net' module (0x7590bc)
LDR: ! Imported function 'socketselect' in 'sys_net' module (0x7590dc)
LDR: ! Imported function 'getsockopt' in 'sys_net' module (0x7590fc)
LDR: ! Imported function '_sys_net_errno_loc' in 'sys_net' module (0x75911c)
LDR: ! Imported function 'connect' in 'sys_net' module (0x75913c)
LDR: ! Imported function 'socketclose' in 'sys_net' module (0x75915c)
LDR: ! Imported function 'gethostbyname' in 'sys_net' module (0x75917c)
LDR: ! Imported function 'setsockopt' in 'sys_net' module (0x75919c)
LDR: ! Imported function 'sendto' in 'sys_net' module (0x7591bc)
LDR: ! Imported function 'socket' in 'sys_net' module (0x7591dc)
LDR: ! Imported function 'shutdown' in 'sys_net' module (0x7591fc)
LDR: ! Imported function 'inet_aton' in 'sys_net' module (0x75921c)
LDR: ! Imported function 'bind' in 'sys_net' module (0x75923c)
LDR: ! Imported function 'accept' in 'sys_net' module (0x75925c)
LDR: ! Imported function 'send' in 'sys_net' module (0x75927c)
LDR: ! Imported function 'recv' in 'sys_net' module (0x75929c)
LDR: ! Imported function 'sceNpBasicSendMessageGui' in 'sceNp' module (0x75793c)
LDR: ! Imported function 'sceNpBasicSetPresence' in 'sceNp' module (0x75795c)
LDR: ! Imported function 'sceNpBasicAbortGui' in 'sceNp' module (0x75797c)
LDR: ! Imported function 'sceNpTerm' in 'sceNp' module (0x75799c)
LDR: ! Imported function 'sceNpManagerUnregisterCallback' in 'sceNp' module (0x7579bc)
LDR: ! Imported function 'sceNpBasicRecvMessageAttachmentLoad' in 'sceNp' module (0x7579dc)
LDR: ! Imported function 'sceNpBasicRecvMessageCustom' in 'sceNp' module (0x7579fc)
LDR: ! Imported function 'sceNpManagerRequestTicket2' in 'sceNp' module (0x757a1c)
LDR: ! Imported function 'sceNpManagerGetEntitlementById' in 'sceNp' module (0x757a3c)
LDR: ! Imported function 'sceNpManagerGetStatus' in 'sceNp' module (0x757a5c)
LDR: ! Imported function 'sceNpDrmIsAvailable' in 'sceNp' module (0x757a7c)
LDR: ! Imported function 'sceNpManagerGetAccountRegion' in 'sceNp' module (0x757a9c)
LDR: ! Imported function 'sceNpInit' in 'sceNp' module (0x757abc)
LDR: ! Imported function 'sceNpManagerGetOnlineId' in 'sceNp' module (0x757adc)
LDR: ! Imported function 'sceNpBasicSetPresenceDetails' in 'sceNp' module (0x757afc)
LDR: ! Imported function 'sceNpManagerRegisterCallback' in 'sceNp' module (0x757b1c)
LDR: ! Imported function 'sceNpManagerGetChatRestrictionFlag' in 'sceNp' module (0x757b3c)
LDR: ! Imported function 'sceNpBasicSendMessage' in 'sceNp' module (0x757b5c)
LDR: ! Imported function 'sceNpManagerGetOnlineName' in 'sceNp' module (0x757b7c)
LDR: ! Imported function 'sceNpManagerGetNpId' in 'sceNp' module (0x757b9c)
LDR: ! Imported function 'sceNpManagerGetTicket' in 'sceNp' module (0x7593bc)
LDR: ! Imported function 'sceNpBasicAddFriend' in 'sceNp' module (0x7593dc)
LDR: ! Imported function 'sceNpManagerGetTicketParam' in 'sceNp' module (0x7593fc)
LDR: ! Imported function 'sceNpBasicGetBlockListEntryCount' in 'sceNp' module (0x75941c)
LDR: ! Imported function 'sceNpBasicUnregisterHandler' in 'sceNp' module (0x75943c)
LDR: ! Imported function 'sceNpManagerGetEntitlementIdList' in 'sceNp' module (0x75945c)
LDR: ! Imported function 'sceNpBasicRegisterHandler' in 'sceNp' module (0x75947c)
LDR: ! Imported function 'sceNpBasicAddPlayersHistoryAsync' in 'sceNp' module (0x75949c)
LDR: ! Imported function 'sceNpManagerGetNetworkTime' in 'sceNp' module (0x7594bc)
LDR: ! Imported function 'sceNpUtilCmpNpId' in 'sceNp' module (0x7594dc)
LDR: ! Imported function 'sceNpBasicGetEvent' in 'sceNp' module (0x7594fc)
LDR: ! Imported function 'sceNpBasicGetBlockListEntry' in 'sceNp' module (0x75951c)
LDR: ! Imported function 'cellRtcGetCurrentClockLocalTime' in 'cellRtc' module (0x757bbc)
LDR: ! Imported function 'cellRtcGetCurrentClock' in 'cellRtc' module (0x757bdc)
LDR: ! Imported function 'cellRtcGetTick' in 'cellRtc' module (0x757bfc)
LDR: ! Imported function 'cellRtcSetTick' in 'cellRtc' module (0x75953c)
LDR: ! Imported function 'cellRtcGetTime_t' in 'cellRtc' module (0x75955c)
LDR: ! Imported function 'cellMicIsAttached' in 'cellMic' module (0x757c1c)
LDR: ! Imported function 'cellMicRead' in 'cellMic' module (0x75957c)
LDR: ! Imported function 'cellMicRemoveNotifyEventQueue' in 'cellMic' module (0x75959c)
LDR: ! Imported function 'cellMicReset' in 'cellMic' module (0x7595bc)
LDR: ! Imported function 'cellMicSetNotifyEventQueue' in 'cellMic' module (0x7595dc)
LDR: ! Imported function 'cellMicInit' in 'cellMic' module (0x7595fc)
LDR: ! Imported function 'cellMicClose' in 'cellMic' module (0x75961c)
LDR: ! Imported function 'cellMicEnd' in 'cellMic' module (0x75963c)
LDR: ! Imported function 'cellMicOpen' in 'cellMic' module (0x75965c)
LDR: ! Imported function 'cellMicStart' in 'cellMic' module (0x75967c)
LDR: ! Imported function 'cellMicStop' in 'cellMic' module (0x75969c)
LDR: ! Imported function 'sceNpTrophyRegisterContext' in 'sceNpTrophy' module (0x757c3c)
LDR: ! Imported function 'sceNpTrophyCreateHandle' in 'sceNpTrophy' module (0x757c5c)
LDR: ! Imported function 'sceNpTrophyInit' in 'sceNpTrophy' module (0x757c7c)
LDR: ! Imported function 'sceNpTrophyUnlockTrophy' in 'sceNpTrophy' module (0x757c9c)
LDR: ! Imported function 'sceNpTrophyCreateContext' in 'sceNpTrophy' module (0x757cbc)
LDR: ! Imported function 'sceNpCommerce2DoCheckoutStartAsync' in 'sceNpCommerce2' module (0x757cdc)
LDR: ! Imported function 'sceNpCommerce2DestroyReq' in 'sceNpCommerce2' module (0x757cfc)
LDR: ! Imported function 'sceNpCommerce2Init' in 'sceNpCommerce2' module (0x757d1c)
LDR: ! Imported function 'sceNpCommerce2Term' in 'sceNpCommerce2' module (0x757d3c)
LDR: ! Imported function 'sceNpCommerce2CreateSessionAbort' in 'sceNpCommerce2' module (0x757d5c)
LDR: ! Imported function 'sceNpCommerce2DestroyCtx' in 'sceNpCommerce2' module (0x757d7c)
LDR: ! Imported function 'sceNpCommerce2AbortReq' in 'sceNpCommerce2' module (0x757d9c)
LDR: ! Imported function 'sceNpCommerce2GetProductInfoStart' in 'sceNpCommerce2' module (0x757dbc)
LDR: ! Imported function 'sceNpCommerce2CreateSessionFinish' in 'sceNpCommerce2' module (0x757ddc)
LDR: ! Imported function 'sceNpCommerce2GetProductInfoCreateReq' in 'sceNpCommerce2' module (0x757dfc)
LDR: ! Imported function 'sceNpCommerce2GetProductInfoGetResult' in 'sceNpCommerce2' module (0x757e1c)
LDR: ! Imported function 'sceNpCommerce2CreateSessionStart' in 'sceNpCommerce2' module (0x757e3c)
LDR: ! Imported function 'sceNpCommerce2DoCheckoutFinishAsync' in 'sceNpCommerce2' module (0x757e5c)
LDR: ! Imported function 'sceNpCommerce2CreateCtx' in 'sceNpCommerce2' module (0x757e7c)
LDR: ! Imported function 'sceNpCommerce2GetGameSkuInfoFromGameProductInfo' in 'sceNpCommerce2' module (0x757e9c)
LDR: ! Imported function 'sceNpCommerce2GetGameProductInfo' in 'sceNpCommerce2' module (0x757ebc)
LDR: ! Imported function 'sceNpCommerce2DestroyGetProductInfoResult' in 'sceNpCommerce2' module (0x757edc)
LDR: ! Imported function 'sceNpCommerce2InitGetProductInfoResult' in 'sceNpCommerce2' module (0x757efc)
LDR: ! Imported function 'cellHttpInit' in 'cellHttp' module (0x757f1c)
LDR: ! Imported function 'cellHttpsInit' in 'cellHttp' module (0x757f3c)
LDR: ! Imported function 'cellHttpEnd' in 'cellHttp' module (0x757f5c)
LDR: ! Imported function 'cellHttpsEnd' in 'cellHttp' module (0x757f7c)
LDR: ! Imported function 'cellSslEnd' in 'cellSsl' module (0x757f9c)
LDR: ! Imported function 'cellSslCertificateLoader' in 'cellSsl' module (0x757fbc)
LDR: ! Imported function 'cellSslInit' in 'cellSsl' module (0x757fdc)
LDR: ! Imported function 'cellSaveDataListDelete' in 'cellSaveData' module (0x757ffc)
LDR: ! Imported function 'cellSearchStartListSearch' in 'cellSearchUtility' module (0x75801c)
LDR: ! Imported function 'cellSearchGetContentInfoByOffset' in 'cellSearchUtility' module (0x75803c)
LDR: ! Imported function 'cellSearchStartContentSearchInList' in 'cellSearchUtility' module (0x75805c)
LDR: ! Imported function 'cellSearchEnd' in 'cellSearchUtility' module (0x75807c)
LDR: ! Imported function 'cellSearchGetContentInfoByContentId' in 'cellSearchUtility' module (0x75809c)
LDR: ! Imported function 'cellSearchFinalize' in 'cellSearchUtility' module (0x7580bc)
LDR: ! Imported function 'cellSearchInitialize' in 'cellSearchUtility' module (0x7580dc)
LDR: ! Imported function 'cellSearchPrepareFile' in 'cellSearchUtility' module (0x7580fc)
LDR: ! Imported function 'cellSearchGetContentInfoPath' in 'cellSearchUtility' module (0x75811c)
LDR: ! Imported function 'cellGameGetParamString' in 'cellGame' module (0x75813c)
LDR: ! Imported function 'cellGameCreateGameData' in 'cellGame' module (0x75815c)
LDR: ! Imported function 'cellGameContentPermit' in 'cellGame' module (0x75817c)
LDR: ! Imported function 'cellGameContentErrorDialog' in 'cellGame' module (0x75819c)
LDR: ! Imported function 'cellGameDataCheck' in 'cellGame' module (0x7581bc)
LDR: ! Imported function 'cellGameGetSizeKB' in 'cellGame' module (0x7581dc)
LDR: ! Imported function 'cellGameBootCheck' in 'cellGame' module (0x7581fc)
LDR: ! Imported function 'cellJpgDecReadHeader' in 'cellJpgDec' module (0x75821c)
LDR: ! Imported function 'cellJpgDecClose' in 'cellJpgDec' module (0x75823c)
LDR: ! Imported function 'cellJpgDecOpen' in 'cellJpgDec' module (0x75825c)
LDR: ! Imported function 'cellJpgDecCreate' in 'cellJpgDec' module (0x75827c)
LDR: ! Imported function 'cellJpgDecDecodeData' in 'cellJpgDec' module (0x75829c)
LDR: ! Imported function 'cellJpgDecDestroy' in 'cellJpgDec' module (0x7582bc)
LDR: ! Imported function 'cellJpgDecSetParameter' in 'cellJpgDec' module (0x7582dc)
LDR: E Unknown module 'DFEngine'
LDR: E Unknown function '0x17D490A3' in 'DFEngine' module (0x7582fc)
LDR: ! Imported function 'cellGameGetHomeLaunchOptionPath' in 'cellGameExec' module (0x75831c)
LDR: ! Imported function 'cellGameGetBootGameInfo' in 'cellGameExec' module (0x75833c)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0x75851c)
LDR: ! Imported function 'cellKbGetConfiguration' in 'sys_io' module (0x75853c)
LDR: ! Imported function 'cellKbClearBuf' in 'sys_io' module (0x75855c)
LDR: ! Imported function 'cellKbGetInfo' in 'sys_io' module (0x75857c)
LDR: ! Imported function 'cellMouseGetData' in 'sys_io' module (0x75859c)
LDR: ! Imported function 'cellMouseClearBuf' in 'sys_io' module (0x7585bc)
LDR: ! Imported function 'cellKbInit' in 'sys_io' module (0x7585dc)
LDR: ! Imported function 'cellKbCnvRawCode' in 'sys_io' module (0x7585fc)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0x75861c)
LDR: ! Imported function 'cellPadSetPortSetting' in 'sys_io' module (0x75863c)
LDR: ! Imported function 'cellMouseGetInfo' in 'sys_io' module (0x75865c)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0x75867c)
LDR: ! Imported function 'cellKbSetCodeType' in 'sys_io' module (0x75869c)
LDR: ! Imported function 'cellPadGetInfo2' in 'sys_io' module (0x7586bc)
LDR: ! Imported function 'cellKbEnd' in 'sys_io' module (0x7586dc)
LDR: ! Imported function 'cellMouseInit' in 'sys_io' module (0x7586fc)
LDR: ! Imported function 'cellKbSetReadMode' in 'sys_io' module (0x75871c)
LDR: ! Imported function 'cellMouseEnd' in 'sys_io' module (0x75873c)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module (0x75875c)
LDR: ! Imported function 'cellKbRead' in 'sys_io' module (0x75877c)
LDR: ! Imported function 'cellKey2CharClose' in 'cellKey2char' module (0x758adc)
LDR: ! Imported function 'cellKey2CharGetChar' in 'cellKey2char' module (0x758afc)
LDR: ! Imported function 'cellKey2CharOpen' in 'cellKey2char' module (0x758b1c)
LDR: ! Imported function 'cellKey2CharSetMode' in 'cellKey2char' module (0x758b3c)
LDR: ! Imported function 'cellGcmSetUserHandler' in 'cellGcmSys' module (0x758b5c)
LDR: ! Imported function 'cellGcmSetQueueHandler' in 'cellGcmSys' module (0x758b7c)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0x758b9c)
LDR: ! Imported function '_cellGcmSetFlipCommand' in 'cellGcmSys' module (0x758bbc)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0x758bdc)
LDR: ! Imported function 'cellGcmSortRemapEaIoAddress' in 'cellGcmSys' module (0x758bfc)
LDR: ! Imported function 'cellGcmGetOffsetTable' in 'cellGcmSys' module (0x758c1c)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0x758c3c)
LDR: ! Imported function 'cellGcmBindTile' in 'cellGcmSys' module (0x758c5c)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0x758c7c)
LDR: ! Imported function 'cellGcmSetDebugOutputLevel' in 'cellGcmSys' module (0x758c9c)
LDR: ! Imported function 'cellGcmBindZcull' in 'cellGcmSys' module (0x758cbc)
LDR: ! Imported function 'cellGcmMapMainMemory' in 'cellGcmSys' module (0x758cdc)
LDR: ! Imported function 'cellGcmSetFlipHandler' in 'cellGcmSys' module (0x758cfc)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0x758d1c)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0x758d3c)
LDR: ! Imported function 'cellGcmUnbindZcull' in 'cellGcmSys' module (0x758d5c)
LDR: ! Imported function 'cellGcmSetVBlankHandler' in 'cellGcmSys' module (0x758d7c)
LDR: ! Imported function 'cellGcmSetFlipImmediate' in 'cellGcmSys' module (0x758d9c)
LDR: ! Imported function 'cellGcmSetTileInfo' in 'cellGcmSys' module (0x758dbc)
LDR: ! Imported function 'cellGcmSetGraphicsHandler' in 'cellGcmSys' module (0x758ddc)
LDR: ! Imported function '_cellGcmSetFlipCommandWithWaitLabel' in 'cellGcmSys' module (0x758dfc)
LDR: ! Imported function 'cellGcmUnbindTile' in 'cellGcmSys' module (0x758e1c)
LDR: ! Imported function 'cellGcmUnmapIoAddress' in 'cellGcmSys' module (0x758e3c)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0x758e5c)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0x758e7c)
LDR: ! Imported function 'cellNetCtlNetStartDialogLoadAsync' in 'cellNetCtl' module (0x7592bc)
LDR: ! Imported function 'cellNetCtlAddHandler' in 'cellNetCtl' module (0x7592dc)
LDR: ! Imported function 'cellNetCtlNetStartDialogUnloadAsync' in 'cellNetCtl' module (0x7592fc)
LDR: ! Imported function 'cellNetCtlTerm' in 'cellNetCtl' module (0x75931c)
LDR: ! Imported function 'cellNetCtlGetInfo' in 'cellNetCtl' module (0x75933c)
LDR: ! Imported function 'cellNetCtlGetState' in 'cellNetCtl' module (0x75935c)
LDR: ! Imported function 'cellNetCtlDelHandler' in 'cellNetCtl' module (0x75937c)
LDR: ! Imported function 'cellNetCtlInit' in 'cellNetCtl' module (0x75939c)
LDR: ! Imported function 'UTF16stoUTF8s' in 'cellL10n' module (0x7596bc)
LDR: ! Imported function 'UTF8stoUTF16s' in 'cellL10n' module (0x7596dc)
MEM: ! Thread Local Storage initialized (g_tls_start=0x1460000, user_size=0x2b8)
*** TLS segment addr: 0x008c11a8
*** TLS segment size: 0x0000000c
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7d410, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00462968]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003fc04)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7d060, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7c3a8, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7c3d0, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7c3f8, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7c2e0, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7c308, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7c330, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7c358, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xf7c380, attr=*0x76a54c)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x13e0508, attr=*0x920150)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x13e0488, attr=*0x920150)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x91ff78, attr=*0xd003fbb0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x927788, attr=*0xd003fbb0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00390f94]} sys_memory: sys_memory_allocate(size=0x6d0000, flags=0x200, alloc_addr=*0xd003fa70)
HLE: W {PPU[0x1] Thread (main_thread)[0x004613ac]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd003f920)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20700120, attr=*0xd003f920)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x207001c0, attr=*0xd003f920)
HLE: W {PPU[0x1] Thread (main_thread)[0x00390dfc]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f9a0)
TTY: ****************************************************\n
TTY: *******PS3 Initial Memory***************************\n
TTY: ****************************************************\n
TTY: ****************************************************\n
TTY: Available User Memory is 260243456 bytes\n
TTY: Total User Memory was 268435456 bytes\n
TTY: ****************************************************\n
TTY: ****************************************************\n
TTY: ****************************************************\n
TTY: ****************************************************\n
HLE: W {PPU[0x1] Thread (main_thread)[0x004613ac]} sys_memory: sys_memory_allocate(size=0xd00000, flags=0x400, alloc_addr=*0xd003f7c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00390ec0]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003f9a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x004613ac]} sys_memory: sys_memory_allocate(size=0x7e00000, flags=0x400, alloc_addr=*0xd003f7c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00390fb8]} sys_memory: sys_memory_free(addr=0x20000000)
TTY: ****************************************************\n
TTY: *******PS3 Heap Initial Sizes***********************\n
TTY: ****************************************************\n
TTY: ****************************************************\n
TTY: Small is  12.00 MB (12582912 bytes)\n
TTY: String is 0.06 MB (65536 bytes)\n
TTY: Large is  125.00 MB (131072000 bytes)\n
TTY: ****************************************************\n
TTY: ****************************************************\n
TTY: ****************************************************\n
TTY: ****************************************************\n
HLE: W {PPU[0x1] Thread (main_thread)[0x00438d44]} sys_time: sys_time_get_timezone(timezone=*0xd003fb20, summertime=*0xd003fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x0043abf4]} sys_time: sys_time_get_timezone(timezone=*0xd003fb20, summertime=*0xd003fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x004385d8]} sys_time: sys_time_get_timezone(timezone=*0xd003fb20, summertime=*0xd003fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x0043abf4]} sys_time: sys_time_get_timezone(timezone=*0xd003fb20, summertime=*0xd003fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9254a8, attr=*0xd003fbf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x925480, attr=*0xd003fbf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc93950, attr=*0xd003fb80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc595e0, attr=*0xd003fb60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc595f8, attr=*0xd003fb60)
TTY: BootOnlineGameConfig::BootOnlineGameConfig: Constructor called\n
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17d58, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17d78, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17da8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17dc8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17df8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17e18, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17e48, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17e68, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17e98, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17eb8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17ee8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17f08, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17f38, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17f58, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17f88, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17fa8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17fd8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc17ff8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18028, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18048, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18078, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18098, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc180c8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc180e8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18118, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18138, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18168, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18188, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc181b8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc181d8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18208, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18228, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18258, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18278, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc182a8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc182c8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc182f8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18318, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18348, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18368, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18398, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc183b8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc183e8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18408, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18438, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18458, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18488, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc184a8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc184d8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc184f8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18528, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18548, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18578, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18598, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc185c8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc185e8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18618, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18638, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18668, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18688, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc186b8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc186d8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18708, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18728, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18758, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18778, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc187a8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc187c8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc187f8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18818, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18848, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18868, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18898, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc188b8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc188e8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18908, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18938, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18958, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18988, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc189a8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc189d8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc189f8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18a28, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18a48, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18a78, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18a98, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18ac8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18ae8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18b18, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18b38, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18b68, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18b88, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18bb8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18bd8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18c08, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18c28, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18c58, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18c78, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18ca8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18cc8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18cf8, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc18d18, attr=*0xd003fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xbb75d0, attr=*0xd003fb60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xb8efe0, attr=*0xd003fb80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xb8d170, attr=*0xd003fb10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xb8d188, attr=*0xd003fb10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xb8cce0, attr=*0xd003fb60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xb8cb78, attr=*0xd003fb80)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xb8c2a8, attr=*0xd003fb60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xb8c2c0, attr=*0xd003fb60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xb8c2d8, attr=*0xd003fb60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x938568, attr=*0xd003fb60)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x938580, attr=*0xd003fb60)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075701c]} sys_prx TODO: sys_prx_register_library(library=*0x763f14)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075701c]} sys_prx TODO: sys_prx_register_library(library=*0x763f30)
HLE: W {PPU[0x1] Thread (main_thread)[0x007577fc]} cellSysutil: cellSysutilRegisterCallback(slot=0, func=*0x870ac8, userdata=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0011: CELL_SYSMODULE_AUDIO)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0xf01d: CELL_SYSMODULE_ADEC_M4AAC)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0xf01e: CELL_SYSMODULE_ADEC_MP3)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0xf02f: CELL_SYSMODULE_SYSUTIL_SEARCH)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x003c0118]} sys_spu: sys_spu_initialize(max_usable_spu=6, max_raw_spu=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0000: CELL_SYSMODULE_NET)
HLE: W {PPU[0x1] Thread (main_thread)[0x007578bc]} sys_net: sys_net_initialize_network_ex(param=*0xd003f580)
TTY: ParticleSystem allocated 753664 bytes for MaintainParams\n
TTY: ParticleSystem allocated 2129920 bytes for CollideParams\n
TTY: ParticleSystem allocated 36864 bytes for CollAABB objects\n
HLE: W {PPU[0x1] Thread (main_thread)[0x007574bc]} cellSpurs: _cellSpursAttributeInitialize(attr=*0xd003f5b0, revision=2, sdkVersion=0x250001, nSpus=5, spuPriority=16, ppuPriority=1000, exitIfNoWork=-256)
HLE: W {PPU[0x1] Thread (main_thread)[0x007573bc]} cellSpurs: cellSpursAttributeSetNamePrefix(attr=*0xd003f5b0, prefix=*0xd003f590, size=14)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075751c]} cellSpurs: cellSpursAttributeSetSpuThreadGroupType(attr=*0xd003f5b0, type=24)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} cellSpurs: cellSpursInitializeWithAttribute(spurs=*0xc91900, attr=*0xd003f5b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0xc91900, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_group_create(id=*0xc92630, num=5, prio=16, attr=*0xd003f430)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu TODO: Unsupported SPU Thread Group type (0x18)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_initialize(thread=*0xc92634, group=0x9a, spu_num=0, img=*0xc92670, attr=*0xd003f3f8, arg=*0xd003f408)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_initialize(thread=*0xc92638, group=0x9a, spu_num=1, img=*0xc92670, attr=*0xd003f3f8, arg=*0xd003f408)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_initialize(thread=*0xc9263c, group=0x9a, spu_num=2, img=*0xc92670, attr=*0xd003f3f8, arg=*0xd003f408)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_initialize(thread=*0xc92640, group=0x9a, spu_num=3, img=*0xc92670, attr=*0xd003f3f8, arg=*0xd003f408)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_initialize(thread=*0xc92644, group=0x9a, spu_num=4, img=*0xc92670, attr=*0xd003f3f8, arg=*0xd003f408)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc926b0, attr=*0xd003f358)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sysPrxForUser: sys_lwcond_create(lwcond=*0xc926c8, lwmutex=*0xc926b0, attr=*0xd003f360)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_event: sys_event_queue_create(equeue_id=*0xc9265c, attr=*0xd003f358, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x9a, eq=0xa2, req=0xffffffffffff0000, spup=*0xc919c9)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_event: sys_event_port_create(eport_id=*0xc92660, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_event: sys_event_port_connect_local(eport_id=0xa3, equeue_id=0xa2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0xc91900, flag=1)
HLE: W {PPU[0xa5] Thread (WOHD_multiSPU_SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_start(id=0x9a)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_group_connect_event(id=0x9a, eq=0xa2, et=2)
SPU: S {PPU[0xa5] Thread (WOHD_multiSPU_SpursHdlr0)[0x00000000]} SPU Database initialized...
SPU: S {PPU[0xa5] Thread (WOHD_multiSPU_SpursHdlr0)[0x00000000]} SPU Recompiler (ASMJIT) created...
HLE: W {PPU[0xa5] Thread (WOHD_multiSPU_SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0x9a, cause=*0x0, status=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007574bc]} cellSpurs: _cellSpursAttributeInitialize(attr=*0xd003f5b0, revision=2, sdkVersion=0x250001, nSpus=1, spuPriority=128, ppuPriority=1000, exitIfNoWork=70642176)
HLE: W {PPU[0x1] Thread (main_thread)[0x007573bc]} cellSpurs: cellSpursAttributeSetNamePrefix(attr=*0xd003f5b0, prefix=*0xd003f5a0, size=15)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} cellSpurs: cellSpursInitializeWithAttribute(spurs=*0xc92900, attr=*0xd003f5b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0xc92900, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003f4f8, attr=*0xd003f4d0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_group_create(id=*0xc93630, num=1, prio=128, attr=*0xd003f430)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_initialize(thread=*0xc93634, group=0xb7, spu_num=0, img=*0xc93670, attr=*0xd003f3f8, arg=*0xd003f408)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xc936b0, attr=*0xd003f358)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sysPrxForUser: sys_lwcond_create(lwcond=*0xc936c8, lwmutex=*0xc936b0, attr=*0xd003f360)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_event: sys_event_queue_create(equeue_id=*0xc9365c, attr=*0xd003f358, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0xb7, eq=0xbb, req=0xffffffffffff0000, spup=*0xc929c9)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_event: sys_event_port_create(eport_id=*0xc93660, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_event: sys_event_port_connect_local(eport_id=0xbc, equeue_id=0xbb)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0xc92900, flag=1)
HLE: W {PPU[0xbe] Thread (WOHD_singleSPU_SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_start(id=0xb7)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075753c]} sys_spu: sys_spu_thread_group_connect_event(id=0xb7, eq=0xbb, et=2)
HLE: W {PPU[0xbe] Thread (WOHD_singleSPU_SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0xb7, cause=*0x0, status=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x004653e8]} sys_event: sys_event_queue_create(equeue_id=*0xc93900, attr=*0xd003f4b4, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xc93908, entry=0x88ffd8, arg=0xc93900, prio=1000, stacksize=0x10000, flags=0x1, threadname=*0x7be4e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xc93908, param=*0xd003f430, arg=0xc93900, unk=0x0, prio=1000, stacksize=0x10000, flags=0x1, threadname=*0x7be4e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0xc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0046542c]} sys_event: sys_event_port_create(eport_id=*0xc93914, port_type=1, name=0xd0a77)
HLE: W {PPU[0x1] Thread (main_thread)[0x0046543c]} sys_event: sys_event_port_connect_local(eport_id=0xc1, equeue_id=0xbf)
HLE: W {PPU[0x1] Thread (main_thread)[0x007589fc]} cellSpurs: cellSpursAttachLv2EventQueue(spurs=*0xc91900, queue=0xbf, port=*0xd003f4b0, isDynamic=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007589fc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x9a, eq=0xbf, req=0x2, spup=*0xd003f4b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x004653e8]} sys_event: sys_event_queue_create(equeue_id=*0xc93928, attr=*0xd003f4b4, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xc93930, entry=0x88ffd8, arg=0xc93928, prio=1000, stacksize=0x10000, flags=0x1, threadname=*0x7be4e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xc93930, param=*0xd003f430, arg=0xc93928, unk=0x0, prio=1000, stacksize=0x10000, flags=0x1, threadname=*0x7be4e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0xc3)
HLE: W {PPU[0x1] Thread (main_thread)[0x0046542c]} sys_event: sys_event_port_create(eport_id=*0xc9393c, port_type=1, name=0xd0a77)
HLE: W {PPU[0x1] Thread (main_thread)[0x0046543c]} sys_event: sys_event_port_connect_local(eport_id=0xc4, equeue_id=0xc2)
HLE: W {PPU[0x1] Thread (main_thread)[0x007589fc]} cellSpurs: cellSpursAttachLv2EventQueue(spurs=*0xc92900, queue=0xc2, port=*0xd003f4b0, isDynamic=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007589fc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0xb7, eq=0xc2, req=0x2, spup=*0xd003f4b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x003e0e24]} sys_mutex: sys_mutex_create(mutex_id=*0xca1e30, attr=*0xd003f3d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x005a282c]} sys_mutex: sys_mutex_create(mutex_id=*0xf93624, attr=*0xd003f2a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007576bc]} cellSysutil: cellSysCacheMount(param=*0xd003ee80)
G: W {PPU[0x1] Thread (main_thread)[0x007576bc]} Error creating directory 'D:/Emulateurs/Rpcs3/dev_hdd1/cache': 0xb7
HLE: E {PPU[0x1] Thread (main_thread)[0x0075775c]} cellSysutil TODO: cellSysCacheClear()
TTY: ================================================\n
TTY: HOST Memory\n
TTY: \n
TTY: Pushbuffer(total)     8.25 MB(8650752 bytes)\n
TTY: Debug                 0.00 MB(0 bytes)\n
TTY: User                  76.75 MB(80478208 bytes)\n
TTY: Total                 85.00 MB(89128960 bytes)\n
TTY: \n
TTY: ================================================\n
HLE: E {PPU[0x1] Thread (main_thread)[0x003e0fe0]} sys_mmapper: sys_mmapper_allocate_address(size=0x10000000, flags=0x400, alignment=0x0, alloc_addr=*0xca1e94)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075715c]} sys_mmapper: sys_mmapper_allocate_memory(size=0x4b00000, flags=0x400, mem_id=*0xca1e98)
HLE: E {PPU[0x1] Thread (main_thread)[0x007571bc]} sys_mmapper: sys_mmapper_map_memory(addr=0x0, mem_id=0xc7, flags=0x40000)
HLE: W {PPU[0x1] Thread (main_thread)[0x003e101c]} sys_memory: sys_memory_container_create(cid=*0xca1ea0, size=0xa00000)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075705c]} sys_mmapper: sys_mmapper_allocate_memory_from_container(size=0xa00000, cid=0xc8, flags=0x400, mem_id=*0xca1e9c)
HLE: E {PPU[0x1] Thread (main_thread)[0x007571bc]} sys_mmapper: sys_mmapper_map_memory(addr=0x4b00000, mem_id=0xc9, flags=0x40000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758b9c]} cellGcmSys: _cellGcmInitBody(context=**0x13de394, cmdSize=0x10000, ioSize=0x5500000, ioAddress=0x22000000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758b9c]} cellGcmSys: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758b9c]} cellGcmSys: cellGcmInit(): 256MB io address space used
HLE: W {PPU[0x1] Thread (main_thread)[0x00758f7c]} cellSysutil: cellVideoOutGetResolutionAvailability(videoOut=0, resolutionId=0x2, aspect=0, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758e9c]} cellSysutil: cellVideoOutConfigure(videoOut=0, config=*0xd003eeec, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=65536, size=7536640, pitch=5120, comp=7, base=1, bank=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (7)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758b5c]} cellGcmSys: cellGcmSetUserHandler(handler=*0x8a09d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758d7c]} cellGcmSys: cellGcmSetVBlankHandler(handler=*0x8a0a58)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0xfa4410, attr=*0xd003f0d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075851c]} sys_io: cellPadInit(max_connect=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x21fd4980, attr=*0xd003f100)
HLE: W {PPU[0x1] Thread (main_thread)[0x005b9678]} sys_event: sys_event_port_create(eport_id=*0x21fd9e08, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x005b9694]} sys_event: sys_event_queue_create(equeue_id=*0x21fd9e0c, attr=*0xd003f110, event_queue_key=0x0, size=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x005b96a4]} sys_event: sys_event_port_connect_local(eport_id=0xcc, equeue_id=0xcd)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x21fd9e00, entry=0x89ef70, arg=0x21fd4980, prio=255, stacksize=0x10000, flags=0x1, threadname=*0x7ca658)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x21fd9e00, param=*0xd003f080, arg=0x21fd4980, unk=0x0, prio=255, stacksize=0x10000, flags=0x1, threadname=*0x7ca658)
RSX: ! {rsx::thread} RSX thread started
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0xce)
HLE: W {PPU[0x1] Thread (main_thread)[0x007586fc]} sys_io: cellMouseInit(max_connect=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x007585dc]} sys_io: cellKbInit(max_connect=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0021: CELL_SYSMODULE_KEY2CHAR)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075887c]} cellSpurs: cellSpursGetInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a9c]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003eff8, revision=1, sdkVersion=0x250001, pm=*0x847700, size=0x2d00, data=0xfa8e80, priority=*0x768c90, minCnt=0x1, maxCnt=0x4)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075889c]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003eff8, nameClass=*0x7be650, nameInstance=*0xfa8e10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a3c]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xc91900, wid=*0xfa8e08, attr=*0xd003eff8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075885c]} cellSpurs: cellSpursRequestIdleSpu
HLE: E {PPU[0x1] Thread (main_thread)[0x00758a5c]} cellSpurs: cellSpursSetExceptionEventHandler
HLE: E {PPU[0x1] Thread (main_thread)[0x0075887c]} cellSpurs: cellSpursGetInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a9c]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003f088, revision=1, sdkVersion=0x250001, pm=*0x847700, size=0x2d00, data=0xca1f80, priority=*0x768c98, minCnt=0x1, maxCnt=0x1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075889c]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003f088, nameClass=*0x7be650, nameInstance=*0xca1e58)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a3c]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xc92900, wid=*0xca1e50, attr=*0xd003f088)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075885c]} cellSpurs: cellSpursRequestIdleSpu
HLE: E {PPU[0x1] Thread (main_thread)[0x00758a5c]} cellSpurs: cellSpursSetExceptionEventHandler
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075887c]} cellSpurs: cellSpursGetInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a9c]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003efe8, revision=1, sdkVersion=0x250001, pm=*0x847700, size=0x2d00, data=0x10bb600, priority=*0x10db600, minCnt=0x1, maxCnt=0x5)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075889c]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003efe8, nameClass=*0x7be650, nameInstance=*0x10bb490)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a3c]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xc91900, wid=*0x10bb488, attr=*0xd003efe8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075885c]} cellSpurs: cellSpursRequestIdleSpu
HLE: E {PPU[0x1] Thread (main_thread)[0x00758a5c]} cellSpurs: cellSpursSetExceptionEventHandler
HLE: E {PPU[0x1] Thread (main_thread)[0x0075887c]} cellSpurs: cellSpursGetInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a9c]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003efe8, revision=1, sdkVersion=0x250001, pm=*0x847700, size=0x2d00, data=0x10cb600, priority=*0x10db600, minCnt=0x1, maxCnt=0x5)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075889c]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003efe8, nameClass=*0x7be650, nameInstance=*0x10bb510)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a3c]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xc91900, wid=*0x10bb508, attr=*0xd003efe8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075885c]} cellSpurs: cellSpursRequestIdleSpu
HLE: E {PPU[0x1] Thread (main_thread)[0x00758a5c]} cellSpurs: cellSpursSetExceptionEventHandler
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=1, location=0, offset=16056320, size=7864320, pitch=10240, comp=7, base=116, bank=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (7)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=2, location=0, offset=23920640, size=7864320, pitch=10240, comp=11, base=236, bank=1)
HLE: E {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo: bad compression mode! (11)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758cbc]} cellGcmSys: cellGcmBindZcull(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=3, location=1, offset=13369344, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=4, location=1, offset=17301504, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=5, location=0, offset=31784960, size=524288, pitch=1280, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=5)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=6, location=0, offset=32309248, size=524288, pitch=1280, comp=0, base=0, bank=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=6)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758cbc]} cellGcmSys: cellGcmBindZcull(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=7, location=0, offset=32833536, size=524288, pitch=1024, comp=0, base=0, bank=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=7)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758cbc]} cellGcmSys: cellGcmBindZcull(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=8, location=0, offset=33357824, size=131072, pitch=512, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=9, location=0, offset=33488896, size=524288, pitch=1024, comp=0, base=0, bank=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=9)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758cbc]} cellGcmSys: cellGcmBindZcull(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=10, location=0, offset=34013184, size=65536, pitch=512, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=10)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=11, location=0, offset=34078720, size=131072, pitch=512, comp=0, base=0, bank=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=11)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758cbc]} cellGcmSys: cellGcmBindZcull(index=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=12, location=0, offset=34209792, size=65536, pitch=512, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=12)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=13, location=0, offset=34275328, size=65536, pitch=512, comp=0, base=0, bank=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=13)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758cbc]} cellGcmSys: cellGcmBindZcull(index=5)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758dbc]} cellGcmSys: cellGcmSetTileInfo(index=14, location=0, offset=34340864, size=65536, pitch=512, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758c5c]} cellGcmSys: cellGcmBindTile(index=14)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758cbc]} cellGcmSys: cellGcmBindZcull(index=6)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758cbc]} cellGcmSys: cellGcmBindZcull(index=7)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1f0, attr=*0xd003f1f8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00463504]} sys_mutex: sys_mutex_create(mutex_id=*0xd003f1d0, attr=*0xd003f1d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x29020710, attr=*0xd003f0e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x290206b0, entry=0x8a45b8, arg=0x290206b000000000, prio=500, stacksize=0x4000, flags=0x0, threadname=*0xd003f0f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x290206b0, param=*0xd003f050, arg=0x290206b000000000, unk=0x0, prio=500, stacksize=0x4000, flags=0x0, threadname=*0xd003f0f0)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x113)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x290207a0, attr=*0xd003f0e0)
HLE: W {PPU[0x113] Thread (290206b0)[0x00462f30]} sys_cond: sys_cond_create(cond_id=*0xd009bc30, mutex_id=0xd1, attr=*0xd009bc48)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x29020740, entry=0x8a45b8, arg=0x2902074000000000, prio=500, stacksize=0x4000, flags=0x0, threadname=*0xd003f0f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x29020740, param=*0xd003f050, arg=0x2902074000000000, unk=0x0, prio=500, stacksize=0x4000, flags=0x0, threadname=*0xd003f0f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x116)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075781c]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=0, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075781c]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=1, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075781c]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=6, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075773c]} cellSysutil: cellAudioOutConfigure(audioOut=0, config=*0xb8cdf8, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075787c]} cellSysutil: cellAudioOutGetState(audioOut=0x0, deviceIndex=0x0, state=*0xd003f3c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075783c]} cellSysutil: cellAudioOutSetCopyControl(audioOut=0, control=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075721c]} cellAudio: cellAudioInit()
HLE: W {PPU[0x1] Thread (main_thread)[0x007572bc]} cellAudio: cellAudioPortOpen(audioParam=*0xb8dcb8, portNum=*0xb8dcf8)
HLE: W {PPU[0x1] Thread (main_thread)[0x007572bc]} cellAudio: *** audio port opened(nChannel=8, nBlock=8, attr=0x0, level=1.000000): port = 0
HLE: W {PPU[0x1] Thread (main_thread)[0x0075725c]} cellAudio: cellAudioGetPortConfig(portNum=0, portConfig=*0xb8dcd8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075727c]} cellAudio: cellAudioPortStart(portNum=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x13ff780, attr=*0xd003f1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007588fc]} cellSpurs: cellSpursCreateTaskset(spurs=*0xc92900, taskset=*0x13ffb80, args=0x0, priority=*0xd003f3c0, maxContention=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x007588fc]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003f078, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x13ffb80, priority=*0xd003f3c0, minCnt=0x8, maxCnt=0x1)
HLE: W {PPU[0x1] Thread (main_thread)[0x007588fc]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003f078, nameClass=*0x0, nameInstance=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x007588fc]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xc92900, wid=*0xd003f070, attr=*0xd003f078)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075745c]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x13ffb80, eventFlag=*0x1401500, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075749c]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0x1401500)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075749c]} sys_event: sys_event_queue_create(equeue_id=*0xd003f278, attr=*0xd003f258, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075749c]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0xb7, eq=0x118, req=0xffffffffffff0000, spup=*0xd003f270)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075745c]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x13ffb80, eventFlag=*0x1405600, flagClearMode=0, flagDirection=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a1c]} cellSpurs: cellSpursCreateTask(taskset=*0x13ffb80, taskID=*0x1401480, elf=*0x7dd280, context=*0x1405680, size=0x3d400, lsPattern=*0x76f720, argument=*0xd003f300)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a1c]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0xc92900, wid=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a1c]} cellSpurs: cellSpursWakeUp(spurs=*0xc92900)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x145fd90, attr=*0xd003f280)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x145fdb0, attr=*0xd003f1d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x145fdd0, attr=*0xd003f210)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075887c]} cellSpurs: cellSpursGetInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a9c]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003ee58, revision=1, sdkVersion=0x250001, pm=*0x847700, size=0x2d00, data=0x13e9580, priority=*0xd003f2c0, minCnt=0x1, maxCnt=0x1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075889c]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003ee58, nameClass=*0x7be650, nameInstance=*0x20757220)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a3c]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xc92900, wid=*0x20757218, attr=*0xd003ee58)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075885c]} cellSpurs: cellSpursRequestIdleSpu
HLE: E {PPU[0x1] Thread (main_thread)[0x00758a5c]} cellSpurs: cellSpursSetExceptionEventHandler
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0xb8dee0, entry=0x884ee0, arg=0x0, prio=2, stacksize=0x4000, flags=0x1, threadname=*0x7a2c30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0xb8dee0, param=*0xd003f3f0, arg=0x0, unk=0x0, prio=2, stacksize=0x4000, flags=0x1, threadname=*0x7a2c30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x11c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075785c]} cellSysutil: cellSysutilDisableBgmPlayback()
HLE: E {PPU[0x1] Thread (main_thread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x1] Thread (main_thread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
TTY: *********************************************************************\n
TTY: *********************************************************************\n
TTY: LOADING SCREEN TYPE type == 0\n
TTY: Feature type == 0\n
TTY: *********************************************************************\n
TTY: *********************************************************************\n
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x8c2648, entry=0x882290, arg=0x0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0x79fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x8c2648, param=*0xd003f4d0, arg=0x0, unk=0x0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0x79fb30)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x11d)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x007581fc]} cellGame: cellGameBootCheck(type=*0xd003f634, attributes=*0xd003f630, size=*0xd003f670, dirName=*0x0)
HLE: W {PPU[0x11d] Thread (LoadingScreenThread)[0x00462f30]} sys_cond: sys_cond_create(cond_id=*0xd00b3bb0, mutex_id=0xd2, attr=*0xd00b3bc8)
TTY: TROPHY: Checking free disk space... 40000000\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0075813c]} cellGame: cellGameGetParamString(id=100, buf=*0xd003f680, bufsize=64)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075817c]} cellGame: cellGameContentPermit(contentInfoPath=*0xd003f6c0, usrdirPath=*0xd003f740)
TTY: setting region to europe\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0075771c]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd003f530)
HLE: W {PPU[0x1] Thread (main_thread)[0x007581bc]} cellGame: cellGameDataCheck(type=3, dirName=*0xd003f370, size=*0xd003f364)
TTY: cellGameDataCheck() OK [data exist]\n
HLE: E {PPU[0x1] Thread (main_thread)[0x007581dc]} cellGame: cellGameGetSizeKB
TTY:   hddFreeSizeKB = [40000000] sizeKB = [0] sysSizeKB = [0]\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0075817c]} cellGame: cellGameContentPermit(contentInfoPath=*0x207582a0, usrdirPath=*0x20758320)
TTY: cellGameContentPermit() OK\n
TTY:   contentInfoPath:[/dev_hdd0/game/BCES00664DATA]\n
TTY:   usrdirPath:[/dev_hdd0/game/BCES00664DATA/USRDIR]\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0075759c]} cellSysmodule: cellSysmoduleUnloadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
TTY: BootLocation "/dev_hdd0/game/BCES00664DATA/USRDIR"\n
TTY: HDDLocation "/dev_hdd0/game/BCES00664DATA/USRDIR"\n
TTY: TitleID "BCES00664"\n
TTY: Running...\n
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
TTY: Creating file systems\n
HLE: W {PPU[0x1] Thread (main_thread)[0x007573dc]} cellSpurs: _cellSpursTasksetAttributeInitialize(attribute=*0xd003f4f8, revision=1, skd_version=0x250001, args=0x0, priority=*0xd003f3f0, max_contention=8)
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x0075747c]} cellSpurs: cellSpursTasksetAttributeSetName(attr=*0xd003f4f8, name=*0x7a6c80)
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x0075755c]} cellSpurs: cellSpursCreateTasksetWithAttribute(spurs=*0xc91900, taskset=*0x27e5f300, attr=*0xd003f4f8)
HLE: W {PPU[0x11d] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075755c]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003f178, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x27e5f300, priority=*0xd003f508, minCnt=0x8, maxCnt=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075755c]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003f178, nameClass=*0x0, nameInstance=*0x7a6c80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075755c]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0xc91900, wid=*0xd003f170, attr=*0xd003f178)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075745c]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0xc91900, taskset=*0x0, eventFlag=*0x27e60c00, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075749c]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0x27e60c00)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075749c]} sys_event: sys_event_queue_create(equeue_id=*0xd003f378, attr=*0xd003f358, event_queue_key=0x0, size=1)
HLE: W {PPU[0x11d] Thread (LoadingScreenThread)[0x00462f30]} sys_cond: sys_cond_create(cond_id=*0xd00b3bb0, mutex_id=0xd3, attr=*0xd00b3bc8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075749c]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x9a, eq=0x11f, req=0xffffffffffff0000, spup=*0xd003f370)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075881c]} cellSpurs TODO: _cellSpursLFQueueInitialize(pTasksetOrSpurs=*0xc91901, pQueue=*0x27e60c80, buffer=*0x27e60d00, size=0x20, depth=0xc, direction=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075881c]} cellSync: cellSyncLFQueueInitialize(queue=*0x27e60c80, buffer=*0x27e60d00, size=0x20, depth=0xc, direction=3, eaSignal=*0xc91901)
HLE: E {PPU[0x1] Thread (main_thread)[0x0075883c]} cellSpurs: cellSpursLFQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a1c]} cellSpurs: cellSpursCreateTask(taskset=*0x27e5f300, taskID=*0xd003f2f0, elf=*0x7d3a80, context=*0x27e5e300, size=0xc00, lsPattern=*0x76a668, argument=*0xd003f2f8)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a1c]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0xc91900, wid=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x00758a1c]} cellSpurs: cellSpursWakeUp(spurs=*0xc91900)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575fc]} cellSysmodule: cellSysmoduleInitialize()
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x007575bc]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758258, attr=*0xd003f110)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758038, lwmutex=*0x20758258, attr=*0xd003f100)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x207584b8, attr=*0xd003f0a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758508, attr=*0xd003f0f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758530, lwmutex=*0x20758508, attr=*0xd003f0e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758548, lwmutex=*0x20758508, attr=*0xd003f0e0)
TTY: FIOS 1.3.0 initialized\n
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e62268, attr=*0xd003f1b0)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} Creating RTT
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e622f0, attr=*0xd003f250)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e62338, attr=*0xd003f250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x27e62360, lwmutex=*0x27e62338, attr=*0xd003f240)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x27e62378, lwmutex=*0x27e62338, attr=*0xd003f240)
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x207589f8, attr=*0xd003f250)
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758a20, lwmutex=*0x207589f8, attr=*0xd003f240)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758a38, lwmutex=*0x207589f8, attr=*0xd003f240)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e626d8, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e62770, attr=*0xd003f290)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x27e62798, lwmutex=*0x27e62770, attr=*0xd003f280)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x27e627b0, lwmutex=*0x27e62770, attr=*0xd003f280)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758f38, attr=*0xd003f140)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758fd0, attr=*0xd003f270)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758ff8, lwmutex=*0x20758fd0, attr=*0xd003f260)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20759010, lwmutex=*0x20758fd0, attr=*0xd003f260)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759038, attr=*0xd003f270)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x207590b8, attr=*0xd003f270)
HLE: W {PPU[0x11c] Thread (Audio MS Update Thread)[0x0075741c]} cellSpurs: cellSpursEventFlagWait(eventFlag=*0x1401500, mask=*0x91e328, mode=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x207590e0, lwmutex=*0x207590b8, attr=*0xd003f260)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759188, attr=*0xd003f270)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758b18, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758b40, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758b78, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758ba0, lwmutex=*0x20758b78, attr=*0xd003f150)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758bb8, lwmutex=*0x20758b78, attr=*0xd003f150)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758be0, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758c30, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758c58, lwmutex=*0x20758c30, attr=*0xd003f150)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758c70, lwmutex=*0x20758c30, attr=*0xd003f150)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758c88, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20758ce0, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20758d08, lwmutex=*0x20758ce0, attr=*0xd003f150)
RSX: W {rsx::thread} Creating RTT
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x207594d4, entry=0x8a06d0, arg=0x207594b4, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x207594d4, param=*0xd003f100, arg=0x207594b4, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x147)
RSX: W {rsx::thread} VP not found in buffer!
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x207594fc, entry=0x8a06d0, arg=0x207594dc, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x207594fc, param=*0xd003f100, arg=0x207594dc, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x148)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20759524, entry=0x8a06d0, arg=0x20759504, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20759524, param=*0xd003f100, arg=0x20759504, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x149)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20758c18, entry=0x8a06d0, arg=0x20758bf8, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x7cbd48)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20758c18, param=*0xd003f100, arg=0x20758bf8, unk=0x0, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x7cbd48)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x14a)
TTY: Mounting HDD GameData: BootLocation /dev_hdd0/game/BCES00664DATA/USRDIR\n
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e6b858, attr=*0xd003f1b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e6b8e0, attr=*0xd003f250)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e6b928, attr=*0xd003f250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x27e6b950, lwmutex=*0x27e6b928, attr=*0xd003f240)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x27e6b968, lwmutex=*0x27e6b928, attr=*0xd003f240)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e6bcc8, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x27e6bd60, attr=*0xd003f290)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x27e6bd88, lwmutex=*0x27e6bd60, attr=*0xd003f280)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x27e6bda0, lwmutex=*0x27e6bd60, attr=*0xd003f280)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x207598a8, attr=*0xd003f140)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759940, attr=*0xd003f270)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20759968, lwmutex=*0x20759940, attr=*0xd003f260)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20759980, lwmutex=*0x20759940, attr=*0xd003f260)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x207599a8, attr=*0xd003f270)
RSX: W {rsx::thread} FP not found in buffer!
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759a28, attr=*0xd003f270)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20759a50, lwmutex=*0x20759a28, attr=*0xd003f260)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759af8, attr=*0xd003f270)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759d18, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759d40, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759d78, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20759da0, lwmutex=*0x20759d78, attr=*0xd003f150)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20759db8, lwmutex=*0x20759d78, attr=*0xd003f150)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759de0, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759e30, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20759e58, lwmutex=*0x20759e30, attr=*0xd003f150)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20759e70, lwmutex=*0x20759e30, attr=*0xd003f150)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759e88, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756fbc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20759ee0, attr=*0xd003f160)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075843c]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20759f08, lwmutex=*0x20759ee0, attr=*0xd003f150)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x2075a174, entry=0x8a06d0, arg=0x2075a154, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x2075a174, param=*0xd003f100, arg=0x2075a154, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x168)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x2075a19c, entry=0x8a06d0, arg=0x2075a17c, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x2075a19c, param=*0xd003f100, arg=0x2075a17c, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x169)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x2075a1c4, entry=0x8a06d0, arg=0x2075a1a4, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x2075a1c4, param=*0xd003f100, arg=0x2075a1a4, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x7cbdf0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x16a)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x20759e18, entry=0x8a06d0, arg=0x20759df8, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x7cbd48)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x20759e18, param=*0xd003f100, arg=0x20759df8, unk=0x0, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x7cbd48)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x16b)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756d9c]} cellFs: cellFsOpendir(path=*0x20758110, fd=*0xd003f650) -> sys_fs_opendir()
HLE: W {PPU[0x1] Thread (main_thread)[0x00756d9c]} sys_fs: sys_fs_opendir(path=*0x20758110, fd=*0xd003f650)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756d9c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR'
HLE: W {PPU[0x1] Thread (main_thread)[0x00756ddc]} sys_fs: sys_fs_readdir(fd=3, dir=*0xd003f548, nread=*0xd003f540)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756ddc]} sys_fs: sys_fs_readdir(fd=3, dir=*0xd003f548, nread=*0xd003f540)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756ddc]} sys_fs: sys_fs_readdir(fd=3, dir=*0xd003f548, nread=*0xd003f540)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756ddc]} sys_fs: sys_fs_readdir(fd=3, dir=*0xd003f548, nread=*0xd003f540)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756ddc]} sys_fs: sys_fs_readdir(fd=3, dir=*0xd003f548, nread=*0xd003f540)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756ddc]} sys_fs: sys_fs_readdir(fd=3, dir=*0xd003f548, nread=*0xd003f540)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756ddc]} sys_fs: sys_fs_readdir(fd=3, dir=*0xd003f548, nread=*0xd003f540)
TTY: Loading Screen Finished\n
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 0
RSX: W {rsx::thread} *** fp id = 1
RSX: W {rsx::thread} Creating RTT
RSX: W {rsx::thread} VP not found in buffer!
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
RSX: W {rsx::thread} FP not found in buffer!
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 2
RSX: W {rsx::thread} *** fp id = 3
RSX: W {rsx::thread} Creating RTT
RSX: W {rsx::thread} Creating RTT
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 2
RSX: W {rsx::thread} *** fp id = 3
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 2
RSX: W {rsx::thread} *** fp id = 3
RSX: W {rsx::thread} Creating RTT
RSX: W {rsx::thread} Creating RTT
RSX: W {rsx::thread} Creating RTT
RSX: W {rsx::thread} FP not found in buffer!
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 2
RSX: W {rsx::thread} *** fp id = 4
RSX: W {rsx::thread} FP not found in buffer!
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 2
RSX: W {rsx::thread} *** fp id = 5
RSX: W {rsx::thread} FP not found in buffer!
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 2
RSX: W {rsx::thread} *** fp id = 6
RSX: W {rsx::thread} Creating RTT
RSX: W {rsx::thread} FP not found in buffer!
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 0
RSX: W {rsx::thread} *** fp id = 7
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x11d] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x11d] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
TTY: *********************************************************************\n
TTY: *********************************************************************\n
TTY: LOADING SCREEN TYPE type == 0\n
TTY: Feature type == 3\n
TTY: *********************************************************************\n
TTY: *********************************************************************\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0075771c]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd003f6b0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/scepresents.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/scepresents.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/scepresents.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/presents_french.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/presents_french.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/presents_french.gtf'
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x8c2648, entry=0x882290, arg=0x0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0x79fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x8c2648, param=*0xd003f4d0, arg=0x0, unk=0x0, prio=1001, stacksize=0x10000, flags=0x0, threadname=*0x79fb30)
HLE: W {PPU[0x1] Thread (main_thread)[0x00756f5c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x16c)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/ships/shipeffectstweaks.txt'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/feenvmap.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/feenvmap.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/feenvmap.gtf'
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fe.envsettings'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/saveicons.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/saveicons.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/saveicons.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/saveicons_fury.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/saveicons_fury.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/saveicons_fury.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_heavy_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_heavy.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_med.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_very_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_speed.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_weapon.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rlr_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lrl_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/energy_critical_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/wrong_way.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 0
RSX: W {rsx::thread} *** fp id = 1
RSX: W {rsx::thread} Creating RTT
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_start_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} Creating RTT
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/fire_engine.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/enter_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/travel_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/exit_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/absorb_any_pickup_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} VP not found in buffer!
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/autopilot_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shield_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rockets_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_fired_rumble.xml'
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 8
RSX: W {rsx::thread} *** fp id = 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} Add program :
RSX: W {rsx::thread} *** vp id = 0
RSX: W {rsx::thread} *** fp id = 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leeching_energy_rumble.xml'
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_rebound_wall_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_incoming_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_out_of_range.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lockon_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lock_on_warning.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/weapon_impact_shield_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_player_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/photo_click.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_left.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_right.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/heartbeat.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_heavy_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_med_looping.xml'
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_heavy.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_med.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_very_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_speed.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_weapon.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rlr_barrell_roll.xml'
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lrl_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/energy_critical_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/wrong_way.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_start_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/fire_engine.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/enter_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/travel_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/exit_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/absorb_any_pickup_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/autopilot_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shield_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rockets_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_impact_rumble.xml'
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leeching_energy_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_rebound_wall_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_incoming_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_out_of_range.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lockon_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lock_on_warning.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/weapon_impact_shield_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_player_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/photo_click.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_left.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_right.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/heartbeat.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_heavy_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_heavy.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_med.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_very_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_speed.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_weapon.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rlr_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lrl_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/energy_critical_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/wrong_way.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_start_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/fire_engine.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/enter_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/travel_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/exit_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/absorb_any_pickup_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/autopilot_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shield_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_fired_rumble.xml'
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rockets_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_impact_rumble.xml'
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leeching_energy_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_rebound_wall_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_incoming_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_out_of_range.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lockon_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lock_on_warning.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/weapon_impact_shield_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_player_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/photo_click.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_left.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_right.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/heartbeat.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_heavy_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_heavy.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_med.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_very_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_speed.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_weapon.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rlr_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lrl_barrell_roll.xml'
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/energy_critical_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/wrong_way.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_start_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/fire_engine.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/enter_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/travel_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/exit_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/absorb_any_pickup_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/autopilot_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shield_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rockets_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_fired_rumble.xml'
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leeching_energy_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_rebound_wall_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_incoming_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_out_of_range.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lockon_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lock_on_warning.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/weapon_impact_shield_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_player_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/photo_click.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_left.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_right.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/heartbeat.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_heavy_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_heavy.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_med.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_very_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_speed.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_weapon.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rlr_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lrl_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/energy_critical_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/wrong_way.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_start_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/fire_engine.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/enter_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/travel_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/exit_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/absorb_any_pickup_rumble.xml'
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/autopilot_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shield_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rockets_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_impact_rumble.xml'
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leeching_energy_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_rebound_wall_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_incoming_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_out_of_range.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lockon_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lock_on_warning.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/weapon_impact_shield_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_player_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/photo_click.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_left.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_right.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/heartbeat.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_heavy_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_heavy.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_med.xml'
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_light.xml'
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_very_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_speed.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_weapon.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rlr_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lrl_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/energy_critical_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/wrong_way.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_start_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/fire_engine.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/enter_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/travel_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/exit_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/absorb_any_pickup_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/autopilot_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shield_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_fired_rumble.xml'
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rockets_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_impact_rumble.xml'
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leeching_energy_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_rebound_wall_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_incoming_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_out_of_range.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lockon_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lock_on_warning.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/weapon_impact_shield_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_player_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/photo_click.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_left.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_right.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/heartbeat.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_heavy_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_right_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_med_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/collision_left_very_light_looping.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_heavy.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_med.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/landing_very_light.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_speed.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/pad_weapon.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rlr_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lrl_barrell_roll.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/energy_critical_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/wrong_way.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_start_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/fire_engine.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/enter_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/travel_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/exit_mag_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/absorb_any_pickup_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/turbo_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/autopilot_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shield_active_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rockets_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_fired_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/cannon_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leech_impact_rumble.xml'
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_impact_rumble.xml'
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_impact_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/leeching_energy_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/mine_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/missile_rebound_wall_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/bomb_explosion_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/plasma_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/quake_incoming_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/rocket_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/repulser_out_of_range.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/shuriken_hits_wall.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lockon_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/lock_on_warning.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/weapon_impact_shield_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/ship_exploding_player_rumble.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/photo_click.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_left.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/side_shift_right.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/rumble/heartbeat.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
TTY: Weaponstats init\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/weaponstats_race.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/weaponstats_race.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/weaponstats_elimination.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/weaponstats_elimination.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/weaponstats_detonator.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/weaponstats_detonator.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
TTY: Load handling stats..\n
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/handlingstats.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/handlingstats.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: HandlingStats load done\n
TTY: SystemRoot create done\n
TTY: Create speech manager...done\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/frontend.bnk'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/frontend.bnk'
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/speech_results.bnk'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/speech_results.bnk'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/generaltrack.bnk'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/generaltrack.bnk'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/voppler.bnk'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/voppler.bnk'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/speech_preracechatter.bnk'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/sound/speech_preracechatter.bnk'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Create sound manager...done\n
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fe.envsettings'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x1] Thread (main_thread)[0x007578bc]} sys_net: sys_net_initialize_network_ex(param=*0xd003f5a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0075771c]} cellSysutil: cellSysutilGetSystemParamInt(id=0x112(ID_ENTER_BUTTON_ASSIGN), value=*0xd003f670)
TTY: Create profile and string table manager\n
TTY: Done\n
TTY: SetLanguage\n
HLE: W {PPU[0x1] Thread (main_thread)[0x0075771c]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd003f5f0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/languages/french/definition.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/languages/french/stringtable.xml'
G: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/languages/french/stringtable.xml', 0x1) failed: error 0x2
HLE: E {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open('/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/languages/french/stringtable.xml'): failed to open file (flags=0, mode=0)
HLE: W {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00bb430, flags=0, fd=*0xd00bb2f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00bb430, flags=0, fd=*0xd00bb2f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/data/plugins/languages/french/stringtable.xml'
G: W {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/data/plugins/languages/french/stringtable.xml', 0x1) failed: error 0x3
HLE: E {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open('/dev_hdd0/data/plugins/languages/french/stringtable.xml'): failed to open file (flags=0, mode=0)
TTY: FileSystem::Open FAILED for 'Data\\Plugins\\languages\\French\\stringtable.xml'\n
TTY: ScreenManager Load "Data\\Plugins\\languages\\French\\Definition.xml" found 0x2075FAF0\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/languages/french/definition.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/languages/french/definition.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/helv.fnt'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Loading font from Data\\FE\\Fonts\\helv.fnt\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/helv.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/helv.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/helv.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/helvb.fnt'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Loading font from Data\\FE\\Fonts\\helvb.fnt\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/helvb.gtf'
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/helvb.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/helvb.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/ps_buttons.fnt'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Loading font from Data\\FE\\Fonts\\PS_BUTTONS.fnt\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/ps_buttons.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/ps_buttons.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/ps_buttons.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/pulsehud.fnt'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Loading font from Data\\FE\\Fonts\\PulseHud.fnt\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/pulsehud.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/pulsehud.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/pulsehud.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/small.fnt'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Loading font from Data\\FE\\Fonts\\small.fnt\n
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/small.gtf'
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/small.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/fonts/small.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/wo3_hud/font/wo3.fnt'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Loading font from Data\\XML\\wo3_hud\\font\\wo3.fnt\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/wo3_hud/font/wo3.gtf'
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/wo3_hud/font/wo3.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/wo3_hud/font/wo3.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/2097_hud/font/2097.fnt'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Loading font from Data\\XML\\2097_hud\\font\\2097.fnt\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/2097_hud/font/2097.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/2097_hud/font/2097.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/xml/2097_hud/font/2097.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Switching Screen "" to "Top"\n
TTY: Created Plugin from "Data\\Plugins\\languages\\French"\n
TTY: ScreenManager Load "Data\\Plugins\\languages\\french\\entries.xml" found 0x20763540\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/languages/french/entries.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/languages/french/entries.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
TTY: Create plugins\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/frontend/definition.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/frontend/stringtable.xml'
G: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/frontend/stringtable.xml', 0x1) failed: error 0x2
HLE: E {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open('/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/frontend/stringtable.xml'): failed to open file (flags=0, mode=0)
HLE: W {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00bb430, flags=0, fd=*0xd00bb2f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00bb430, flags=0, fd=*0xd00bb2f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/data/plugins/frontend/stringtable.xml'
G: W {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/data/plugins/frontend/stringtable.xml', 0x1) failed: error 0x3
HLE: E {PPU[0x147] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open('/dev_hdd0/data/plugins/frontend/stringtable.xml'): failed to open file (flags=0, mode=0)
TTY: FileSystem::Open FAILED for 'Data\\Plugins\\frontend\\stringtable.xml'\n
TTY: ScreenManager Load "Data\\Plugins\\frontend\\Definition.xml" found 0x20794210\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/frontend/definition.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/frontend/definition.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
TTY: Create g_pFEScreenManager for skin\n
TTY: ScreenManager Load "Data\\Plugins\\frontend\\GUI\\Skin.xml" found 0x20794A90\n
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/frontend/gui/skin.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/plugins/frontend/gui/skin.xml'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/network_icon_texture.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/network_icon_texture.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/network_icon_texture.gtf'
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=2, value=0x5)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/hd_options_arrow.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/hd_options_arrow.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/hd_options_arrow.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/saveicons.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} cellFs: cellFsStat(path=*0xd00e33f0, sb=*0xd00e336c) -> sys_fs_stat()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: sys_fs_stat(path=*0xd00e33f0, sb=*0xd00e336c)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756e1c]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/saveicons.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/saveicons.gtf'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
HLE: W {PPU[0x2] Thread (Callback Thread)[0x00758c7c]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x16c] Thread (LoadingScreenThread)[0x00758abc]} cellSpurs: cellSpursReadyCountStore(spurs=*0xc91900, wid=1, value=0x5)
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: E {PPU[0x16c] Thread (LoadingScreenThread)[0x007588bc]} cellSpurs: cellSpursGetWorkloadInfo
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} cellFs: cellFsOpen(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: sys_fs_open(path=*0xd00e3430, flags=0, fd=*0xd00e32f8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756dfc]} sys_fs: *** path = '/dev_hdd0/game/BCES00664DATA/USRDIR/data/fe/images/studioliverpool.bik'
HLE: W {PPU[0x168] Thread (fios mediathread)[0x00756edc]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd00e33ac)
TTY: Memory does not have any blocks large enough for this allocation\n
TTY: Either this allocation is unusually large, you have run out of memory, or your memory is fragmented.\n
HLE: W {PPU[0x1] Thread (main_thread)[0x00019e38]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003a4e8)
HLE: E {PPU[0x1] Thread (main_thread)[0x007578dc]} sys_net: sys_net::sys_net_if_ctl
TTY: MemoryStatus: HeapJC: Dying breath...\n
TTY: LARGE : Total Allocated: 118780176 (113.28MB)(545), Total Free: 12291824 (11.72MB), Largest Free: 12112864 (11.55MB), Num Free Blocks: 17\n
RSX: W {rsx::thread} TODO: NV4097_CLEAR_REPORT_VALUE: ZPASS_PIXEL_CNT
RSX: W {rsx::thread} NV4097_GET_REPORT: Unimplemented type 1
TTY: SMALL : Total Allocated: 514432 (0.49MB)(6855), Total Free: 12068400 (11.51MB), Largest Free: 12067952 (11.51MB), Num Free Blocks: 3\n
TTY: KERNEL: Total Size: 257949696 (246.00MB), Total Free: 121634816 (116.00MB)\n
TTY: HOST  : Total Free: 63702496 (60.75MB), Largest Free: 63657264 (60.71MB)\n
TTY: VRAM  : Total Free: 209491752 (199.79MB), Largest Free: 209420288 (199.72MB)\n
G: ! {PPU[0x1] Thread (main_thread)[0x0038d220]} Registers:
=========
GPR[0] = 0x38d21c
GPR[1] = 0xd003a980
GPR[2] = 0x8bd454
GPR[3] = 0x0
GPR[4] = 0x20700098
GPR[5] = 0x13
GPR[6] = 0x2079dae0
GPR[7] = 0x0
GPR[8] = 0xb82750
GPR[9] = 0x207000f4
GPR[10] = 0x1
GPR[11] = 0x0
GPR[12] = 0x2079dae0
GPR[13] = 0x1467030
GPR[14] = 0xd003b2d8
GPR[15] = 0xd003b318
GPR[16] = 0x2079d4f0
GPR[17] = 0x8c36c0
GPR[18] = 0x764aa0
GPR[19] = 0x580000ba
GPR[20] = 0xd003b258
GPR[21] = 0x20794820
GPR[22] = 0xd003b9f0
GPR[23] = 0x20794820
GPR[24] = 0x639c5869
GPR[25] = 0x2079d9c0
GPR[26] = 0x20700010
GPR[27] = 0x0
GPR[28] = 0x20700010
GPR[29] = 0xe702c0
GPR[30] = 0x13
GPR[31] = 0x0
FPR[0] = 10000
FPR[1] = 199.719
FPR[2] = 113.278
FPR[3] = 11.7224
FPR[4] = 11.5517
FPR[5] = 12
FPR[6] = 0.490402
FPR[7] = 11.5096
FPR[8] = 11.5096
FPR[9] = 246
FPR[10] = 116
FPR[11] = 60.7514
FPR[12] = 60.7083
FPR[13] = 1.99719E+06
FPR[14] = 0
FPR[15] = 0
FPR[16] = 0
FPR[17] = 0
FPR[18] = 0
FPR[19] = 0
FPR[20] = 0
FPR[21] = 0
FPR[22] = 0
FPR[23] = 0
FPR[24] = 0
FPR[25] = 0
FPR[26] = 0
FPR[27] = 0
FPR[28] = 0
FPR[29] = 0
FPR[30] = 0
FPR[31] = 1.99432
VPR[0] = 0x3f800000000000000000000000000000 [x: 1 y: 0 z: 0 w: 0]
VPR[1] = 0x000000003f8000000000000000000000 [x: 0 y: 1 z: 0 w: 0]
VPR[2] = 0x00000000560f12bf000000000000e895 [x: 0 y: 3.93277e+13 z: 0 w: 8.34347e-41]
VPR[3] = 0x00000000560f12bf00000000560f12fe [x: 0 y: 3.93277e+13 z: 0 w: 3.93279e+13]
VPR[4] = 0x000000000000000000000000ffffffff [x: 0 y: 0 z: 0 w: -nan]
VPR[5] = 0xffffffffffffffffffffffffffffffff [x: -nan y: -nan z: -nan w: -nan]
VPR[6] = 0xffffffffffffffffffffffffffffffff [x: -nan y: -nan z: -nan w: -nan]
VPR[7] = 0x3f0000003f0000003f0000003f000000 [x: 0.5 y: 0.5 z: 0.5 w: 0.5]
VPR[8] = 0x3f8000003f8000003f8000003f800000 [x: 1 y: 1 z: 1 w: 1]
VPR[9] = 0x00000000000000000000000000000000 [x: 0 y: 0 z: 0 w: 0]
VPR[10] = 0x00000000000000000000000000000000 [x: 0 y: 0 z: 0 w: 0]
VPR[11] = 0x0000000000000000000000003f800000 [x: 0 y: 0 z: 0 w: 1]
VPR[12] = 0x00000000000000003f80000000000000 [x: 0 y: 0 z: 1 w: 0]
VPR[13] = 0x00000000000000003f80000000000000 [x: 0 y: 0 z: 1 w: 0]
VPR[14] = 0x000000000000000f0000000000000000 [x: 0 y: 2.10195e-44 z: 0 w: 0]
VPR[15] = 0x00000000000044c70000000000000062 [x: 0 y: 2.46727e-41 z: 0 w: 1.37327e-43]
VPR[16] = 0x00000000560f12fe00000000560f12be [x: 0 y: 3.93279e+13 z: 0 w: 3.93277e+13]
VPR[17] = 0x2e666d617062690000000000560f12be [x: 5.23931e-11 y: 2.80282e+29 z: 0 w: 3.93277e+13]
VPR[18] = 0x00000000000000000000000078727073 [x: 0 y: 0 z: 0 w: 1.9669e+34]
VPR[19] = 0x0000000000000062000000000000000f [x: 0 y: 1.37327e-43 z: 0 w: 2.10195e-44]
VPR[20] = 0x00000000560f12be0000000000002cc1 [x: 0 y: 3.93277e+13 z: 0 w: 1.60547e-41]
VPR[21] = 0x00000000560f12be00000000560f12fe [x: 0 y: 3.93277e+13 z: 0 w: 3.93279e+13]
VPR[22] = 0x0000787270732e636564676e70626900 [x: 4.32076e-41 y: 3.01044e+29 z: 6.7413e+22 w: 2.80282e+29]
VPR[23] = 0x000000000000000f0000000000000000 [x: 0 y: 2.10195e-44 z: 0 w: 0]
VPR[24] = 0x0000000000029ece0000000000000062 [x: 0 y: 2.40639e-40 z: 0 w: 1.37327e-43]
VPR[25] = 0x00000000560f12fe00000000560f12bf [x: 0 y: 3.93279e+13 z: 0 w: 3.93277e+13]
VPR[26] = 0x6e65676e7062690000000000560f12bf [x: 1.77493e+28 y: 2.80282e+29 z: 0 w: 3.93277e+13]
VPR[27] = 0x00000000000000000000787270732e63 [x: 0 y: 0 z: 4.32076e-41 w: 3.01044e+29]
VPR[28] = 0x0000000000000062000000000000000f [x: 0 y: 1.37327e-43 z: 0 w: 2.10195e-44]
VPR[29] = 0x00000000560f12bf0000000000026860 [x: 0 y: 3.93277e+13 z: 0 w: 2.21114e-40]
VPR[30] = 0x00000000560f12bf00000000560f12fe [x: 0 y: 3.93277e+13 z: 0 w: 3.93279e+13]
VPR[31] = 0x00000000787270732e63736572626900 [x: 0 y: 1.9669e+34 z: 5.17163e-11 w: 4.48452e+30]
CR = 0x42004022
LR = 0x38d21c
CTR = 0x38c8b0
XER = 0x20000000 [CA=1 | OV=8589934592 | SO=0]
FPSCR = 0x0 [RN=0 | NI=0 | XE=0 | ZE=0 | UE=0 | OE=0 | VE=0 | VXCVI=0 | VXSQRT=0 | VXSOFT=0 | FPRF=0 | FI=0 | FR=0 | VXVC=0 | VXIMZ=0 | VXZDZ=0 | VXIDI=0 | VXISI=0 | VXSNAN=0 | XX=0 | ZX=0 | UX=0 | OX=0 | VX=0 | FEX=0 | FX=0]

G: E {PPU[0x1] Thread (main_thread)[0x0038d220]} Exception: Access violation reading location 0x10
(in file ..\Utilities\Thread.cpp:1122, in function _se_translator)
G: ! Stopping emulator...
G: ! All threads signaled...
G: ! {PPU[0x16c] Thread (LoadingScreenThread)[0x005a4b64]} Thread aborted
HLE: S {PPU[0x11c] Thread (Audio MS Update Thread)[0x0075741c]} Last function: cellSpursEventFlagWait (0x373523d4)
HLE: S {PPU[0x116] Thread (29020740)[0x004630c8]} Last syscall: 107 (sys_cond_wait)
G: ! {PPU[0x2] Thread (Callback Thread)[0x005cc708]} Thread aborted
G: ! {SPU[0xb8] Thread (WOHD_singleSPU_CellSpursKernel0)[0x00818]} Thread aborted
G: ! {PPU[0x11c] Thread (Audio MS Update Thread)[0x0075741c]} Thread aborted
G: ! {SPU[0x9e] Thread (WOHD_multiSPU_CellSpursKernel3)[0x00818]} Thread aborted
G: ! {PPU[0xa4] Thread (WOHD_multiSPU_SpursHdlr1)[0x00000000]} Thread aborted
HLE: S {PPU[0xc0] Thread (Job Manager Event Handler)[0x00465250]} Last syscall: 130 (sys_event_queue_receive)
G: ! {PPU[0x116] Thread (29020740)[0x004630c8]} Thread aborted
G: ! {SPU[0x9f] Thread (WOHD_multiSPU_CellSpursKernel4)[0x00818]} Thread aborted
HLE: S {PPU[0xc3] Thread (Job Manager Event Handler)[0x00465250]} Last syscall: 130 (sys_event_queue_receive)
HLE: S {PPU[0x14a] Thread (fios scheduler)[0x0075837c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0xc3] Thread (Job Manager Event Handler)[0x00465250]} Thread aborted
G: ! {PPU[0xbd] Thread (WOHD_singleSPU_SpursHdlr1)[0x00000000]} Thread aborted
G: ! {PPU[0xc0] Thread (Job Manager Event Handler)[0x00465250]} Thread aborted
HLE: S {PPU[0x148] Thread (fios mediathread)[0x0075837c]} Last function: sys_lwcond_wait (0x2a6d9d51)
HLE: S {PPU[0x16a] Thread (fios mediathread)[0x0075837c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {SPU[0x9d] Thread (WOHD_multiSPU_CellSpursKernel2)[0x00818]} Thread aborted
HLE: S {PPU[0x168] Thread (fios mediathread)[0x0075837c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0x14a] Thread (fios scheduler)[0x0075837c]} Thread aborted
RSX: W {rsx::thread} RSX thread aborted
HLE: S {PPU[0x147] Thread (fios mediathread)[0x0075837c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {SPU[0x9c] Thread (WOHD_multiSPU_CellSpursKernel1)[0x00818]} Thread aborted
HLE: S {PPU[0x149] Thread (fios mediathread)[0x0075837c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {VBlank Thread} Thread aborted
HLE: S {PPU[0x169] Thread (fios mediathread)[0x0075837c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0x168] Thread (fios mediathread)[0x0075837c]} Thread aborted
G: ! {PPU[0x149] Thread (fios mediathread)[0x0075837c]} Thread aborted
HLE: S {PPU[0x113] Thread (290206b0)[0x004630c8]} Last syscall: 107 (sys_cond_wait)
G: ! {PPU[0x169] Thread (fios mediathread)[0x0075837c]} Thread aborted
G: ! {SPU[0x9b] Thread (WOHD_multiSPU_CellSpursKernel0)[0x00818]} Thread aborted
HLE: S {PPU[0x16b] Thread (fios scheduler)[0x0075837c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0x16a] Thread (fios mediathread)[0x0075837c]} Thread aborted
G: ! {PPU[0x147] Thread (fios mediathread)[0x0075837c]} Thread aborted
RSX: ! {rsx::thread} RSX thread ended
G: ! {PPU[0x16b] Thread (fios scheduler)[0x0075837c]} Thread aborted
G: ! {PPU[0xce] Thread (FpPadThread)[0x005b9224]} Thread aborted
G: ! {PPU[0x148] Thread (fios mediathread)[0x0075837c]} Thread aborted
G: ! {PPU[0x113] Thread (290206b0)[0x004630c8]} Thread aborted
G: ! {PPU[0xa5] Thread (WOHD_multiSPU_SpursHdlr0)[0x00000000]} Thread aborted
G: ! {PPU[0xbe] Thread (WOHD_singleSPU_SpursHdlr0)[0x00000000]} Thread aborted
G: ! All threads stopped...
G: ! Objects cleared...
G: ! Stopping emulator...
