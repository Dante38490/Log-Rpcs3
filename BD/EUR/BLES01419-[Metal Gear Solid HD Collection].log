LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 v0.0.0.6-3827-a6beb0e
G: ! 
LDR: ! Decrypting 'D:\Emulateurs\Rpcs3\dev_hdd0\game\BLES01419-[Metal Gear Solid HD Collection]\PS3_GAME\USRDIR\EBOOT.BIN'...
LDR: ! Loading 'D:\Emulateurs\Rpcs3\dev_hdd0\game\BLES01419-[Metal Gear Solid HD Collection]\PS3_GAME\USRDIR\BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES01419-[Metal Gear Solid HD Collection]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES01419-[Metal Gear Solid HD Collection]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! 
LDR: ! Title: Metal Gear Solid HD Collection
LDR: ! Serial: BLES01419
LDR: ! Used configuration: 'rpcs3.new.ini'
LDR: ! 
LDR: ! [gui]
MainFrameAui=layout2|name~Pane_0;caption~Game List;state~4196348;dir~5;layer~0;row~0;pos~0;prop~100000;bestw~283;besth~279;minw~-1;minh~-1;maxw~-1;maxh~-1;floatx~-1;floaty~-1;floatw~-1;floath~-1|name~Pane_1;caption~Log;state~4196348;dir~4;layer~0;row~1;pos~1;prop~99647;bestw~600;besth~300;minw~-1;minh~-1;maxw~-1;maxh~-1;floatx~52;floaty~489;floatw~616;floath~339|name~Pane_2;caption~Debugger;state~4196348;dir~4;layer~0;row~1;pos~0;prop~100353;bestw~400;besth~300;minw~-1;minh~-1;maxw~-1;maxh~-1;floatx~47;floaty~117;floatw~416;floath~339|dock_size(5,0,0)~265|dock_size(4,0,1)~400|

[system]
Emulation dir path=
Language=2
Use path below as EmulationDir=false

[rsx/opengl]
Write Color Buffers=false
Write Depth Buffer=false
Read Color Buffers=false
Read Depth Buffer=false

[gui/size]
width=987
height=628

[gui/position]
horizontal=5
vertical=397

[core]
PPU Decoder=interpreter2
Load liblv2.sprx=false
Hook static functions=false
SPU Decoder=recompiler_asmjit

[rsx]
VSync=true
Aspect ratio=16x9
Renderer=DX12
Resolution=1280x720
Frame limit=Auto
Log shader programs=false
3D Monitor=false

[core/llvm]
Compiled blocks exclusion=false
Excluded block range min=200
Excluded block range max=250
Compilation threshold=1000

[audio]
Audio Out=XAudio2
Dump to file=false
Convert to 16 bit=false

[io]
Pad Handler=windows
Camera=connected
Camera type=PlayStationEye
Mouse Handler=null
Keyboard Handler=null

[rsx/d3d12]
D3D Adaptater=0
Debug Output=false
Debug overlay=true

[io/pad]
Circle=76
Left Analog Stick Left=314
Left Analog Stick Down=317
Left Analog Stick Right=316
R2=69
Right=68
Triangle=73
Right Analog Stick Right=312
Down=83
Right Analog Stick Down=367
Left Analog Stick Up=315
Up=90
Right Analog Stick Up=366
Left=81
Right Analog Stick Left=313
Start=13
Select=32
Square=74
Cross=75
R1=51
R3=67
L1=49
L2=65
L3=87

[misc]
Exit RPCS3 when process finishes=false
Always start after boot=true
Use default configuration=true

[misc/log]
RSX Logging=false
Log Level=Errors
Log everything=false
Save TTY output to file=false

[misc/net]
Connection status=Connecting
Network adapter=0

[misc/debug]
Auto Pause at System Call=false
Auto Pause at Function Call=false


LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x360001
LDR: ! *** primary prio: 1001
LDR: ! *** primary stacksize: 0x40000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0x26e8bc)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0x26e8dc)
LDR: ! Imported function 'cellSysmoduleInitialize' in 'cellSysmodule' module (0x26f6bc)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0x26e8fc)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0x26e91c)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0x26e93c)
LDR: ! Imported function 'cellMsgDialogOpen2' in 'cellSysutil' module (0x26e95c)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0x26e97c)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0x26e99c)
LDR: ! Imported function 'cellVideoOutGetResolutionAvailability' in 'cellSysutil' module (0x26e9bc)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0x26e9dc)
LDR: ! Imported function 'cellSaveDataEnableOverlay' in 'cellSysutil' module (0x26e9fc)
LDR: ! Imported function 'cellSaveDataDelete2' in 'cellSysutil' module (0x26ea1c)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0x26f6dc)
LDR: ! Imported function 'cellAudioOutGetDeviceInfo' in 'cellSysutil' module (0x26f6fc)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0x26f71c)
LDR: ! Imported function 'cellAudioOutGetNumberOfDevice' in 'cellSysutil' module (0x26f73c)
LDR: ! Imported function 'cellAudioOutGetConfiguration' in 'cellSysutil' module (0x26f75c)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module (0x26f77c)
LDR: ! Imported function 'cellGameGetParamString' in 'cellGame' module (0x26ea3c)
LDR: ! Imported function 'cellGameContentPermit' in 'cellGame' module (0x26ea5c)
LDR: ! Imported function 'cellGameContentErrorDialog' in 'cellGame' module (0x26ea7c)
LDR: ! Imported function 'cellGamePatchCheck' in 'cellGame' module (0x26ea9c)
LDR: ! Imported function 'cellGameBootCheck' in 'cellGame' module (0x26eabc)
LDR: ! Imported function 'cellSyncLFQueueSize' in 'cellSync' module (0x26eadc)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0x26eafc)
LDR: ! Imported function 'cellKbGetInfo' in 'sys_io' module (0x26eb1c)
LDR: ! Imported function 'cellKbInit' in 'sys_io' module (0x26eb3c)
LDR: ! Imported function 'cellKbCnvRawCode' in 'sys_io' module (0x26eb5c)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0x26eb7c)
LDR: ! Imported function 'cellPadSetPortSetting' in 'sys_io' module (0x26eb9c)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0x26ebbc)
LDR: ! Imported function 'cellKbSetCodeType' in 'sys_io' module (0x26ebdc)
LDR: ! Imported function 'cellPadGetInfo2' in 'sys_io' module (0x26ebfc)
LDR: ! Imported function 'cellKbEnd' in 'sys_io' module (0x26ec1c)
LDR: ! Imported function 'cellKbSetReadMode' in 'sys_io' module (0x26ec3c)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module (0x26ec5c)
LDR: ! Imported function 'cellKbRead' in 'sys_io' module (0x26ec7c)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0x26ec9c)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0x26ecbc)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0x26ecdc)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0x26ecfc)
LDR: ! Imported function 'cellFsAioCancel' in 'sys_fs' module (0x26ed1c)
LDR: ! Imported function 'cellFsAioRead' in 'sys_fs' module (0x26ed3c)
LDR: ! Imported function 'cellFsAioInit' in 'sys_fs' module (0x26ed5c)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0x26ed7c)
LDR: ! Imported function 'cellFsRmdir' in 'sys_fs' module (0x26f79c)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module (0x26f7bc)
LDR: ! Imported function 'cellFsReaddir' in 'sys_fs' module (0x26f7dc)
LDR: ! Imported function 'cellFsSdataOpenByFd' in 'sys_fs' module (0x26f7fc)
LDR: ! Imported function 'cellFsUnlink' in 'sys_fs' module (0x26f81c)
LDR: ! Imported function 'cellFsFsync' in 'sys_fs' module (0x26f83c)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0x26f85c)
LDR: ! Imported function 'cellFsGetFreeSize' in 'sys_fs' module (0x26f87c)
LDR: ! Imported function 'cellFsSdataOpen' in 'sys_fs' module (0x26f89c)
LDR: ! Imported function 'cellFsMkdir' in 'sys_fs' module (0x26f8bc)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0x26f8dc)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module (0x26f8fc)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0x26ed9c)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0x26edbc)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0x26eddc)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0x26edfc)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0x26ee1c)
LDR: ! Imported function '_cellSpursLFQueueInitialize' in 'cellSpurs' module (0x26ee3c)
LDR: ! Imported function 'cellSpursAttributeSetNamePrefix' in 'cellSpurs' module (0x26ee5c)
LDR: ! Imported function 'cellSpursAttributeEnableSpuPrintfIfAvailable' in 'cellSpurs' module (0x26ee7c)
LDR: ! Imported function '_cellSpursTasksetAttributeInitialize' in 'cellSpurs' module (0x26ee9c)
LDR: ! Imported function 'cellSpursLFQueueAttachLv2EventQueue' in 'cellSpurs' module (0x26eebc)
LDR: ! Imported function 'cellSpursEventFlagDetachLv2EventQueue' in 'cellSpurs' module (0x26eedc)
LDR: ! Imported function 'cellSpursInitializeWithAttribute2' in 'cellSpurs' module (0x26eefc)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module (0x26ef1c)
LDR: ! Imported function 'cellSpursCreateTaskset2' in 'cellSpurs' module (0x26ef3c)
LDR: ! Imported function 'cellSpursEventFlagClear' in 'cellSpurs' module (0x26ef5c)
LDR: ! Imported function '_cellSpursEventFlagInitialize' in 'cellSpurs' module (0x26ef7c)
LDR: ! Imported function 'cellSpursTasksetAttributeSetName' in 'cellSpurs' module (0x26ef9c)
LDR: ! Imported function 'cellSpursLFQueueDetachLv2EventQueue' in 'cellSpurs' module (0x26efbc)
LDR: ! Imported function 'cellSpursEventFlagAttachLv2EventQueue' in 'cellSpurs' module (0x26efdc)
LDR: ! Imported function '_cellSpursLFQueuePushBody' in 'cellSpurs' module (0x26effc)
LDR: ! Imported function '_cellSpursTaskAttribute2Initialize' in 'cellSpurs' module (0x26f01c)
LDR: ! Imported function '_cellSpursAttributeInitialize' in 'cellSpurs' module (0x26f03c)
LDR: ! Imported function 'cellSpursJoinTaskset' in 'cellSpurs' module (0x26f05c)
LDR: ! Imported function 'cellSpursShutdownTaskset' in 'cellSpurs' module (0x26f07c)
LDR: ! Imported function 'cellSpursAttributeSetSpuThreadGroupType' in 'cellSpurs' module (0x26f09c)
LDR: ! Imported function 'cellSpursCreateTasksetWithAttribute' in 'cellSpurs' module (0x26f0bc)
LDR: ! Imported function '_cellSpursTasksetAttribute2Initialize' in 'cellSpurs' module (0x26f0dc)
LDR: ! Imported function 'cellSpursFinalize' in 'cellSpurs' module (0x26f0fc)
LDR: ! Imported function 'cellSpursCreateTask2' in 'cellSpurs' module (0x26f11c)
LDR: ! Imported function 'cellSpursDetachLv2EventQueue' in 'cellSpurs' module (0x26f91c)
LDR: ! Imported function 'cellSpursCreateTaskset' in 'cellSpurs' module (0x26f93c)
LDR: ! Imported function 'cellSpursAttachLv2EventQueue' in 'cellSpurs' module (0x26f95c)
LDR: ! Imported function 'cellSpursCreateTask' in 'cellSpurs' module (0x26f97c)
LDR: ! Imported function '_cellSpursSendSignal' in 'cellSpurs' module (0x26f99c)
LDR: ! Imported function 'cellSpursJobQueueAttributeSetDoBusyWaiting' in 'cellSpursJq' module (0x26f13c)
LDR: ! Imported function 'cellSpursJobQueueAttributeSetSubmitWithEntryLock' in 'cellSpursJq' module (0x26f15c)
LDR: ! Imported function 'cellSpursJobQueueAttributeSetMaxSizeJobDescriptor' in 'cellSpursJq' module (0x26f17c)
LDR: ! Imported function 'cellSpursJobQueueAttributeInitialize' in 'cellSpursJq' module (0x26f19c)
LDR: ! Imported function 'cellSpursJobQueueAttributeSetIsJobTypeMemoryCheck' in 'cellSpursJq' module (0x26f1bc)
LDR: ! Imported function 'cellSpursShutdownJobQueue' in 'cellSpursJq' module (0x26f1dc)
LDR: ! Imported function 'cellSpursJoinJobQueue' in 'cellSpursJq' module (0x26f1fc)
LDR: ! Imported function 'cellSpursJobQueuePort2Destroy' in 'cellSpursJq' module (0x26f21c)
LDR: ! Imported function '_cellSpursJobQueuePort2PushJobBody' in 'cellSpursJq' module (0x26f23c)
LDR: ! Imported function 'cellSpursJobQueueAttributeSetGrabParameters' in 'cellSpursJq' module (0x26f25c)
LDR: ! Imported function 'cellSpursJobQueuePort2Create' in 'cellSpursJq' module (0x26f27c)
LDR: ! Imported function '_cellSpursCreateJobQueue' in 'cellSpursJq' module (0x26f29c)
LDR: ! Imported function 'cellSpursJobQueuePort2Sync' in 'cellSpursJq' module (0x26f2bc)
LDR: ! Imported function 'cellSpursJobQueueAttributeSetIsHaltOnError' in 'cellSpursJq' module (0x26f2dc)
LDR: ! Imported function 'cellGcmGetTiledPitchSize' in 'cellGcmSys' module (0x26f2fc)
LDR: ! Imported function 'cellGcmSetPrepareFlip' in 'cellGcmSys' module (0x26f31c)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0x26f33c)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0x26f35c)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0x26f37c)
LDR: ! Imported function 'cellGcmBindTile' in 'cellGcmSys' module (0x26f39c)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0x26f3bc)
LDR: ! Imported function 'cellGcmGetDefaultCommandWordSize' in 'cellGcmSys' module (0x26f3dc)
LDR: ! Imported function 'cellGcmGetDefaultSegmentWordSize' in 'cellGcmSys' module (0x26f3fc)
LDR: ! Imported function 'cellGcmSetDefaultFifoSize' in 'cellGcmSys' module (0x26f41c)
LDR: ! Imported function 'cellGcmBindZcull' in 'cellGcmSys' module (0x26f43c)
LDR: ! Imported function 'cellGcmSetFlipHandler' in 'cellGcmSys' module (0x26f45c)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0x26f47c)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0x26f49c)
LDR: ! Imported function 'cellGcmUnbindZcull' in 'cellGcmSys' module (0x26f4bc)
LDR: ! Imported function 'cellGcmSetVBlankHandler' in 'cellGcmSys' module (0x26f4dc)
LDR: ! Imported function 'cellGcmSetFlipImmediate' in 'cellGcmSys' module (0x26f4fc)
LDR: ! Imported function 'cellGcmSetTileInfo' in 'cellGcmSys' module (0x26f51c)
LDR: ! Imported function 'cellGcmUnbindTile' in 'cellGcmSys' module (0x26f53c)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0x26f55c)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0x26f57c)
LDR: ! Imported function 'sceNpTerm' in 'sceNp' module (0x26f59c)
LDR: ! Imported function 'sceNpDrmIsAvailable' in 'sceNp' module (0x26f5bc)
LDR: ! Imported function 'sceNpInit' in 'sceNp' module (0x26f5dc)
LDR: ! Imported function 'sceNpDrmProcessExitSpawn2' in 'sceNp' module (0x26f5fc)
LDR: ! Imported function 'sceNpDrmIsAvailable2' in 'sceNp' module (0x26f9bc)
LDR: ! Imported function 'cellNetCtlTerm' in 'cellNetCtl' module (0x26f61c)
LDR: ! Imported function 'cellNetCtlInit' in 'cellNetCtl' module (0x26f63c)
LDR: ! Imported function 'sys_net_initialize_network_ex' in 'sys_net' module (0x26f65c)
LDR: ! Imported function 'sys_net_finalize_network' in 'sys_net' module (0x26f67c)
LDR: ! Imported function 'cellVideoOutGetScreenSize' in 'cellSysutilAvconfExt' module (0x26f69c)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0x26f9dc)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0x26f9fc)
LDR: ! Imported function 'sys_lwcond_destroy' in 'sysPrxForUser' module (0x26fa1c)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0x26fa3c)
LDR: ! Imported function 'sys_prx_load_module' in 'sysPrxForUser' module (0x26fa5c)
LDR: ! Imported function 'sys_lwcond_wait' in 'sysPrxForUser' module (0x26fa7c)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0x26fa9c)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0x26fabc)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0x26fadc)
LDR: ! Imported function 'sys_prx_register_library' in 'sysPrxForUser' module (0x26fafc)
LDR: ! Imported function '_sys_spu_printf_initialize' in 'sysPrxForUser' module (0x26fb1c)
LDR: ! Imported function 'sys_process_is_stack' in 'sysPrxForUser' module (0x26fb3c)
LDR: ! Imported function 'sys_game_process_exitspawn2' in 'sysPrxForUser' module (0x26fb5c)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0x26fb7c)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0x26fb9c)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module (0x26fbbc)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0x26fbdc)
LDR: ! Imported function 'sys_prx_load_module_on_memcontainer_by_fd' in 'sysPrxForUser' module (0x26fbfc)
LDR: ! Imported function 'sys_ppu_thread_once' in 'sysPrxForUser' module (0x26fc1c)
LDR: ! Imported function 'sys_prx_load_module_on_memcontainer' in 'sysPrxForUser' module (0x26fc3c)
LDR: ! Imported function 'sys_lwmutex_trylock' in 'sysPrxForUser' module (0x26fc5c)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0x26fc7c)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0x26fc9c)
LDR: ! Imported function 'sys_lwcond_create' in 'sysPrxForUser' module (0x26fcbc)
LDR: ! Imported function '_sys_spu_printf_finalize' in 'sysPrxForUser' module (0x26fcdc)
LDR: ! Imported function 'sys_spu_image_close' in 'sysPrxForUser' module (0x26fcfc)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0x26fd1c)
LDR: ! Imported function 'sys_lwcond_signal_all' in 'sysPrxForUser' module (0x26fd3c)
LDR: ! Imported function 'sys_prx_load_module_by_fd' in 'sysPrxForUser' module (0x26fd5c)
LDR: ! Imported function 'sys_lwcond_signal' in 'sysPrxForUser' module (0x26fd7c)
MEM: ! Thread Local Storage initialized (g_tls_start=0x127e000, user_size=0x168)
*** TLS segment addr: 0x002c56c8
*** TLS segment size: 0x00000000
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1238800, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x001cb550]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd003fc04)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1238600, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1237950, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1237978, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x12379a0, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1237888, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x12378b0, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x12378d8, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1237900, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1237928, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c9e3c]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd003f770)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000020, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200000a0, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000130, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000190, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200001d0, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000210, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200002d0, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000300, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000330, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000360, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20000390, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x200003c0, attr=*0x276f80)
HLE: W {PPU[0x1] Thread (main_thread)[0x001ba744]} sys_time: sys_time_get_timezone(timezone=*0xd003fb20, summertime=*0xd003fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x001bc1b4]} sys_time: sys_time_get_timezone(timezone=*0xd003fb20, summertime=*0xd003fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x001ba6e8]} sys_time: sys_time_get_timezone(timezone=*0xd003fb20, summertime=*0xd003fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x001bc1b4]} sys_time: sys_time_get_timezone(timezone=*0xd003fb20, summertime=*0xd003fb24)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1237338, attr=*0xd003fb50)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1099b98, attr=*0xd003fb60)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c9e3c]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd003ea50)
HLE: W {PPU[0x1] Thread (main_thread)[0x000411c0]} sys_spu: sys_spu_initialize(max_usable_spu=6, max_raw_spu=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fc1c]} sysPrxForUser: sys_ppu_thread_once(once_ctrl=*0x1237dfc, init=*0x2bf860)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x12379c8, attr=*0xd003e010)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c50c0]} sys_event: sys_event_queue_create(equeue_id=*0x12379e4, attr=*0xd003e100, event_queue_key=0x0, size=127)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c50e4]} sys_event: sys_event_port_create(eport_id=*0x12379e8, port_type=1, name=0xffffffff0000dead)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c5100]} sys_event: sys_event_port_connect_local(eport_id=0x1d, equeue_id=0x1c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x12379f0, entry=0x2bf858, arg=0x0, prio=10, stacksize=0x1000, flags=0x1, threadname=*0x285e58)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x12379f0, param=*0xd003e080, arg=0x0, unk=0x0, prio=10, stacksize=0x1000, flags=0x1, threadname=*0x285e58)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x1e)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fb1c]} sysPrxForUser: _sys_spu_printf_initialize(agcb=*0x2bf840, dgcb=*0x2bf838, atcb=*0x2bf830, dtcb=*0x2bf828)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f03c]} cellSpurs: _cellSpursAttributeInitialize(attr=*0xd003e1c0, revision=2, sdkVersion=0x330000, nSpus=5, spuPriority=100, ppuPriority=10, exitIfNoWork=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f09c]} cellSpurs: cellSpursAttributeSetSpuThreadGroupType(attr=*0xd003e1c0, type=24)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ee5c]} cellSpurs: cellSpursAttributeSetNamePrefix(attr=*0xd003e1c0, prefix=*0xd003e1b0, size=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ee7c]} cellSpurs: cellSpursAttributeEnableSpuPrintfIfAvailable(attr=*0xd003e1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} cellSpurs: cellSpursInitializeWithAttribute2(spurs=*0x20174e80, attr=*0xd003e1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0x20174e80, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_group_create(id=*0x20175bb0, num=5, prio=100, attr=*0xd003e070)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu TODO: Unsupported SPU Thread Group type (0x18)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_initialize(thread=*0x20175bb4, group=0x40, spu_num=0, img=*0x20175bf0, attr=*0xd003e038, arg=*0xd003e048)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_initialize(thread=*0x20175bb8, group=0x40, spu_num=1, img=*0x20175bf0, attr=*0xd003e038, arg=*0xd003e048)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_initialize(thread=*0x20175bbc, group=0x40, spu_num=2, img=*0x20175bf0, attr=*0xd003e038, arg=*0xd003e048)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_initialize(thread=*0x20175bc0, group=0x40, spu_num=3, img=*0x20175bf0, attr=*0xd003e038, arg=*0xd003e048)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_initialize(thread=*0x20175bc4, group=0x40, spu_num=4, img=*0x20175bf0, attr=*0xd003e038, arg=*0xd003e048)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c4ccc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x40, eq=0x1c, req=0x2, spup=*0xd003df10)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20175c30, attr=*0xd003df98)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20175c48, lwmutex=*0x20175c30, attr=*0xd003dfa0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_event: sys_event_queue_create(equeue_id=*0x20175bdc, attr=*0xd003df98, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x40, eq=0x48, req=0xffffffffffff0000, spup=*0x20174f49)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_event: sys_event_port_create(eport_id=*0x20175be0, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_event: sys_event_port_connect_local(eport_id=0x49, equeue_id=0x48)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0x20174e80, flag=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_group_connect_event(id=0x40, eq=0x48, et=2)
HLE: W {PPU[0x4b] Thread (BP_Main)[0x00000000]} sys_spu: sys_spu_thread_group_start(id=0x40)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f03c]} cellSpurs: _cellSpursAttributeInitialize(attr=*0xd003e1c0, revision=2, sdkVersion=0x330000, nSpus=1, spuPriority=100, ppuPriority=10, exitIfNoWork=115730944)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ee5c]} cellSpurs: cellSpursAttributeSetNamePrefix(attr=*0xd003e1c0, prefix=*0xd003e1b0, size=10)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ee7c]} cellSpurs: cellSpursAttributeEnableSpuPrintfIfAvailable(attr=*0xd003e1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} cellSpurs: cellSpursInitializeWithAttribute2(spurs=*0x20176f00, attr=*0xd003e1c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0x20176f00, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
SPU: S {PPU[0x4b] Thread (BP_Main)[0x00000000]} SPU Database initialized...
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
SPU: S {PPU[0x4b] Thread (BP_Main)[0x00000000]} SPU Recompiler (ASMJIT) created...
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd003e138, attr=*0xd003e110, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_group_create(id=*0x20177c30, num=1, prio=100, attr=*0xd003e070)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_initialize(thread=*0x20177c34, group=0x6d, spu_num=0, img=*0x20177c70, attr=*0xd003e038, arg=*0xd003e048)
HLE: W {PPU[0x4b] Thread (BP_Main)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0x40, cause=*0x0, status=*0x0)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c4ccc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x6d, eq=0x1c, req=0x2, spup=*0xd003df10)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20177cb0, attr=*0xd003df98)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x20177cc8, lwmutex=*0x20177cb0, attr=*0xd003dfa0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_event: sys_event_queue_create(equeue_id=*0x20177c5c, attr=*0xd003df98, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x6d, eq=0x71, req=0xffffffffffff0000, spup=*0x20176fc9)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_event: sys_event_port_create(eport_id=*0x20177c60, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_event: sys_event_port_connect_local(eport_id=0x72, equeue_id=0x71)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0x20176f00, flag=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eefc]} sys_spu: sys_spu_thread_group_connect_event(id=0x6d, eq=0x71, et=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e99c]} cellSysutil: cellSysutilRegisterCallback(slot=0, func=*0x2b60a0, userdata=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0043: CELL_SYSMODULE_FIBER)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0011: CELL_SYSMODULE_AUDIO)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x000a: CELL_SYSMODULE_SPURS)
HLE: W {PPU[0x74] Thread (BP_System)[0x00000000]} sys_spu: sys_spu_thread_group_start(id=0x6d)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0010: CELL_SYSMODULE_GCM_SYS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0009: CELL_SYSMODULE_RTC)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0016: CELL_SYSMODULE_SYSUTIL_NP)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0xf035: CELL_SYSMODULE_SYSUTIL_NP_TROPHY)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0045: CELL_SYSMODULE_SYSUTIL_NP_TUS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0024: CELL_SYSMODULE_VDEC_MPEG2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0031: CELL_SYSMODULE_AVCONF_EXT)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0033: CELL_SYSMODULE_SYSUTIL_SAVEDATA)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0039: CELL_SYSMODULE_SYSUTIL_AP)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0000: CELL_SYSMODULE_NET)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f65c]} sys_net: sys_net_initialize_network_ex(param=*0xd003e3d4)
HLE: W {PPU[0x74] Thread (BP_System)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0x6d, cause=*0x0, status=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f63c]} cellNetCtl: cellNetCtlInit()
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f5dc]} sceNp: sceNpInit(poolsize=0x20000, poolptr=*0x20179180)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026e9fc]} cellSysutil: cellSaveDataEnableOverlay(enable=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x00043bb4]} sys_memory: sys_memory_container_create(cid=*0x2017916c, size=0x100000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eabc]} cellGame: cellGameBootCheck(type=*0xd003e2f0, attributes=*0xd003e2f4, size=*0xd003e2f8, dirName=*0xd003e308)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ea3c]} cellGame: cellGameGetParamString(id=100, buf=*0xd003e308, bufsize=10)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ea5c]} cellGame: cellGameContentPermit(contentInfoPath=*0x20178f64, usrdirPath=*0x20178fe4)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8bc]} cellSysmodule: cellSysmoduleUnloadModule(id=0x003e: CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e93c]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd003e3d0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ed5c]} cellFs: cellFsAioInit(mount_point=*0x10741e8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ed5c]} cellFs: *** mount_point = '/dev_bdvd/PS3_GAME/USRDIR/BOOTLOADER/'
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20199770, attr=*0xd003e270)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0050: CELL_SYSMODULE_SPURS_JQ)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f19c]} cellSpursJq: cellSpursJobQueueAttributeInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f25c]} cellSpursJq: cellSpursJobQueueAttributeSetGrabParameters
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f17c]} cellSpursJq: cellSpursJobQueueAttributeSetMaxSizeJobDescriptor
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f15c]} cellSpursJq: cellSpursJobQueueAttributeSetSubmitWithEntryLock
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f13c]} cellSpursJq: cellSpursJobQueueAttributeSetDoBusyWaiting
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f2dc]} cellSpursJq: cellSpursJobQueueAttributeSetIsHaltOnError
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f1bc]} cellSpursJq: cellSpursJobQueueAttributeSetIsJobTypeMemoryCheck
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f29c]} cellSpursJq: _cellSpursCreateJobQueue
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f27c]} cellSpursJq: cellSpursJobQueuePort2Create
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f0dc]} cellSpurs: _cellSpursTasksetAttribute2Initialize(attribute=*0xd003e040, revision=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ef3c]} cellSpurs: cellSpursCreateTaskset2(spurs=*0x20174e80, taskset=*0x2019b300, attr=*0xd003e040)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ef3c]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003daa0, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x2019b300, priority=*0xd003e050, minCnt=0x8, maxCnt=0x1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ef3c]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003daa0, nameClass=*0x0, nameInstance=*0x27b488)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ef3c]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0x20174e80, wid=*0xd003da98, attr=*0xd003daa0)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026ee3c]} cellSpurs TODO: _cellSpursLFQueueInitialize(pTasksetOrSpurs=*0x2019b300, pQueue=*0x201bdc80, buffer=*0x2019dc10, size=0x40, depth=0x800, direction=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ee3c]} cellSync: cellSyncLFQueueInitialize(queue=*0x201bdc80, buffer=*0x2019dc10, size=0x40, depth=0x800, direction=2, eaSignal=*0x2019b300)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026eebc]} cellSpurs: cellSpursLFQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f01c]} cellSpurs: _cellSpursTaskAttribute2Initialize(attribute=*0xd003df40, revision=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f11c]} cellSpurs: cellSpursCreateTask2
HLE: W {PPU[0x1] Thread (main_thread)[0x001c9e3c]} sys_memory: sys_memory_allocate(size=0x3800000, flags=0x400, alloc_addr=*0xd003e0e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f33c]} cellGcmSys: _cellGcmInitBody(context=**0x12242b0, cmdSize=0x200000, ioSize=0x3600000, ioAddress=0x20200000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f33c]} cellGcmSys: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f33c]} cellGcmSys: cellGcmInit(): 256MB io address space used
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x20199740, attr=*0xd003e2f4)
RSX: ! {rsx::thread} RSX thread started
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f45c]} cellGcmSys: cellGcmSetFlipHandler(handler=*0x2b8910)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f4dc]} cellGcmSys: cellGcmSetVBlankHandler(handler=*0x2b89c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f3bc]} cellGcmSys: cellGcmSetFlipMode(mode=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1224288, attr=*0xd003e250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x1224288, attr=*0xd003e250)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f23c]} cellSpursJq: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[0x1] Thread (main_thread)[0x0026f2bc]} cellSpursJq: cellSpursJobQueuePort2Sync
HLE: W {PPU[0x1] Thread (main_thread)[0x001c9e3c]} sys_memory: sys_memory_allocate(size=0x100000, flags=0x400, alloc_addr=*0xd003df20)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f51c]} cellGcmSys: cellGcmSetTileInfo(index=0, location=0, offset=589824, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f39c]} cellGcmSys: cellGcmBindTile(index=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x00092078]} sys_event_flag: sys_event_flag_create(id=*0x10fc008, attr=*0xd003e3c0, init=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x10fc000, entry=0x2b8ad0, arg=0x20199360, prio=1001, stacksize=0x8000, flags=0x1, threadname=*0x27b460)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x10fc000, param=*0xd003e340, arg=0x20199360, unk=0x0, prio=1001, stacksize=0x8000, flags=0x1, threadname=*0x27b460)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x7b)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8fc]} cellSysutil: cellVideoOutConfigure(videoOut=0, config=*0xd003e3b0, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f51c]} cellGcmSys: cellGcmSetTileInfo(index=1, location=0, offset=4521984, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f39c]} cellGcmSys: cellGcmBindTile(index=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f51c]} cellGcmSys: cellGcmSetTileInfo(index=2, location=0, offset=8454144, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f39c]} cellGcmSys: cellGcmBindTile(index=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f51c]} cellGcmSys: cellGcmSetTileInfo(index=3, location=0, offset=12386304, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f39c]} cellGcmSys: cellGcmBindTile(index=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f6bc]} cellSysmodule: cellSysmoduleInitialize()
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x0017: CELL_SYSMODULE_IO)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026e8dc]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x239e6db0, attr=*0xd003dc30)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fcbc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x239e6de0, lwmutex=*0x239e6db0, attr=*0xd003dc20)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x239e6e00, attr=*0xd003dbc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2397e2c0, attr=*0xd003dc40)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2397e348, attr=*0xd003dce0)
HLE: W {PPU[0x1] Thread (main_thread)[0x000ddee0]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x2397e37c, attr=*0xd003dcd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x2397e398, attr=*0xd003dce0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fcbc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x2397e3c0, lwmutex=*0x2397e398, attr=*0xd003dcd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x000ddee0]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x239e6e7c, attr=*0xd003dcd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ee9c]} cellSpurs: _cellSpursTasksetAttributeInitialize(attribute=*0xd003dfe0, revision=1, skd_version=0x330000, args=0x0, priority=*0xd003de80, max_contention=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ef9c]} cellSpurs: cellSpursTasksetAttributeSetName(attr=*0xd003dfe0, name=*0x279340)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f0bc]} cellSpurs: cellSpursCreateTasksetWithAttribute(spurs=*0x20176f00, taskset=*0x2397f780, attr=*0xd003dfe0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f0bc]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003dbb8, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x2397f780, priority=*0xd003dff0, minCnt=0x8, maxCnt=0x8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f0bc]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003dbb8, nameClass=*0x0, nameInstance=*0x279340)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f0bc]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0x20176f00, wid=*0xd003dbb0, attr=*0xd003dbb8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ef7c]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x20176f00, taskset=*0x0, eventFlag=*0x23981080, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026efdc]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0x23981080)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026efdc]} sys_event: sys_event_queue_create(equeue_id=*0xd003ddb8, attr=*0xd003dd98, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026efdc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x6d, eq=0x85, req=0xffffffffffff0000, spup=*0xd003ddb0)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026ee3c]} cellSpurs TODO: _cellSpursLFQueueInitialize(pTasksetOrSpurs=*0x20176f01, pQueue=*0x23981100, buffer=*0x23981180, size=0x20, depth=0xc, direction=3)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ee3c]} cellSync: cellSyncLFQueueInitialize(queue=*0x23981100, buffer=*0x23981180, size=0x20, depth=0xc, direction=3, eaSignal=*0x20176f01)
HLE: E {PPU[0x1] Thread (main_thread)[0x0026eebc]} cellSpurs: cellSpursLFQueueAttachLv2EventQueue
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f97c]} cellSpurs: cellSpursCreateTask(taskset=*0x2397f780, taskID=*0xd003dd30, elf=*0x28d200, context=*0x2397e780, size=0xc00, lsPattern=*0x27e568, argument=*0xd003dd38)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f97c]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0x20176f00, wid=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f97c]} cellSpurs: cellSpursWakeUp(spurs=*0x20176f00)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x239e6eb0, attr=*0xd003dba0)
HLE: W {PPU[0x1] Thread (main_thread)[0x000ddee0]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x239e6f34, attr=*0xd003dcc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x239e6f50, attr=*0xd003dcd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x239e6f78, attr=*0xd003dcd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x239e7010, attr=*0xd003dcd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fcbc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x239e7038, lwmutex=*0x239e7010, attr=*0xd003dcc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x239e70e0, attr=*0xd003dcd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x23981630, attr=*0xd003dbd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x23981658, attr=*0xd003dbd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x000ddee0]} sys_rwlock: sys_rwlock_create(rw_lock_id=*0x2398167c, attr=*0xd003dbc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x23981698, attr=*0xd003dbd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x23981700, attr=*0xd003dbd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fcbc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x23981728, lwmutex=*0x23981700, attr=*0xd003dbc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fcbc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x23981740, lwmutex=*0x23981700, attr=*0xd003dbc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x23981758, attr=*0xd003dbd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x239817a8, attr=*0xd003dbd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fcbc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x239fc460, lwmutex=*0x239817a8, attr=*0xd003dbc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fcbc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x239fc478, lwmutex=*0x239817a8, attr=*0xd003dbc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fcbc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x239fc490, lwmutex=*0x239817a8, attr=*0xd003dbc0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x239fc4d0, entry=0x2ba690, arg=0x239fc498, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x239fc4a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x239fc4d0, param=*0xd003db70, arg=0x239fc498, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x239fc4a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x99)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x239fc510, entry=0x2ba690, arg=0x239fc4d8, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x239fc4e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x239fc510, param=*0xd003db70, arg=0x239fc4d8, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x239fc4e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x9a)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x239fc550, entry=0x2ba690, arg=0x239fc518, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x239fc520)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x239fc550, param=*0xd003db70, arg=0x239fc518, unk=0x0, prio=99, stacksize=0x8000, flags=0x1, threadname=*0x239fc520)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x9b)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x239816e8, entry=0x2ba690, arg=0x239816b0, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x239816b8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x239816e8, param=*0xd003db70, arg=0x239816b0, unk=0x0, prio=100, stacksize=0x10000, flags=0x1, threadname=*0x239816b8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x9c)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ecdc]} cellFs: cellFsOpen(path=*0xd007b370, flags=0, fd=*0xd007b224, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ecdc]} sys_fs: sys_fs_open(path=*0xd007b370, flags=0, fd=*0xd007b224, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ecdc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/BOOTLOADER/bootloader_eu.psarc'
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ed7c]} sys_fs: sys_fs_fstat(fd=3, sb=*0xd007b2e4)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ecfc]} cellFs: cellFsStat(path=*0xd007b360, sb=*0xd007b2d4) -> sys_fs_stat()
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ecfc]} sys_fs: sys_fs_stat(path=*0xd007b360, sb=*0xd007b2d4)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ecfc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/BOOTLOADER/bootloader_eu.psarc'
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001ba6e8]} sys_time: sys_time_get_timezone(timezone=*0xd007b170, summertime=*0xd007b174)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001bc1b4]} sys_time: sys_time_get_timezone(timezone=*0xd007b0c0, summertime=*0xd007b0c4)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001ba6e8]} sys_time: sys_time_get_timezone(timezone=*0xd007b170, summertime=*0xd007b174)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001bc1b4]} sys_time: sys_time_get_timezone(timezone=*0xd007b0c0, summertime=*0xd007b0c4)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001ba6e8]} sys_time: sys_time_get_timezone(timezone=*0xd007b170, summertime=*0xd007b174)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001bc1b4]} sys_time: sys_time_get_timezone(timezone=*0xd007b0c0, summertime=*0xd007b0c4)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ecfc]} cellFs: cellFsStat(path=*0xd007b5f0, sb=*0xd007b564) -> sys_fs_stat()
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ecfc]} sys_fs: sys_fs_stat(path=*0xd007b5f0, sb=*0xd007b564)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x0026ecfc]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/BOOTLOADER/bootloader_eu.psarc'
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001ba6e8]} sys_time: sys_time_get_timezone(timezone=*0xd007b400, summertime=*0xd007b404)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001bc1b4]} sys_time: sys_time_get_timezone(timezone=*0xd007b350, summertime=*0xd007b354)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001ba6e8]} sys_time: sys_time_get_timezone(timezone=*0xd007b400, summertime=*0xd007b404)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001bc1b4]} sys_time: sys_time_get_timezone(timezone=*0xd007b350, summertime=*0xd007b354)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001ba6e8]} sys_time: sys_time_get_timezone(timezone=*0xd007b400, summertime=*0xd007b404)
HLE: W {PPU[0x99] Thread (fios mediathread 2)[0x001bc1b4]} sys_time: sys_time_get_timezone(timezone=*0xd007b350, summertime=*0xd007b354)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x23a04ec0, attr=*0xd003e290)
HLE: W {PPU[0x1] Thread (main_thread)[0x00041bcc]} sys_event_flag: sys_event_flag_create(id=*0x10daed8, attr=*0xd003e270, init=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x000421d4]} sys_event_flag: sys_event_flag_create(id=*0x23a04fd4, attr=*0xd003e238, init=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x23a04fd8, entry=0x2b5fc8, arg=0x23a04fb0, prio=1001, stacksize=0x8000, flags=0x1, threadname=*0x278960)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x23a04fd8, param=*0xd003e190, arg=0x23a04fb0, unk=0x0, prio=1001, stacksize=0x8000, flags=0x1, threadname=*0x278960)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fa3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0xa0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ed9c]} cellAudio: cellAudioInit()
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ee1c]} cellAudio: cellAudioPortOpen(audioParam=*0x1075b28, portNum=*0x1075b70)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ee1c]} cellAudio: *** audio port opened(nChannel=8, nBlock=8, attr=0x0, level=1.000000): port = 0
HLE: W {PPU[0x1] Thread (main_thread)[0x0026eddc]} cellAudio: cellAudioGetPortConfig(portNum=0, portConfig=*0x1075b48)
HLE: W {PPU[0x1] Thread (main_thread)[0x001c9e3c]} sys_memory: sys_memory_allocate(size=0x700000, flags=0x400, alloc_addr=*0xd003e0a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026fabc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x123a380, attr=*0xd003e0c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f93c]} cellSpurs: cellSpursCreateTaskset(spurs=*0x20176f00, taskset=*0x123a780, args=0x0, priority=*0xd003e2b0, maxContention=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f93c]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd003df68, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x123a780, priority=*0xd003e2b0, minCnt=0x8, maxCnt=0x1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f93c]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd003df68, nameClass=*0x0, nameInstance=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f93c]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0x20176f00, wid=*0xd003df60, attr=*0xd003df68)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ef7c]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x123a780, eventFlag=*0x123c100, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026efdc]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0x123c100)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026efdc]} sys_event: sys_event_queue_create(equeue_id=*0xd003e168, attr=*0xd003e148, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026efdc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x6d, eq=0xa2, req=0xffffffffffff0000, spup=*0xd003e160)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ef7c]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x123a780, eventFlag=*0x1240200, flagClearMode=0, flagDirection=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f97c]} cellSpurs: cellSpursCreateTask(taskset=*0x123a780, taskID=*0x123c080, elf=*0x296100, context=*0x1240280, size=0x3d400, lsPattern=*0x273ec8, argument=*0xd003e1f0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f97c]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0x20176f00, wid=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026f97c]} cellSpurs: cellSpursWakeUp(spurs=*0x20176f00)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ecdc]} cellFs: cellFsOpen(path=*0x27eea8, flags=0, fd=*0xd003e110, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ecdc]} sys_fs: sys_fs_open(path=*0x27eea8, flags=0, fd=*0xd003e110, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ecdc]} sys_fs: *** path = '/dev_flash/sys/external/flashATRAC.pic'
HLE: W {PPU[0x1] Thread (main_thread)[0x0026ef1c]} cellSpurs: cellSpursEventFlagWait(eventFlag=*0x123c100, mask=*0x10746a0, mode=1)
G: ! Stopping emulator...
G: ! {SPU[0x41] Thread (BP_MainCellSpursKernel0)[0x00848]} Thread aborted
G: ! {SPU[0x42] Thread (BP_MainCellSpursKernel1)[0x00848]} Thread aborted
HLE: S {PPU[0xa0] Thread (Bootloader Tasks)[0x00041d48]} Last syscall: 85 (sys_event_flag_wait)
G: ! {SPU[0x44] Thread (BP_MainCellSpursKernel3)[0x00848]} Thread aborted
G: ! {SPU[0x6e] Thread (BP_SystemCellSpursKernel0)[0x00848]} Thread aborted
G: ! {SPU[0x45] Thread (BP_MainCellSpursKernel4)[0x00848]} Thread aborted
G: ! All threads signaled...
HLE: S {PPU[0x1] Thread (main_thread)[0x0026ef1c]} Last function: cellSpursEventFlagWait (0x373523d4)
G: ! {SPU[0x43] Thread (BP_MainCellSpursKernel2)[0x00848]} Thread aborted
G: ! {PPU[0x4a] Thread (BP_Main)[0x00000000]} Thread aborted
HLE: S {PPU[0x1e] Thread (_SPU_printf_server)[0x001c4e9c]} Last syscall: 130 (sys_event_queue_receive)
G: ! {PPU[0x2] Thread (Callback Thread)[0x00000000]} Thread aborted
G: ! {PPU[0xa0] Thread (Bootloader Tasks)[0x00041d48]} Thread aborted
G: ! {PPU[0x1] Thread (main_thread)[0x0026ef1c]} Thread aborted
G: ! {PPU[0x1e] Thread (_SPU_printf_server)[0x001c4e9c]} Thread aborted
HLE: S {PPU[0x9a] Thread (fios mediathread 3)[0x0026fa7c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0x74] Thread (BP_System)[0x00000000]} Thread aborted
HLE: S {PPU[0x9b] Thread (fios mediathread 4)[0x0026fa7c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0x73] Thread (BP_System)[0x00000000]} Thread aborted
G: ! {PPU[0x9a] Thread (fios mediathread 3)[0x0026fa7c]} Thread aborted
HLE: S {PPU[0x7b] Thread (BP Render Thread)[0x00094b5c]} Last syscall: 85 (sys_event_flag_wait)
G: ! {PPU[0x9b] Thread (fios mediathread 4)[0x0026fa7c]} Thread aborted
HLE: S {PPU[0x9c] Thread (fios scheduler 1)[0x0026fa7c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0x7b] Thread (BP Render Thread)[0x00094b5c]} Thread aborted
HLE: S {PPU[0x99] Thread (fios mediathread 2)[0x0026fa7c]} Last function: sys_lwcond_wait (0x2a6d9d51)
G: ! {PPU[0x4b] Thread (BP_Main)[0x00000000]} Thread aborted
G: ! {PPU[0x9c] Thread (fios scheduler 1)[0x0026fa7c]} Thread aborted
G: ! {PPU[0x99] Thread (fios mediathread 2)[0x0026fa7c]} Thread aborted
RSX: W {rsx::thread} RSX thread aborted
RSX: ! {rsx::thread} RSX thread ended
G: ! {VBlank Thread} Thread aborted
G: ! All threads stopped...
G: ! Objects cleared...
G: ! Stopping emulator...
