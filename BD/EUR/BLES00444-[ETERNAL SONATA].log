LDR: E PSFLoader::Load() failed: unknown magic (0x0)
G: ! RPCS3 0.0.0.5 v0.0.0.5-2529-g286d296
G: ! 
G: ! Stopping emulator...
LDR: ! Loading 'D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00444-[ETERNAL SONATA]/PS3_GAME/USRDIR/BOOT.BIN'...
G: W fs::file::open('D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00444-[ETERNAL SONATA]/PS3_GAME/dev_bdvd.path', 0x1) failed: error 0x2
LDR: ! 
LDR: ! Mount info:
LDR: ! /dev_usb000/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! /dev_flash/ -> D:/Emulateurs/Rpcs3/dev_flash/
LDR: ! /host_root/ -> 
LDR: ! /dev_hdd0/ -> D:/Emulateurs/Rpcs3/dev_hdd0/
LDR: ! /dev_hdd1/ -> D:/Emulateurs/Rpcs3/dev_hdd1/
LDR: ! /dev_bdvd/ -> D:/Emulateurs/Rpcs3/dev_hdd0/game/BLES00444-[ETERNAL SONATA]/
LDR: ! /dev_usb/ -> D:/Emulateurs/Rpcs3/dev_usb000/
LDR: ! 
LDR: ! Settings:
LDR: ! CPU: PPU Interpreter 2
LDR: ! SPU: SPU Recompiler (ASMJIT)
LDR: ! Renderer: DirectX 12
LDR: ! D3D Adapter: Default
LDR: ! Resolution: 1280x720
LDR: ! Write Depth Buffer: No
LDR: ! Write Color Buffers: No
LDR: ! Read Color Buffer: No
LDR: ! Audio Out: XAudio2
LDR: ! Log Everything: No
LDR: ! RSX Logging: No
LDR: ! 
LDR: ! Title: ETERNAL SONATA
LDR: ! Serial: BLES00444
LDR: ! Elf path: /dev_bdvd/PS3_GAME/USRDIR/BOOT.BIN
LDR: ! 
LDR: ! loader::init() failed: Broken file
LDR: ! *** sdk version: 0x230001
LDR: ! *** primary prio: 1001
LDR: ! *** primary stacksize: 0x20000
LDR: ! *** malloc pagesize: 0x100000
LDR: ! *** ppc seg: 0x0
LDR: ! Imported function 'cellPadClearBuf' in 'sys_io' module (0x40efbc)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module (0x40efdc)
LDR: ! Imported function 'cellPadGetInfo' in 'sys_io' module (0x40effc)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module (0x40f01c)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module (0x40f03c)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module (0x40f05c)
LDR: ! Imported function 'cellPadSetPressMode' in 'sys_io' module (0x40f07c)
LDR: ! Imported function 'cellGcmGetTiledPitchSize' in 'cellGcmSys' module (0x40f09c)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module (0x40f0bc)
LDR: ! Imported function '_cellGcmSetFlipCommand' in 'cellGcmSys' module (0x40f0dc)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module (0x40f0fc)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module (0x40f11c)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module (0x40f13c)
LDR: ! Imported function 'cellGcmGetFlipStatus' in 'cellGcmSys' module (0x40f15c)
LDR: ! Imported function 'cellGcmGetReport' in 'cellGcmSys' module (0x40f17c)
LDR: ! Imported function 'cellGcmMapMainMemory' in 'cellGcmSys' module (0x40f19c)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module (0x40f1bc)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module (0x40f1dc)
LDR: ! Imported function 'cellGcmSetVBlankHandler' in 'cellGcmSys' module (0x40f1fc)
LDR: ! Imported function 'cellGcmResetFlipStatus' in 'cellGcmSys' module (0x40f21c)
LDR: ! Imported function 'cellGcmSetTile' in 'cellGcmSys' module (0x40f23c)
LDR: ! Imported function 'cellGcmSetZcull' in 'cellGcmSys' module (0x40f25c)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module (0x40f27c)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module (0x40f29c)
LDR: ! Imported function 'cellSysutilUnregisterCallback' in 'cellSysutil' module (0x40f2bc)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module (0x40f2dc)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module (0x40f2fc)
LDR: ! Imported function 'cellSaveDataListLoad2' in 'cellSysutil' module (0x40f31c)
LDR: ! Imported function 'cellSaveDataListSave2' in 'cellSysutil' module (0x40f33c)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module (0x40f35c)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module (0x40f37c)
LDR: ! Imported function 'cellVideoOutGetNumberOfDevice' in 'cellSysutil' module (0x40f39c)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module (0x40f3bc)
LDR: ! Imported function 'cellSaveDataAutoSave2' in 'cellSysutil' module (0x40f3dc)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module (0x40f3fc)
LDR: ! Imported function 'cellVideoOutGetResolutionAvailability' in 'cellSysutil' module (0x40f41c)
LDR: ! Imported function 'cellAudioOutGetSoundAvailability' in 'cellSysutil' module (0x40f43c)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module (0x40f45c)
LDR: ! Imported function 'cellSaveDataDelete2' in 'cellSysutil' module (0x40f47c)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module (0x40f49c)
LDR: ! Imported function 'cellSaveDataAutoLoad2' in 'cellSysutil' module (0x40f4bc)
LDR: ! Imported function 'cellVideoOutSetGamma' in 'cellSysutilAvconfExt' module (0x40f4dc)
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module (0x40f4fc)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module (0x40f51c)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module (0x40f53c)
LDR: ! Imported function 'cellFsReaddir' in 'sys_fs' module (0x40f55c)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module (0x40f57c)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module (0x40f59c)
LDR: ! Imported function 'cellFsUnlink' in 'sys_fs' module (0x40f5bc)
LDR: ! Imported function 'cellFsAioRead' in 'sys_fs' module (0x40f5dc)
LDR: ! Imported function 'cellFsAioInit' in 'sys_fs' module (0x40f5fc)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module (0x40f61c)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module (0x40f63c)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module (0x40f65c)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module (0x40fb1c)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module (0x40f67c)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module (0x40f69c)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module (0x40f6bc)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module (0x40f6dc)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module (0x40f6fc)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module (0x40f71c)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module (0x40f73c)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module (0x40f75c)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module (0x40f77c)
LDR: ! Imported function 'cellSpursAttributeSetNamePrefix' in 'cellSpurs' module (0x40f79c)
LDR: ! Imported function 'cellSpursCreateJobChainWithAttribute' in 'cellSpurs' module (0x40f7bc)
LDR: ! Imported function '_cellSpursJobChainAttributeInitialize' in 'cellSpurs' module (0x40f7dc)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module (0x40f7fc)
LDR: ! Imported function 'cellSpursDetachLv2EventQueue' in 'cellSpurs' module (0x40f81c)
LDR: ! Imported function '_cellSpursEventFlagInitialize' in 'cellSpurs' module (0x40f83c)
LDR: ! Imported function 'cellSpursEventFlagAttachLv2EventQueue' in 'cellSpurs' module (0x40f85c)
LDR: ! Imported function '_cellSpursAttributeInitialize' in 'cellSpurs' module (0x40f87c)
LDR: ! Imported function 'cellSpursJobChainAttributeSetName' in 'cellSpurs' module (0x40f89c)
LDR: ! Imported function 'cellSpursInitializeWithAttribute' in 'cellSpurs' module (0x40f8bc)
LDR: ! Imported function 'cellSpursInitialize' in 'cellSpurs' module (0x40f8dc)
LDR: ! Imported function 'cellSpursAttachLv2EventQueue' in 'cellSpurs' module (0x40f8fc)
LDR: ! Imported function 'cellSpursRunJobChain' in 'cellSpurs' module (0x40f91c)
LDR: ! Imported function 'cellSpursEventFlagDetachLv2EventQueue' in 'cellSpurs' module (0x40fb3c)
LDR: ! Imported function 'cellSpursCreateTaskset' in 'cellSpurs' module (0x40fb5c)
LDR: ! Imported function 'cellSpursJoinTaskset' in 'cellSpurs' module (0x40fb7c)
LDR: ! Imported function 'cellSpursShutdownTaskset' in 'cellSpurs' module (0x40fb9c)
LDR: ! Imported function 'cellSpursCreateTask' in 'cellSpurs' module (0x40fbbc)
LDR: ! Imported function '_cellSpursSendSignal' in 'cellSpurs' module (0x40fbdc)
LDR: ! Imported function 'jstrchk' in 'cellL10n' module (0x40f93c)
LDR: ! Imported function 'l10n_convert_str' in 'cellL10n' module (0x40f95c)
LDR: ! Imported function 'l10n_get_converter' in 'cellL10n' module (0x40f97c)
LDR: ! Imported function 'cellRescGcmSurface2RescSrc' in 'cellResc' module (0x40f99c)
LDR: ! Imported function 'cellRescSetWaitFlip' in 'cellResc' module (0x40f9bc)
LDR: ! Imported function 'cellRescResetFlipStatus' in 'cellResc' module (0x40f9dc)
LDR: ! Imported function 'cellRescSetDisplayMode' in 'cellResc' module (0x40f9fc)
LDR: ! Imported function 'cellRescSetConvertAndFlip' in 'cellResc' module (0x40fa1c)
LDR: ! Imported function 'cellRescInit' in 'cellResc' module (0x40fa3c)
LDR: ! Imported function 'cellRescGetBufferSize' in 'cellResc' module (0x40fa5c)
LDR: ! Imported function 'cellRescSetSrc' in 'cellResc' module (0x40fa7c)
LDR: ! Imported function 'cellRescSetBufferAddress' in 'cellResc' module (0x40fa9c)
LDR: ! Imported function 'cellRescGetFlipStatus' in 'cellResc' module (0x40fabc)
LDR: ! Imported function 'cellRescSetVBlankHandler' in 'cellResc' module (0x40fadc)
LDR: ! Imported function 'cellRescCreateInterlaceTable' in 'cellResc' module (0x40fafc)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module (0x40fbfc)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module (0x40fc1c)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module (0x40fc3c)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module (0x40fc5c)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module (0x40fc7c)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module (0x40fc9c)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module (0x40fcbc)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module (0x40fcdc)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module (0x40fcfc)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module (0x40fd1c)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module (0x40fd3c)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module (0x40fd5c)
LDR: ! Imported function 'sys_spu_image_close' in 'sysPrxForUser' module (0x40fd7c)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module (0x40fd9c)
MEM: ! Thread Local Storage initialized (g_tls_start=0xa31000, user_size=0x110)
*** TLS segment addr: 0x005446b0
*** TLS segment size: 0x00000004
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9ebca0, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x003f9054]} sys_memory: sys_memory_get_user_memory_size(mem_info=*0xd001fc04)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9ebaa0, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9eb228, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9eb250, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9eb278, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9eb160, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9eb188, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9eb1b0, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9eb1d8, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9eb200, attr=*0x47d250)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x9cbf64, attr=*0xd001fb40, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x8ad320, attr=*0xd001fb30, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x8a6d2c, attr=*0xd001fb40, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x83e71c, attr=*0xd001fb40, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f3fc]} cellSysutil: cellSysutilRegisterCallback(slot=3, func=*0x530840, userdata=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f35c]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd001fbd0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f35c]} cellSysutil: cellSysutilGetSystemParamInt(id=0x111(ID_LANG), value=*0xd001fc30)
HLE: W {PPU[0x1] Thread (main_thread)[0x002c1df0]} sys_memory: sys_memory_allocate(size=0xbb00000, flags=0x400, alloc_addr=*0xd001fb90)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x8a69e0, attr=*0xd001fa50, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x85bb60, attr=*0xd001f1f0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x85bb78, attr=*0xd001f1f0, initial_val=2, max_val=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x85bb90, attr=*0xd001f1f0, initial_val=0, max_val=32)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x85bba8, attr=*0xd001f1f0, initial_val=0, max_val=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x85bbec, attr=*0xd001f1f0, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x85bb30, entry=0x532270, arg=0x85bb30, prio=1101, stacksize=0x10000, flags=0x0, threadname=*0x48d018)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x85bb30, param=*0xd001f188, arg=0x85bb30, unk=0x0, prio=1101, stacksize=0x10000, flags=0x0, threadname=*0x48d018)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x17)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x85bb40, entry=0x5322c0, arg=0x85bb30, prio=1101, stacksize=0x10000, flags=0x0, threadname=*0x48d018)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x85bb40, param=*0xd001f188, arg=0x85bb30, unk=0x0, prio=1101, stacksize=0x10000, flags=0x0, threadname=*0x48d018)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x18)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x89c700, attr=*0xd001f1f0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x89fa48, attr=*0xd001f1f0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x8a2d90, attr=*0xd001f1f0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f69c]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f5fc]} cellFs: cellFsAioInit(mount_point=*0x489d88)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f5fc]} cellFs: *** mount_point = '/dev_bdvd'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} cellFs: cellFsOpen(path=*0x489d98, flags=0, fd=*0x8a62d0, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: sys_fs_open(path=*0x489d98, flags=0, fd=*0x8a62d0, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/archives/root.files'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} cellFs: cellFsOpen(path=*0x489dc8, flags=0, fd=*0x8a62dc, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: sys_fs_open(path=*0x489dc8, flags=0, fd=*0x8a62dc, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/archives/campdata.files'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} cellFs: cellFsOpen(path=*0x489e00, flags=0, fd=*0x8a62e8, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: sys_fs_open(path=*0x489e00, flags=0, fd=*0x8a62e8, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/archives/btldata.files'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} cellFs: cellFsOpen(path=*0x489e38, flags=0, fd=*0x8a62f4, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: sys_fs_open(path=*0x489e38, flags=0, fd=*0x8a62f4, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/archives/cfdata.files'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} cellFs: cellFsOpen(path=*0x489e68, flags=0, fd=*0x8a6300, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: sys_fs_open(path=*0x489e68, flags=0, fd=*0x8a6300, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/archives/evdata.files'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} cellFs: cellFsOpen(path=*0x489e98, flags=0, fd=*0x8a630c, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: sys_fs_open(path=*0x489e98, flags=0, fd=*0x8a630c, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/archives/maptex.files'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} cellFs: cellFsOpen(path=*0x489ec8, flags=0, fd=*0x8a6318, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: sys_fs_open(path=*0x489ec8, flags=0, fd=*0x8a6318, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/archives/mapse.files'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} cellFs: cellFsOpen(path=*0x489ef8, flags=0, fd=*0x8a6324, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: sys_fs_open(path=*0x489ef8, flags=0, fd=*0x8a6324, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: *** path = '/dev_bdvd/PS3_GAME/USRDIR/archives/cxs.files'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f39c]} cellSysutil: cellVideoOutGetNumberOfDevice(videoOut=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f41c]} cellSysutil: cellVideoOutGetResolutionAvailability(videoOut=0, resolutionId=0x2, aspect=2, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x002a9ddc]} sys_memory: sys_memory_allocate(size=0x400000, flags=0x400, alloc_addr=*0xd001fabc)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f0bc]} cellGcmSys: _cellGcmInitBody(context=**0x9ea77c, cmdSize=0x3ff000, ioSize=0x400000, ioAddress=0x2bb00000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f0bc]} cellGcmSys: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f0bc]} cellGcmSys: cellGcmInit(): 256MB io address space used
RSX: ! {RSXThread} RSX thread started
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f19c]} cellGcmSys: cellGcmMapMainMemory(ea=0x20000000, size=0xbb00000, offset=*0xd001fab8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f2dc]} cellSysutil: cellVideoOutConfigure(videoOut=0, config=*0xd001faf8, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f69c]} cellSysmodule: cellSysmoduleLoadModule(id=0x0031: CELL_SYSMODULE_AVCONF_EXT)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f4dc]} cellAvconfExt: cellVideoOutSetGamma(videoOut=0, gamma=1.200000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f13c]} cellGcmSys: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x840420, attr=*0xd001f950, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=0, location=0, offset=65536, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=1, location=0, offset=3932160, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=2, location=0, offset=7798784, size=3801088, pitch=5120, comp=9, base=0, bank=1)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile: bad compression mode! (9)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=3, location=0, offset=11665408, size=7536640, pitch=10240, comp=7, base=178, bank=0)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile: bad compression mode! (7)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=4, location=0, offset=19267584, size=7536640, pitch=10240, comp=11, base=294, bank=1)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile: bad compression mode! (11)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f25c]} cellGcmSys TODO: cellGcmSetZcull(index=0, offset=0x1260000, width=1280, height=768, cullStart=0x0, zFormat=0x2, aaFormat=0x3, zCullDir=0x0, zCullFormat=0x1, sFunc=0x5, sRef=0x0, sMask=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f1fc]} cellGcmSys: cellGcmSetVBlankHandler(handler=*0x531c00)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x9d377c, attr=*0xd001f8a0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f87c]} cellSpurs: _cellSpursAttributeInitialize(attr=*0xd001f778, revision=2, sdkVersion=0x230001, nSpus=5, spuPriority=250, ppuPriority=1000, exitIfNoWork=4097)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f79c]} cellSpurs: cellSpursAttributeSetNamePrefix(attr=*0xd001f778, prefix=*0x48ca38, size=4)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} cellSpurs: cellSpursInitializeWithAttribute(spurs=*0x8b9800, attr=*0xd001f778)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0x8b9800, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f6a8, attr=*0xd001f688, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: sys_spu_thread_group_create(id=*0xd001f668, num=5, prio=250, attr=*0xd001f5d8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: sys_spu_thread_initialize(thread=*0xd001f5b0, group=0x2f, spu_num=0, img=*0x8ba570, attr=*0xd001f5a0, arg=*0xd001f5b8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: sys_spu_thread_initialize(thread=*0xd001f5b0, group=0x2f, spu_num=1, img=*0x8ba570, attr=*0xd001f5a0, arg=*0xd001f5b8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: sys_spu_thread_initialize(thread=*0xd001f5b0, group=0x2f, spu_num=2, img=*0x8ba570, attr=*0xd001f5a0, arg=*0xd001f5b8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: sys_spu_thread_initialize(thread=*0xd001f5b0, group=0x2f, spu_num=3, img=*0x8ba570, attr=*0xd001f5a0, arg=*0xd001f5b8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: sys_spu_thread_initialize(thread=*0xd001f5b0, group=0x2f, spu_num=4, img=*0x8ba570, attr=*0xd001f5a0, arg=*0xd001f5b8)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x8ba5b0, attr=*0xd001f670)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x8ba5c8, lwmutex=*0x8ba5b0, attr=*0xd001f680)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_event: sys_event_queue_create(equeue_id=*0x8ba55c, attr=*0xd001f508, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x2f, eq=0x37, req=0xffffffffffff0000, spup=*0x8b98c9)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_event: sys_event_port_create(eport_id=*0x8ba560, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_event: sys_event_port_connect_local(eport_id=0x38, equeue_id=0x37)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0x8b9800, flag=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} sys_spu: sys_spu_thread_group_connect_event(id=0x2f, eq=0x37, et=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8bc]} cellSpurs: cellSpursWakeUp(spurs=*0x8b9800)
HLE: W {PPU[0x1] Thread (main_thread)[0x0030acd4]} sys_event: sys_event_queue_create(equeue_id=*0x9caba8, attr=*0xd001f768, event_queue_key=0x0, size=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x9cabb0, entry=0x533520, arg=0x3b, prio=1000, stacksize=0x10000, flags=0x1, threadname=*0x48ca00)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x9cabb0, param=*0xd001f6a8, arg=0x3b, unk=0x0, prio=1000, stacksize=0x10000, flags=0x1, threadname=*0x48ca00)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x3c)
HLE: W {PPU[0x1] Thread (main_thread)[0x0030aecc]} sys_event: sys_event_port_create(eport_id=*0x9cabb8, port_type=1, name=0xfee1dead)
HLE: W {PPU[0x1] Thread (main_thread)[0x0030aee4]} sys_event: sys_event_port_connect_local(eport_id=0x3d, equeue_id=0x3b)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8fc]} cellSpurs: cellSpursAttachLv2EventQueue(spurs=*0x8b9800, queue=0x3b, port=*0xd001f750, isDynamic=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8fc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x2f, eq=0x3b, req=0x2, spup=*0xd001f750)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f7dc]} cellSpurs: _cellSpursJobChainAttributeInitialize
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f89c]} cellSpurs: cellSpursJobChainAttributeSetName
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f7bc]} cellSpurs: cellSpursCreateJobChainWithAttribute
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f83c]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x8b9800, taskset=*0x0, eventFlag=*0x9caa80, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f85c]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0x9caa80)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f85c]} sys_event: sys_event_queue_create(equeue_id=*0xd001f6a8, attr=*0xd001f688, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f85c]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x2f, eq=0x3e, req=0xffffffffffff0000, spup=*0xd001f6a0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=5, location=0, offset=27459584, size=2359296, pitch=3072, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=6, location=0, offset=32243712, size=983040, pitch=2560, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=7, location=0, offset=34209792, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=8, location=0, offset=51445760, size=3801088, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f23c]} cellGcmSys: cellGcmSetTile(index=9, location=0, offset=58982400, size=983040, pitch=2560, comp=0, base=0, bank=0)
RSX: W {RSXThread} TODO: NV4097_SET_POINT_PARAMS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZCULL_STATS_ENABLE: 0x1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} Creating RTT
RSX: W {RSXThread} NV3089_IMAGE_IN_SIZE: w=64, h=64, pitch=256, offset=0x1a2bf00, inX=0.000000, inY=0.000000, scaleX=1.000000, scaleY=1.000000
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x9
RSX: W {RSXThread} TODO: NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x21
RSX: W {RSXThread} TODO: NV4097_INLINE_ARRAY: 0x419d70e7
RSX: W {RSXThread} VP not found in buffer!
HLE: W {PPU[0x1] Thread (main_thread)[0x0031da5c]} sys_mutex: sys_mutex_create(mutex_id=*0x6d9464, attr=*0xd001fb70)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f69c]} cellSysmodule: cellSysmoduleLoadModule(id=0x000e: CELL_SYSMODULE_FS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f69c]} cellSysmodule: cellSysmoduleLoadModule(id=0x0011: CELL_SYSMODULE_AUDIO)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f69c]} cellSysmodule: cellSysmoduleLoadModule(id=0x000a: CELL_SYSMODULE_SPURS)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x200723fc, attr=*0xd001f7f0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x2007a4bc, attr=*0xd001f7f0, initial_val=1, max_val=1)
RSX: W {RSXThread} FP not found in buffer!
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x200694f0, attr=*0xd001f780, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x20069510, attr=*0xd001f8f0, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x20071cd4, attr=*0xd001f900, initial_val=1, max_val=1)
RSX: W {RSXThread} Add program :
RSX: W {RSXThread} *** vp id = 0
RSX: W {RSXThread} *** fp id = 1
HLE: W {PPU[0x1] Thread (main_thread)[0x0031d8f0]} sys_semaphore: sys_semaphore_create(sem_id=*0x200722bc, attr=*0xd001f830, initial_val=1, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f6bc]} cellAudio: cellAudioInit()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f49c]} cellSysutil: cellAudioOutGetState(audioOut=0x0, deviceIndex=0x0, state=*0xd001f8b0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f43c]} cellSysutil: cellAudioOutGetSoundAvailability(audioOut=0, type=0, fs=0x4, option=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f37c]} cellSysutil: cellAudioOutConfigure(audioOut=0, config=*0xd001f890, option=*0x0, waitForEvent=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f77c]} cellAudio: cellAudioPortOpen(audioParam=*0x200722d8, portNum=*0x6d9478)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f77c]} cellAudio: *** audio port opened(nChannel=8, nBlock=8, attr=0x0, level=1.000000): port = 0
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f71c]} cellAudio: cellAudioGetPortConfig(portNum=0, portConfig=*0x200722f8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} cellSpurs: cellSpursInitialize(spurs=*0x9e4300, nSpus=1, spuPriority=250, ppuPriority=1000, exitIfNoWork=2864385)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_process: sys_process_is_spu_lock_line_reservation_address(addr=0x9e4300, flags=0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_semaphore: sys_semaphore_create(sem_id=*0xd001f758, attr=*0xd001f738, initial_val=0, max_val=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_spu: sys_spu_thread_group_create(id=*0xd001f718, num=1, prio=250, attr=*0xd001f688)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_spu: sys_spu_thread_initialize(thread=*0xd001f660, group=0x57, spu_num=0, img=*0x9e5070, attr=*0xd001f650, arg=*0xd001f668)
HLE: E {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_spu: Unsupported SPU Thread options (0x2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9e50b0, attr=*0xd001f720)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sysPrxForUser: sys_lwcond_create(lwcond=*0x9e50c8, lwmutex=*0x9e50b0, attr=*0xd001f730)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_event: sys_event_queue_create(equeue_id=*0x9e505c, attr=*0xd001f5b8, event_queue_key=0x0, size=42)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x57, eq=0x5b, req=0xffffffffffff0000, spup=*0x9e43c9)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_event: sys_event_port_create(eport_id=*0x9e5060, port_type=1, name=0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_event: sys_event_port_connect_local(eport_id=0x5c, equeue_id=0x5b)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} cellSpurs: cellSpursEnableExceptionEventHandler(spurs=*0x9e4300, flag=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} sys_spu: sys_spu_thread_group_connect_event(id=0x57, eq=0x5b, et=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8dc]} cellSpurs: cellSpursWakeUp(spurs=*0x9e4300)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc7c]} sysPrxForUser: sys_lwmutex_create(lwmutex=*0x9ed280, attr=*0xd001f5e0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fb5c]} cellSpurs: cellSpursCreateTaskset(spurs=*0x9e4300, taskset=*0x9ed680, args=0x0, priority=*0xd001f860, maxContention=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fb5c]} cellSpurs: _cellSpursWorkloadAttributeInitialize(attr=*0xd001f490, revision=1, sdkVersion=0x33, pm=*0x200, size=0x1e40, data=0x9ed680, priority=*0xd001f860, minCnt=0x8, maxCnt=0x1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fb5c]} cellSpurs: cellSpursWorkloadAttributeSetName(attr=*0xd001f490, nameClass=*0x0, nameInstance=*0x0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fb5c]} cellSpurs: cellSpursAddWorkloadWithAttribute(spurs=*0x9e4300, wid=*0xd001f488, attr=*0xd001f490)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f83c]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x9ed680, eventFlag=*0x9ef000, flagClearMode=0, flagDirection=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f85c]} cellSpurs: cellSpursEventFlagAttachLv2EventQueue(eventFlag=*0x9ef000)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f85c]} sys_event: sys_event_queue_create(equeue_id=*0xd001f688, attr=*0xd001f668, event_queue_key=0x0, size=1)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f85c]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x57, eq=0x60, req=0xffffffffffff0000, spup=*0xd001f680)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f83c]} cellSpurs: _cellSpursEventFlagInitialize(spurs=*0x0, taskset=*0x9ed680, eventFlag=*0x9f3100, flagClearMode=0, flagDirection=2)
HLE: W {PPU[0x1] Thread (main_thread)[0x003d3944]} sys_event: sys_event_queue_create(equeue_id=*0x9ed000, attr=*0xd001f654, event_queue_key=0x0, size=8)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sysPrxForUser: sys_ppu_thread_create(thread_id=*0x9ea788, entry=0x538650, arg=0x0, prio=1000, stacksize=0x10000, flags=0x1, threadname=*0x4927c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sys_ppu_thread: _sys_ppu_thread_create(thread_id=*0x9ea788, param=*0xd001f5d8, arg=0x0, unk=0x0, prio=1000, stacksize=0x10000, flags=0x1, threadname=*0x4927c0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fc3c]} sys_ppu_thread: sys_ppu_thread_start(thread_id=0x62)
HLE: W {PPU[0x1] Thread (main_thread)[0x003d39d4]} sys_event: sys_event_port_create(eport_id=*0x9ecf80, port_type=1, name=0xfee1dead)
HLE: W {PPU[0x1] Thread (main_thread)[0x003d39ec]} sys_event: sys_event_port_connect_local(eport_id=0x63, equeue_id=0x61)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8fc]} cellSpurs: cellSpursAttachLv2EventQueue(spurs=*0x9e4300, queue=0x61, port=*0xd001f650, isDynamic=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f8fc]} sys_spu: sys_spu_thread_group_connect_event_all_threads(id=0x57, eq=0x61, req=0x2, spup=*0xd001f650)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fbbc]} cellSpurs: cellSpursCreateTask(taskset=*0x9ed680, taskID=*0x9eef80, elf=*0x4f1d80, context=*0x9f3180, size=0x3d400, lsPattern=*0x47c300, argument=*0xd001f710)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fbbc]} cellSpurs: cellSpursSendWorkloadSignal(spurs=*0x9e4300, wid=0)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040fbbc]} cellSpurs: cellSpursWakeUp(spurs=*0x9e4300)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} cellFs: cellFsOpen(path=*0x492dd8, flags=0, fd=*0xd001f630, arg=*0x0, size=0x0) -> sys_fs_open()
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: sys_fs_open(path=*0x492dd8, flags=0, fd=*0xd001f630, mode=0, arg=*0x0, size=0x0)
HLE: W {PPU[0x5e] Thread (SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_start(id=0x57)
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f57c]} sys_fs: *** path = '/dev_flash/sys/external/flashATRAC.pic'
HLE: W {PPU[0x1] Thread (main_thread)[0x0040f7fc]} cellSpurs: cellSpursEventFlagWait(eventFlag=*0x9ef000, mask=*0x776cbc, mode=1)
SPU: S {PPU[0x5e] Thread (SpursHdlr0)[0x00000000]} SPU Database initialized...
SPU: S {PPU[0x5e] Thread (SpursHdlr0)[0x00000000]} SPU Recompiler (ASMJIT) created...
HLE: W {PPU[0x5e] Thread (SpursHdlr0)[0x00000000]} sys_spu: sys_spu_thread_group_join(id=0x57, cause=*0x0, status=*0x0)
SPU: S {SPU[0x58] Thread (CellSpursKernel0)[0x00818]} Function detected [0x00818-0x00820] (size=0x8)
